{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "HAPPY_MOOD_URI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SAD_MOOD_URI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "internalType": "contract DeployMoodNft",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "moodNft",
      "outputs": [
        {
          "internalType": "contract MoodNft",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCanMintAndHaveABalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFlipTokenToSad",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInitializedCorrectly",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTokenURIDefaultIsCorrectlySet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b506146fb8061003d6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806381e167cf116100b8578063ba414fa61161007c578063ba414fa614610216578063d5f394881461022e578063db64562214610241578063e20c9f7114610249578063efdee94f14610251578063fa7626d41461026457600080fd5b806381e167cf146101be57806385226c81146101de578063916a17c6146101f3578063980327b8146101fb578063b5508aa91461020e57600080fd5b80633fc53740116100ff5780633fc537401461017c578063451f324614610191578063454314131461019957806366d9a9a0146101a157806370d15f8d146101b657600080fd5b80630a9254e41461013c5780631ed7831c1461014657806323b2484e146101645780633e5e3c231461016c5780633f7286f414610174575b600080fd5b610144610271565b005b61014e61033c565b60405161015b9190610fee565b60405180910390f35b61014461039e565b61014e610584565b61014e6105e4565b610184610644565b60405161015b919061108b565b610144610663565b6101446107ac565b6101a96109c9565b60405161015b91906110a5565b610144610ab8565b6101c6600181565b6040516001600160a01b03909116815260200161015b565b6101e6610bb1565b60405161015b9190611158565b6101a9610c81565b601b546101c6906001600160a01b031681565b6101e6610d67565b61021e610e37565b604051901515815260200161015b565b601c546101c6906001600160a01b031681565b610184610f62565b61014e610f81565b601d546101c6906001600160a01b031681565b60005461021e9060ff1681565b60405161027d90610fe1565b604051809103906000f080158015610299573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b0392909216918217905560408051636020311360e11b8152905163c04062269160048082019260209290919082900301816000875af11580156102f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031a91906111ba565b601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d80548060200260200160405190810160405280929190818152602001828054801561039457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610376575b5050505050905090565b60405180604001604052806008815260200167135bdbd90813919560c21b8152506040516020016103cf91906111e3565b60405160208183030381529060405280519060200120601b60009054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610438573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104609190810190611215565b60405160200161047091906111e3565b6040516020818303038152906040528051906020012014610493576104936112c2565b6040518060400160405280600281526020016126a760f11b8152506040516020016104be91906111e3565b60405160208183030381529060405280519060200120601b60009054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610527573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261054f9190810190611215565b60405160200161055f91906111e3565b6040516020818303038152906040528051906020012014610582576105826112c2565b565b6060600f805480602002602001604051908101604052809291908181526020018280548015610394576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610376575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610394576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610376575050505050905090565b604051806108e001604052806108a58152602001613e216108a5913981565b60405163ca669fa760e01b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156106b057600080fd5b505af11580156106c4573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b031663c2229fea6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561071857600080fd5b505af115801561072c573d6000803e3d6000fd5b5050601b546040516370a0823160e01b8152600160048201526001600160a01b0390911692506370a082319150602401602060405180830381865afa158015610779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079d91906112d8565b600114610582576105826112c2565b60405163ca669fa760e01b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156107f957600080fd5b505af115801561080d573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b031663c2229fea6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561086157600080fd5b505af1158015610875573d6000803e3d6000fd5b505060405163ca669fa760e01b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156108c657600080fd5b505af11580156108da573d6000803e3d6000fd5b5050601b5460405163060d0a3d60e51b8152600060048201526001600160a01b03909116925063c1a147a09150602401600060405180830381600087803b15801561092457600080fd5b505af1158015610938573d6000803e3d6000fd5b50505050604051806108e001604052806108a58152602001613e216108a5913960405160200161096891906111e3565b60408051808303601f19018152908290528051602090910120601b5463c87b56dd60e01b83526000600484015290916001600160a01b039091169063c87b56dd90602401600060405180830381865afa158015610527573d6000803e3d6000fd5b60606012805480602002602001604051908101604052809291908181526020016000905b82821015610aaf5760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610a9757602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610a595790505b505050505081525050815260200190600101906109ed565b50505050905090565b60405163ca669fa760e01b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015610b0557600080fd5b505af1158015610b19573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b031663c2229fea6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b6d57600080fd5b505af1158015610b81573d6000803e3d6000fd5b505050506040518061040001604052806103d58152602001613a4c6103d5913960405160200161096891906111e3565b60606011805480602002602001604051908101604052809291908181526020016000905b82821015610aaf578382906000526020600020018054610bf4906112f1565b80601f0160208091040260200160405190810160405280929190818152602001828054610c20906112f1565b8015610c6d5780601f10610c4257610100808354040283529160200191610c6d565b820191906000526020600020905b815481529060010190602001808311610c5057829003601f168201915b505050505081526020019060010190610bd5565b60606013805480602002602001604051908101604052809291908181526020016000905b82821015610aaf5760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610d4f57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610d115790505b50505050508152505081526020019060010190610ca5565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610aaf578382906000526020600020018054610daa906112f1565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd6906112f1565b8015610e235780601f10610df857610100808354040283529160200191610e23565b820191906000526020600020905b815481529060010190602001808311610e0657829003601f168201915b505050505081526020019060010190610d8b565b60008054610100900460ff1615610e575750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610f5d5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610ee5917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161132b565b60408051601f1981840301815290829052610eff916111e3565b6000604051808303816000865af19150503d8060008114610f3c576040519150601f19603f3d011682016040523d82523d6000602084013e610f41565b606091505b5091505080806020019051810190610f59919061135c565b9150505b919050565b6040518061040001604052806103d58152602001613a4c6103d5913981565b6060600c805480602002602001604051908101604052809291908181526020018280548015610394576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610376575050505050905090565b6126cd8061137f83390190565b6020808252825182820181905260009190848201906040850190845b8181101561102f5783516001600160a01b03168352928401929184019160010161100a565b50909695505050505050565b60005b8381101561105657818101518382015260200161103e565b50506000910152565b6000815180845261107781602086016020860161103b565b601f01601f19169290920160200192915050565b60208152600061109e602083018461105f565b9392505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561114957898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156111345783516001600160e01b0319168252928b019260019290920191908b019061110a565b50978a019795505050918701916001016110cd565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156111ad57603f1988860301845261119b85835161105f565b9450928501929085019060010161117f565b5092979650505050505050565b6000602082840312156111cc57600080fd5b81516001600160a01b038116811461109e57600080fd5b600082516111f581846020870161103b565b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561122757600080fd5b815167ffffffffffffffff8082111561123f57600080fd5b818401915084601f83011261125357600080fd5b815181811115611265576112656111ff565b604051601f8201601f19908116603f0116810190838211818310171561128d5761128d6111ff565b816040528281528760208487010111156112a657600080fd5b6112b783602083016020880161103b565b979650505050505050565b634e487b7160e01b600052600160045260246000fd5b6000602082840312156112ea57600080fd5b5051919050565b600181811c9082168061130557607f821691505b60208210810361132557634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b031983168152815160009061134e81600485016020870161103b565b919091016004019392505050565b60006020828403121561136e57600080fd5b8151801515811461109e57600080fdfe608060405260048054600160ff199182168117909255600c805490911690911790557fac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80600d5534801561005157600080fd5b5061266c806100616000396000f3fe60806040523480156200001157600080fd5b50600436106200005e5760003560e01c806330d871c61462000063578063910dde5e1462000092578063c040622614620000ab578063e83332fa14620000ce578063f8ccbf4714620000d8575b600080fd5b6200007a62000074366004620006c6565b620000f7565b604051620000899190620007a2565b60405180910390f35b6200009c600d5481565b60405190815260200162000089565b620000b562000190565b6040516001600160a01b03909116815260200162000089565b6200009c600e5481565b600c54620000e69060ff1681565b604051901515815260200162000089565b606060006040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c0000000000008152509050600062000161846040516020016200014c9190620007be565b604051602081830303815290604052620004de565b9050818160405160200162000178929190620007dc565b60405160208183030381529060405292505050919050565b600046617a6903620001a857600d54600e556200023e565b60405163c1978d1f60e01b815260206004820152600b60248201526a505249564154455f4b455960a81b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c1978d1f90606401602060405180830381865afa15801562000214573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200023a91906200080f565b600e555b6040516360f9bb1160e01b815260206004820152601b60248201527f2e2f696d616765732f64796e616d69634e66742f7361642e73766700000000006044820152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d906360f9bb1190606401600060405180830381865afa158015620002bf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620002e9919081019062000829565b6040516360f9bb1160e01b815260206004820152601d60248201527f2e2f696d616765732f64796e616d69634e66742f68617070792e7376670000006044820152909150600090737109709ecfa91a80626ff3989d68f67f5b1dd12d906360f9bb1190606401600060405180830381865afa1580156200036d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000397919081019062000829565b600e5460405163ce817d4760e01b8152919250737109709ecfa91a80626ff3989d68f67f5b1dd12d9163ce817d4791620003d79160040190815260200190565b600060405180830381600087803b158015620003f257600080fd5b505af115801562000407573d6000803e3d6000fd5b5050505060006200041883620000f7565b6200042383620000f7565b604051620004319062000643565b6200043e929190620008a9565b604051809103906000f0801580156200045b573d6000803e3d6000fd5b5090507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166376eadd366040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620004bd57600080fd5b505af1158015620004d2573d6000803e3d6000fd5b50929695505050505050565b60608151600003620004fe57505060408051602081019091526000815290565b6000604051806060016040528060408152602001620025f76040913990506000600384516002620005309190620008e8565b6200053c919062000904565b6200054990600462000927565b67ffffffffffffffff81111562000564576200056462000651565b6040519080825280601f01601f1916602001820160405280156200058f576020820181803683370190505b509050600182016020820185865187015b80821015620005fd576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250620005a0565b50506003865106600181146200061c5760028114620006305762000638565b603d6001830353603d600283035362000638565b603d60018303535b509195945050505050565b611cb5806200094283390190565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171562000693576200069362000651565b604052919050565b600067ffffffffffffffff821115620006b857620006b862000651565b50601f01601f191660200190565b600060208284031215620006d957600080fd5b813567ffffffffffffffff811115620006f157600080fd5b8201601f810184136200070357600080fd5b80356200071a62000714826200069b565b62000667565b8181528560208385010111156200073057600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156200076b57818101518382015260200162000751565b50506000910152565b600081518084526200078e8160208601602086016200074e565b601f01601f19169290920160200192915050565b602081526000620007b7602083018462000774565b9392505050565b60008251620007d28184602087016200074e565b9190910192915050565b60008351620007f08184602088016200074e565b835190830190620008068183602088016200074e565b01949350505050565b6000602082840312156200082257600080fd5b5051919050565b6000602082840312156200083c57600080fd5b815167ffffffffffffffff8111156200085457600080fd5b8201601f810184136200086657600080fd5b80516200087762000714826200069b565b8181528560208385010111156200088d57600080fd5b620008a08260208301602086016200074e565b95945050505050565b604081526000620008be604083018562000774565b8281036020840152620008a0818562000774565b634e487b7160e01b600052601160045260246000fd5b80820180821115620008fe57620008fe620008d2565b92915050565b6000826200092257634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417620008fe57620008fe620008d256fe60806040523480156200001157600080fd5b5060405162001cb538038062001cb58339810160408190526200003491620001f3565b60405180604001604052806008815260200167135bdbd90813919560c21b8152506040518060400160405280600281526020016126a760f11b8152508160009081620000819190620002ec565b506001620000908282620002ec565b505050620000ad620000a7620000d860201b60201c565b620000dc565b60006007556008620000c08382620002ec565b506009620000cf8282620002ec565b505050620003b8565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015657600080fd5b81516001600160401b03808211156200017357620001736200012e565b604051601f8301601f19908116603f011681019082821181831017156200019e576200019e6200012e565b81604052838152602092508683858801011115620001bb57600080fd5b600091505b83821015620001df5785820183015181830184015290820190620001c0565b600093810190920192909252949350505050565b600080604083850312156200020757600080fd5b82516001600160401b03808211156200021f57600080fd5b6200022d8683870162000144565b935060208501519150808211156200024457600080fd5b50620002538582860162000144565b9150509250929050565b600181811c908216806200027257607f821691505b6020821081036200029357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002e757600081815260208120601f850160051c81016020861015620002c25750805b601f850160051c820191505b81811015620002e357828155600101620002ce565b5050505b505050565b81516001600160401b038111156200030857620003086200012e565b62000320816200031984546200025d565b8462000299565b602080601f8311600181146200035857600084156200033f5750858301515b600019600386901b1c1916600185901b178555620002e3565b600085815260208120601f198616915b82811015620003895788860151825594840194600190910190840162000368565b5085821015620003a85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6118ed80620003c86000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b8578063c1a147a01161007c578063c1a147a014610266578063c2229fea14610279578063c87b56dd14610281578063e985e9c514610294578063f2fde38b146102a7578063fc842121146102ba57600080fd5b8063715018a61461021f5780638da5cb5b1461022757806395d89b4114610238578063a22cb46514610240578063b88d4fde1461025357600080fd5b806342842e0e116100ff57806342842e0e146101cc5780635de0682f146101df5780636352211e146101e75780636e02007d146101fa57806370a082311461020c57600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a457806323b872dd146101b9575b600080fd5b61014f61014a3660046112a6565b6102c2565b60405190151581526020015b60405180910390f35b61016c610314565b60405161015b919061131a565b61018c61018736600461132d565b6103a6565b6040516001600160a01b03909116815260200161015b565b6101b76101b2366004611362565b6103cd565b005b6101b76101c736600461138c565b6104e7565b6101b76101da36600461138c565b610518565b61016c610533565b61018c6101f536600461132d565b610542565b6007545b60405190815260200161015b565b6101fe61021a3660046113c8565b6105a2565b6101b7610628565b6006546001600160a01b031661018c565b61016c61063c565b6101b761024e3660046113e3565b61064b565b6101b7610261366004611435565b61065a565b6101b761027436600461132d565b610692565b6101b7610716565b61016c61028f36600461132d565b610760565b61014f6102a2366004611511565b610974565b6101b76102b53660046113c8565b6109a2565b61016c610a18565b60006001600160e01b031982166380ac58cd60e01b14806102f357506001600160e01b03198216635b5e139f60e01b145b8061030e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461032390611544565b80601f016020809104026020016040519081016040528092919081815260200182805461034f90611544565b801561039c5780601f106103715761010080835404028352916020019161039c565b820191906000526020600020905b81548152906001019060200180831161037f57829003601f168201915b5050505050905090565b60006103b182610a27565b506000908152600460205260409020546001600160a01b031690565b60006103d882610542565b9050806001600160a01b0316836001600160a01b03160361044a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061046657506104668133610974565b6104d85760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610441565b6104e28383610a86565b505050565b6104f13382610af4565b61050d5760405162461bcd60e51b81526004016104419061157e565b6104e2838383610b53565b6104e28383836040518060200160405280600081525061065a565b60606008805461032390611544565b6000818152600260205260408120546001600160a01b03168061030e5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610441565b60006001600160a01b03821661060c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610441565b506001600160a01b031660009081526003602052604090205490565b610630610cb7565b61063a6000610d11565b565b60606001805461032390611544565b610656338383610d63565b5050565b6106643383610af4565b6106805760405162461bcd60e51b81526004016104419061157e565b61068c84848484610e31565b50505050565b61069c3382610af4565b6106b9576040516385046ca760e01b815260040160405180910390fd5b6000818152600a602052604081205460ff1660018111156106dc576106dc6115cb565b036106fc576000908152600a60205260409020805460ff19166001179055565b6000818152600a60205260409020805460ff191690555b50565b61072233600754610e64565b6007546107309060016115f7565b60078190556040517f72102923c3d44433bd725cb2c744a4c92a536ad249b665dec9853a16ed66552590600090a2565b6000818152600260205260409020546060906001600160a01b0316610798576040516336faf6d760e11b815260040160405180910390fd5b6000600980546107a790611544565b80601f01602080910402602001604051908101604052809291908181526020018280546107d390611544565b80156108205780601f106107f557610100808354040283529160200191610820565b820191906000526020600020905b81548152906001019060200180831161080357829003601f168201915b509394506001935061083192505050565b6000848152600a602052604090205460ff166001811115610854576108546115cb565b036108e7576008805461086690611544565b80601f016020809104026020016040519081016040528092919081815260200182805461089290611544565b80156108df5780601f106108b4576101008083540402835291602001916108df565b820191906000526020600020905b8154815290600101906020018083116108c257829003601f168201915b505050505090505b60408051808201909152601d81527f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000602082015261094c610926610314565b8360405160200161093892919061160a565b604051602081830303815290604052610e7e565b60405160200161095d92919061171e565b604051602081830303815290604052915050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6109aa610cb7565b6001600160a01b038116610a0f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610441565b61071381610d11565b60606009805461032390611544565b6000818152600260205260409020546001600160a01b03166107135760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610441565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610abb82610542565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b0083610542565b9050806001600160a01b0316846001600160a01b03161480610b275750610b278185610974565b80610b4b5750836001600160a01b0316610b40846103a6565b6001600160a01b0316145b949350505050565b826001600160a01b0316610b6682610542565b6001600160a01b031614610b8c5760405162461bcd60e51b81526004016104419061174d565b6001600160a01b038216610bee5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610441565b826001600160a01b0316610c0182610542565b6001600160a01b031614610c275760405162461bcd60e51b81526004016104419061174d565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b0316331461063a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610441565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610dc45760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610441565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e3c848484610b53565b610e4884848484610fd1565b61068c5760405162461bcd60e51b815260040161044190611792565b6106568282604051806020016040528060008152506110d2565b60608151600003610e9d57505060408051602081019091526000815290565b60006040518060600160405280604081526020016118786040913990506000600384516002610ecc91906115f7565b610ed691906117e4565b610ee1906004611806565b67ffffffffffffffff811115610ef957610ef961141f565b6040519080825280601f01601f191660200182016040528015610f23576020820181803683370190505b509050600182016020820185865187015b80821015610f8f576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250610f34565b5050600386510660018114610fab5760028114610fbe57610fc6565b603d6001830353603d6002830353610fc6565b603d60018303535b509195945050505050565b60006001600160a01b0384163b156110c757604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061101590339089908890889060040161181d565b6020604051808303816000875af1925050508015611050575060408051601f3d908101601f1916820190925261104d9181019061185a565b60015b6110ad573d80801561107e576040519150601f19603f3d011682016040523d82523d6000602084013e611083565b606091505b5080516000036110a55760405162461bcd60e51b815260040161044190611792565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b4b565b506001949350505050565b6110dc8383611105565b6110e96000848484610fd1565b6104e25760405162461bcd60e51b815260040161044190611792565b6001600160a01b03821661115b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610441565b6000818152600260205260409020546001600160a01b0316156111c05760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610441565b6000818152600260205260409020546001600160a01b0316156112255760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610441565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461071357600080fd5b6000602082840312156112b857600080fd5b81356112c381611290565b9392505050565b60005b838110156112e55781810151838201526020016112cd565b50506000910152565b600081518084526113068160208601602086016112ca565b601f01601f19169290920160200192915050565b6020815260006112c360208301846112ee565b60006020828403121561133f57600080fd5b5035919050565b80356001600160a01b038116811461135d57600080fd5b919050565b6000806040838503121561137557600080fd5b61137e83611346565b946020939093013593505050565b6000806000606084860312156113a157600080fd5b6113aa84611346565b92506113b860208501611346565b9150604084013590509250925092565b6000602082840312156113da57600080fd5b6112c382611346565b600080604083850312156113f657600080fd5b6113ff83611346565b91506020830135801515811461141457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561144b57600080fd5b61145485611346565b935061146260208601611346565b925060408501359150606085013567ffffffffffffffff8082111561148657600080fd5b818701915087601f83011261149a57600080fd5b8135818111156114ac576114ac61141f565b604051601f8201601f19908116603f011681019083821181831017156114d4576114d461141f565b816040528281528a60208487010111156114ed57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561152457600080fd5b61152d83611346565b915061153b60208401611346565b90509250929050565b600181811c9082168061155857607f821691505b60208210810361157857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561030e5761030e6115e1565b683d913730b6b2911d1160b91b8152825160009061162f8160098501602088016112ca565b7f222c20226465736372697074696f6e223a22416e204e465420746861742072656009918401918201527f666c6563747320746865206d6f6f64206f6620746865206f776e65722c20313060298201526e018129037b71021b430b4b71091161608d1b60498201527f2261747472696275746573223a205b7b2274726169745f74797065223a20226d60588201527f6f6f64696e657373222c202276616c7565223a203130307d5d2c2022696d616760788201526332911d1160e11b6098820152835161170381609c8401602088016112ca565b61227d60f01b609c9290910191820152609e01949350505050565b600083516117308184602088016112ca565b8351908301906117448183602088016112ca565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008261180157634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761030e5761030e6115e1565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611850908301846112ee565b9695505050505050565b60006020828403121561186c57600080fd5b81516112c38161129056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212200b696ea67147bf51f1c23e01774b66d490d09375c3d463752a89e5cf37bf4cb364736f6c634300081400334142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220bd592da43c473f547a42e86a684070021e2dce09cdcc835d36e2246fb1f4884d64736f6c63430008140033646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c65794a755957316c496a6f69545739765a43424f526c51694c4341695a47567a59334a7063485270623234694f694a426269424f526c516764476868644342795a575a735a574e306379423061475567625739765a4342765a69423061475567623364755a584973494445774d43556762323467513268686157346849697767496d463064484a70596e56305a584d694f69426265794a30636d4670644639306558426c496a6f67496d317662325270626d567a6379497349434a32595778315a534936494445774d4831644c434169615731685a3255694f694a6b595852684f6d6c745957646c4c334e325a79743462577737596d467a5a5459304c464249546a4a6165554979595664574d3146744f54525155306c33535552425a3031715158644a52456c3354554e4a5a3251796247746b5232633553577052643031445357644a523268735956646b623252454d476c4f5245463353576c434e474a586548566a656a4270595568534d474e4562335a4d4d32517a5a486b314d3031354e585a6a62574e3254577042643031444f58706b62574e70554764765a306c456547706857457071596b64565a316b7a5a7a6c4a616b563354554e4a5a316b7a617a6c4a616b563354554e4a5a31707462484e69524442705a56645763324a484f544e4a61554a3555464e4a4d3039445357646a4d314a35596a4a3062464254536d6c6952305a7159586c4a5a324d7a556e6c694d6e52735446686b63467049556d395155306c3653576b344b304e705157645152324e6e57544a3461474d7a54546c4a62565931576c684e6156426e6232644a5130466e5545644f63474e74546e4e6155304a715a5551776155357152576c4a5230343155464e4a4e4531705357646a616a42705456524a615578364e45744a5130466e53555234616d4659536d70695231566e57544e6e4f556c7152586c4f65556c6e57544e724f556c715a336c4a61554a3555464e4a6545317053585a515a32396e53555233646c70364e45744a51304534593064474d474644516d7451553070305456524e4d6b78715a33684a52455634546d6b304d5530795458564f616d746e5457705a645531555933524f616c4631545652465a3035455358525052455631546c524a644578715933704a61554a365a456873633170554d476c616257787a596b5277645749794e57785065554a365a45684b646d457956545a4a5230707a5756644f636b3935516e706b5345703259544a56644751796247746b523263325355524e4e306c704f437444616e6432597a4e61626c426e5054306966513d3d646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c65794a755957316c496a6f69545739765a43424f526c51694c4341695a47567a59334a7063485270623234694f694a426269424f526c516764476868644342795a575a735a574e306379423061475567625739765a4342765a69423061475567623364755a584973494445774d43556762323467513268686157346849697767496d463064484a70596e56305a584d694f69426265794a30636d4670644639306558426c496a6f67496d317662325270626d567a6379497349434a32595778315a534936494445774d4831644c434169615731685a3255694f694a6b595852684f6d6c745957646c4c334e325a79743462577737596d467a5a5459304c4642454f5452695633646e5a47315765574d7962485a69616a427054564d3064306c70516e706b52305a31576b6447633249794e57785155307031596e6c4a4c31426e627a686a4d3170755355686b63467049556d395155306c345455524a4d474e495a326c4a523268735956646b623252454d476c4e56454635546b68434e456c70516a4a685631597a555730354e4642545358644a5245466e54565242655535445158684e52456b7753576c434e474a586548566a656a4270595568534d474e4562335a4d4d32517a5a486b314d3031354e585a6a62574e3254577042643031444f58706b62574e70554764765a306c456548645a57464a765355646163474a48647a6c4a615531365458704e61556c4855546c4a617a41785456524a5a303571556b524e616c6b775447705a5a3035715557644f616c466e5457705a4d4578715757644f616c466e546c524665574e365358644e517a5179535552524d4539445154424f5247646e546b52524e456c4555544250517a423554555242645535705154424f52476430546b52524e465636597a4650557a51775355525a4d456c455658684e61554579546b6877644531445154524e616b4a715446524a643035544e44424a524546305458706a6555785552544a4f615451795446524e4d3031704d48704f656b70365456525a4d6b78715758524e656d4e355355524e4d3031704d48704f656b6c6e5458706a65556c4552544a4f615451795355524e4d3031705158704f656b6c305456525a4d6b78715757644e656d4e355446524e4d3031705158704f656b6f3253576b344b304e705157645153454a6f5a45646e5a31707462484e6952444270535442564d6c4a55576b5a4f61556c6e576b5177615652555658684e61554634546b5243616b78555358644f557a5177535552426445313659336c4a52455579546d6b304d6b785554544e4e61554636546e704b656b315557544a4d616c6c6e5458706a65556c4554544e4e61554636546e704a5a30313659336c4d56455579546d6b304d6b6c4554544e4e61544236546e704a6445315557544a4d616c6c305458706a6555785554544e4e61544236546e704b4e6c5255535452505130457754577047614535455a33564e5245566e546b526e645531455257644e51304633535552465a3039555757644e5130457754304d306430315451544250517a523354564e4264306c455157644e557a4131546d6c42643256744d48704f656c6c6e5457706a655746444d444250517a523457586b774d4578715357644e517a417a5447706e644531354e486c4d5647643154564d774d307871556b524f616b45775355525a656b35704e48684a5246557954576b304d556c455654564f655545785456524a5a303555617a4e6a6554413154576b3065456c455454564d616b5630543152566455394451545250517a517957586b77645531355154424d616b6c3054586b304e556c455933564f517a4130544770465a3035354e44425452453079545564464e456c455a32644e5130463353555246644539444d44524d616c4a71546b4d304d4578555a7a424d616b316e546e7052645535544d48684f56455631546d6c42654535715158524e5646563454477061656b31555654464d616c6c6e546d706a645531355158684f616b466e5456525665457871576d685051304530535552425a3031445158684d5647646e54304d304d4756744d486c4f517a423554577053614535455a33564e5245566e546b526e645531455257644e51304633535552465a3031444d44564f6155457754304d306430315451544250517a523354564e4264306c455157644e55304633535552724d6d567053585a515a32396e5355523464316c59556d394a52317077596b64334f556c705458704e656b3170535564524f556c724d486c505247646e546b524a65466c555554524a52464530535552425a3031545158644a52477379535552425a3035455a32644f5247646e54554e4265456c455158525056466c6e54556877644531715354424a524556345457314e644539455658564f55304633544652464d5535544e444a4a52466b7a5447704e644531555758644a5245557854564d304d6c6c555a32645051304633535552425a3031445154524a52476431546b646e4d4539444e48685a656c463154576c4264306c4559335650517a42365447704a5a3039444e48684d56474e31546b4e42656b78715933524f52477431546c4e424d4535544e48704d564763305447705a5a30395556585650517a413054304d304d6d4e3661336c4a52453031544770465a303955565856505130453054304d304d6c6c354e48704a5246463154576c42656b78716132644f655451775355526e6455315451544e4d616c4a4a546d705a4d466c555a32645051304633535552425a3031445154524d56476431546b564e4d6b35715933564f6155457954555242645531355154465056474e31546c4e424d5531365457644f5645563553555256656b307a6348524e56456b305446524665453174525442505130457754304e4264306c455257644e51304531546d6c4264306c455554524a52464530535552425a3031545158644d56477379535552434e6b6c704f437444616e6432597a4e61626c426e627a306966513d3da2646970667358221220f6823b121a6023defc31903359c2aa17803033cb9469b355eaecf4bb16b0b34164736f6c63430008140033",
    "sourceMap": "335:4503:40:-:0;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3161:44:5;;;;;;;;;;;335:4503:40;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "335:4503:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3878:90;;;:::i;:::-;;2161:134:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3971:274:40;;;:::i;2930:133:8:-;;;:::i;2631:141::-;;;:::i;1574:2255:40:-;;;:::i;:::-;;;;;;;:::i;4248:129::-;;;:::i;4597:239::-;;;:::i;2447:178:8:-;;;:::i;:::-;;;;;;;:::i;4380:214:40:-;;;:::i;3833:41::-;;3872:1;3833:41;;;;;-1:-1:-1;;;;;3171:32:41;;;3153:51;;3141:2;3126:18;3833:41:40;3007:203:41;2301:140:8;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;454:22:40:-;;;;;-1:-1:-1;;;;;454:22:40;;;1866:141:8;;;:::i;1819:584:0:-;;;:::i;:::-;;;4413:14:41;;4406:22;4388:41;;4376:2;4361:18;1819:584:0;4248:187:41;479:29:40;;;;;-1:-1:-1;;;;;479:29:40;;;545:1025;;;:::i;2013:142:8:-;;;:::i;511:30:40:-;;;;;-1:-1:-1;;;;;511:30:40;;;1572:26:0;;;;;;;;;3878:90:40;3917:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3906:8:40;:30;;-1:-1:-1;;;;;;3906:30:40;-1:-1:-1;;;;;3906:30:40;;;;;;;;;3950:14;;;-1:-1:-1;;;3950:14:40;;;;:12;;:14;;;;;;;;;;;;;;;-1:-1:-1;3906:30:40;3950:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3940:7;:24;;-1:-1:-1;;;;;;3940:24:40;-1:-1:-1;;;;;3940:24:40;;;;;;;;;;3878:90::o;2161:134:8:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:8;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;3971:274:40:-;4113:8;;;;;;;;;;;;;-1:-1:-1;;;4113:8:40;;;4095:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;4085:39;;;;;;4061:7;;;;;;;;;-1:-1:-1;;;;;4061:7:40;-1:-1:-1;;;;;4061:12:40;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4061:14:40;;;;;;;;;;;;:::i;:::-;4044:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;4034:43;;;;;;:90;4023:105;;;;:::i;:::-;4224:10;;;;;;;;;;;;;-1:-1:-1;;;4224:10:40;;;4206:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;4196:41;;;;;;4170:7;;;;;;;;;-1:-1:-1;;;;;4170:7:40;-1:-1:-1;;;;;4170:14:40;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4170:16:40;;;;;;;;;;;;:::i;:::-;4153:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;4143:45;;;;;;:94;4132:109;;;;:::i;:::-;3971:274::o;2930:133:8:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:8;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:8;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;1574:2255:40:-;;;;;;;;;;;;;;;;;;;:::o;4248:129::-;4297:14;;-1:-1:-1;;;4297:14:40;;3872:1;4297:14;;;3153:51:41;4297:8:40;;;;3126:18:41;;4297:14:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4315:7;;;;;;;;;-1:-1:-1;;;;;4315:7:40;-1:-1:-1;;;;;4315:15:40;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4344:7:40;;:23;;-1:-1:-1;;;4344:23:40;;:7;:23;;;3153:51:41;-1:-1:-1;;;;;4344:7:40;;;;-1:-1:-1;4344:17:40;;-1:-1:-1;3126:18:41;;4344:23:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4371:1;4344:28;4337:36;;;;:::i;4597:239::-;4638:14;;-1:-1:-1;;;4638:14:40;;3872:1;4638:14;;;3153:51:41;4638:8:40;;;;3126:18:41;;4638:14:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4656:7;;;;;;;;;-1:-1:-1;;;;;4656:7:40;-1:-1:-1;;;;;4656:15:40;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4678:14:40;;-1:-1:-1;;;4678:14:40;;3872:1;4678:14;;;3153:51:41;4678:8:40;;-1:-1:-1;4678:8:40;;-1:-1:-1;3126:18:41;;4678:14:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4696:7:40;;:19;;-1:-1:-1;;;4696:19:40;;:7;:19;;;6786:25:41;-1:-1:-1;;;;;4696:7:40;;;;-1:-1:-1;4696:16:40;;-1:-1:-1;6759:18:41;;4696:19:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4814:12;;;;;;;;;;;;;;;;;4797:30;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;4797:30:40;;;;;;;4787:41;;4797:30;4787:41;;;;4758:7;;-1:-1:-1;;;4758:19:40;;:7;:19;;;6786:25:41;4787:41:40;;-1:-1:-1;;;;;4758:7:40;;;;:16;;6759:18:41;;4758:19:40;;;;;;;;;;;;;;;;;;;;;;2447:178:8;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;4380:214:40:-;4436:14;;-1:-1:-1;;;4436:14:40;;3872:1;4436:14;;;3153:51:41;4436:8:40;;;;3126:18:41;;4436:14:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4454:7;;;;;;;;;-1:-1:-1;;;;;4454:7:40;-1:-1:-1;;;;;4454:15:40;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4570:14;;;;;;;;;;;;;;;;;4553:32;;;;;;;;:::i;2301:140:8:-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;7381:51:41;;;-1:-1:-1;;;7448:18:41;;;7441:34;2196:43:0;;;;;;;;;7354:18:41;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;545:1025:40:-;;;;;;;;;;;;;;;;;;;:::o;2013:142:8:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:8;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;-1:-1:-1:-;;;;;;;;:::o;14:658:41:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:41;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:41;;14:658;-1:-1:-1;;;;;;14:658:41:o;677:250::-;762:1;772:113;786:6;783:1;780:13;772:113;;;862:11;;;856:18;843:11;;;836:39;808:2;801:10;772:113;;;-1:-1:-1;;919:1:41;901:16;;894:27;677:250::o;932:271::-;974:3;1012:5;1006:12;1039:6;1034:3;1027:19;1055:76;1124:6;1117:4;1112:3;1108:14;1101:4;1094:5;1090:16;1055:76;:::i;:::-;1185:2;1164:15;-1:-1:-1;;1160:29:41;1151:39;;;;1192:4;1147:50;;932:271;-1:-1:-1;;932:271:41:o;1208:220::-;1357:2;1346:9;1339:21;1320:4;1377:45;1418:2;1407:9;1403:18;1395:6;1377:45;:::i;:::-;1369:53;1208:220;-1:-1:-1;;;1208:220:41:o;1433:1569::-;1637:4;1666:2;1706;1695:9;1691:18;1736:2;1725:9;1718:21;1759:6;1794;1788:13;1825:6;1817;1810:22;1851:2;1841:12;;1884:2;1873:9;1869:18;1862:25;;1946:2;1936:6;1933:1;1929:14;1918:9;1914:30;1910:39;1984:2;1976:6;1972:15;2005:1;2026;2036:937;2052:6;2047:3;2044:15;2036:937;;;2121:22;;;-1:-1:-1;;2117:36:41;2105:49;;2177:13;;2264:9;;-1:-1:-1;;;;;2260:35:41;2245:51;;2335:11;;2329:18;2367:15;;;2360:27;;;2448:19;;2217:15;;;2480:24;;;2570:21;;;;2615:1;;2538:2;2526:15;;;2629:236;2645:8;2640:3;2637:17;2629:236;;;2726:15;;-1:-1:-1;;;;;;2722:42:41;2708:57;;2834:17;;;;2673:1;2664:11;;;;;2791:14;;;;2629:236;;;-1:-1:-1;2951:12:41;;;;2888:5;-1:-1:-1;;;2916:15:41;;;;2078:1;2069:11;2036:937;;;-1:-1:-1;2990:6:41;;1433:1569;-1:-1:-1;;;;;;;;;1433:1569:41:o;3215:803::-;3377:4;3406:2;3446;3435:9;3431:18;3476:2;3465:9;3458:21;3499:6;3534;3528:13;3565:6;3557;3550:22;3603:2;3592:9;3588:18;3581:25;;3665:2;3655:6;3652:1;3648:14;3637:9;3633:30;3629:39;3615:53;;3703:2;3695:6;3691:15;3724:1;3734:255;3748:6;3745:1;3742:13;3734:255;;;3841:2;3837:7;3825:9;3817:6;3813:22;3809:36;3804:3;3797:49;3869:40;3902:6;3893;3887:13;3869:40;:::i;:::-;3859:50;-1:-1:-1;3967:12:41;;;;3932:15;;;;3770:1;3763:9;3734:255;;;-1:-1:-1;4006:6:41;;3215:803;-1:-1:-1;;;;;;;3215:803:41:o;4671:307::-;4758:6;4811:2;4799:9;4790:7;4786:23;4782:32;4779:52;;;4827:1;4824;4817:12;4779:52;4853:16;;-1:-1:-1;;;;;4898:31:41;;4888:42;;4878:70;;4944:1;4941;4934:12;4983:289;5114:3;5152:6;5146:13;5168:66;5227:6;5222:3;5215:4;5207:6;5203:17;5168:66;:::i;:::-;5250:16;;;;;4983:289;-1:-1:-1;;4983:289:41:o;5277:127::-;5338:10;5333:3;5329:20;5326:1;5319:31;5369:4;5366:1;5359:15;5393:4;5390:1;5383:15;5409:897;5489:6;5542:2;5530:9;5521:7;5517:23;5513:32;5510:52;;;5558:1;5555;5548:12;5510:52;5591:9;5585:16;5620:18;5661:2;5653:6;5650:14;5647:34;;;5677:1;5674;5667:12;5647:34;5715:6;5704:9;5700:22;5690:32;;5760:7;5753:4;5749:2;5745:13;5741:27;5731:55;;5782:1;5779;5772:12;5731:55;5811:2;5805:9;5833:2;5829;5826:10;5823:36;;;5839:18;;:::i;:::-;5914:2;5908:9;5882:2;5968:13;;-1:-1:-1;;5964:22:41;;;5988:2;5960:31;5956:40;5944:53;;;6012:18;;;6032:22;;;6009:46;6006:72;;;6058:18;;:::i;:::-;6098:10;6094:2;6087:22;6133:2;6125:6;6118:18;6173:7;6168:2;6163;6159;6155:11;6151:20;6148:33;6145:53;;;6194:1;6191;6184:12;6145:53;6207:68;6272:2;6267;6259:6;6255:15;6250:2;6246;6242:11;6207:68;:::i;:::-;6294:6;5409:897;-1:-1:-1;;;;;;;5409:897:41:o;6311:127::-;6372:10;6367:3;6363:20;6360:1;6353:31;6403:4;6400:1;6393:15;6427:4;6424:1;6417:15;6443:184;6513:6;6566:2;6554:9;6545:7;6541:23;6537:32;6534:52;;;6582:1;6579;6572:12;6534:52;-1:-1:-1;6605:16:41;;6443:184;-1:-1:-1;6443:184:41:o;6822:380::-;6901:1;6897:12;;;;6944;;;6965:61;;7019:4;7011:6;7007:17;6997:27;;6965:61;7072:2;7064:6;7061:14;7041:18;7038:38;7035:161;;7118:10;7113:3;7109:20;7106:1;7099:31;7153:4;7150:1;7143:15;7181:4;7178:1;7171:15;7035:161;;6822:380;;;:::o;7486:384::-;-1:-1:-1;;;;;;7671:33:41;;7659:46;;7728:13;;7641:3;;7750:74;7728:13;7813:1;7804:11;;7797:4;7785:17;;7750:74;:::i;:::-;7844:16;;;;7862:1;7840:24;;7486:384;-1:-1:-1;;;7486:384:41:o;8167:277::-;8234:6;8287:2;8275:9;8266:7;8262:23;8258:32;8255:52;;;8303:1;8300;8293:12;8255:52;8335:9;8329:16;8388:5;8381:13;8374:21;8367:5;8364:32;8354:60;;8410:1;8407;8400:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "HAPPY_MOOD_URI()": "db645622",
    "IS_TEST()": "fa7626d4",
    "SAD_MOOD_URI()": "3fc53740",
    "USER()": "81e167cf",
    "deployer()": "d5f39488",
    "deployerAddress()": "efdee94f",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "moodNft()": "980327b8",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testCanMintAndHaveABalance()": "451f3246",
    "testFlipTokenToSad()": "45431413",
    "testInitializedCorrectly()": "23b2484e",
    "testTokenURIDefaultIsCorrectlySet()": "70d15f8d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"HAPPY_MOOD_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SAD_MOOD_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"contract DeployMoodNft\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"moodNft\",\"outputs\":[{\"internalType\":\"contract MoodNft\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCanMintAndHaveABalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFlipTokenToSad\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testInitializedCorrectly\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTokenURIDefaultIsCorrectlySet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/MoodNftTest.sol\":\"MoodNftTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0xd566affaba92598bcd059dcb3714a968aeedb365ec0d666815e8b38519e0f433\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fb5f7a97d2a7a06e10c198b60f05e64176eb4ef306b72800c168e7a7ec51693\",\"dweb:/ipfs/Qmcep4r7YEU3BwFJNTTxZsdCVzBYdtcVp8oDtmwLoZGRzP\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5\",\"dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d\",\"dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2\",\"dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/foundry-devops/src/DevOpsTools.sol\":{\"keccak256\":\"0xb63808a655f76399c09301573e106ee0b81a1b70c860f5dc24c7e06c65590c44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d92b1de9e989894abef8c68ae471c15f74eabebf123e41e71499ca446938117\",\"dweb:/ipfs/QmUsK8x9UHwVsiixkrmFpAcd2q2vy5ujrKNhfvSNospjff\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30\",\"dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Base64.sol\":{\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96\",\"dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"script/DeployMoodNft.s.sol\":{\"keccak256\":\"0x4146c026f093eb60b45f6d267fdd28f22111cb09659b757bc88f7f75b7a255f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1b88332fad28a9f17377a4c31fa76ea9834a584ccc54f53d14ca215f1d6fa1\",\"dweb:/ipfs/QmZHAhxtPmVudm1ExQRBA5YDviQv7yww6K9Xvh53HMDU58\"]},\"script/Interactions.s.sol\":{\"keccak256\":\"0x80677d46eaa881dac552f631b3c06fefb5f484c3e031766398aac9b61a19bac6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa585c8ab222eeb55a446b905c81a44a6e7591e32addfbb07dafe9bf1c345561\",\"dweb:/ipfs/QmaV46nviH3wJ6hHPWDW4DdoGTZMbvYWvcgpFxMkCxXaLB\"]},\"src/BasicNft.sol\":{\"keccak256\":\"0xf893b4ffb5f1a010210a97f9334d7b95569bd369f0addcfd15114834d226c709\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://968012942cdf8295776b89a0bc10a6306aad39a3d447f54610448a90cc4e7707\",\"dweb:/ipfs/QmcUqFzZUNDGCvnoSkxALXkciTg7kEArUwPtpXHrU1ki8g\"]},\"src/MoodNft.sol\":{\"keccak256\":\"0x823361905eda34140ea81c84f48e2e646eaa24554ed049b70c0eddf1e8a91fad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8621ba6f0e9cf42e2df9d9db394a6b4da30d767a405b5fd5de66abab17a5770\",\"dweb:/ipfs/QmSP1Qj6TLyQT4MH4ztfvgn6BoFdhRKKcCNCiAj5nNMGDs\"]},\"test/MoodNftTest.sol\":{\"keccak256\":\"0xe2c143d96e1824f58cbf666c0d7dbee9b9885bf53edd5aa08653de9864ad3680\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82423d234f26cd3a8a4c92e7950035025c9d0740ac8e47ec4c8d04caa90101fc\",\"dweb:/ipfs/QmUFAnezytRH8dTYKPmr7puwZKsaceN4oGJL5odnhaCge5\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HAPPY_MOOD_URI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SAD_MOOD_URI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "USER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "deployer",
          "outputs": [
            {
              "internalType": "contract DeployMoodNft",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "deployerAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "moodNft",
          "outputs": [
            {
              "internalType": "contract MoodNft",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCanMintAndHaveABalance"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFlipTokenToSad"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testInitializedCorrectly"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTokenURIDefaultIsCorrectlySet"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":foundry-devops/=lib/foundry-devops/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/MoodNftTest.sol": "MoodNftTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0xd566affaba92598bcd059dcb3714a968aeedb365ec0d666815e8b38519e0f433",
        "urls": [
          "bzz-raw://2fb5f7a97d2a7a06e10c198b60f05e64176eb4ef306b72800c168e7a7ec51693",
          "dweb:/ipfs/Qmcep4r7YEU3BwFJNTTxZsdCVzBYdtcVp8oDtmwLoZGRzP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf",
        "urls": [
          "bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5",
          "dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86",
        "urls": [
          "bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d",
          "dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a",
        "urls": [
          "bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2",
          "dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/foundry-devops/src/DevOpsTools.sol": {
        "keccak256": "0xb63808a655f76399c09301573e106ee0b81a1b70c860f5dc24c7e06c65590c44",
        "urls": [
          "bzz-raw://1d92b1de9e989894abef8c68ae471c15f74eabebf123e41e71499ca446938117",
          "dweb:/ipfs/QmUsK8x9UHwVsiixkrmFpAcd2q2vy5ujrKNhfvSNospjff"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118",
        "urls": [
          "bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30",
          "dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Base64.sol": {
        "keccak256": "0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136",
        "urls": [
          "bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96",
          "dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "script/DeployMoodNft.s.sol": {
        "keccak256": "0x4146c026f093eb60b45f6d267fdd28f22111cb09659b757bc88f7f75b7a255f6",
        "urls": [
          "bzz-raw://8b1b88332fad28a9f17377a4c31fa76ea9834a584ccc54f53d14ca215f1d6fa1",
          "dweb:/ipfs/QmZHAhxtPmVudm1ExQRBA5YDviQv7yww6K9Xvh53HMDU58"
        ],
        "license": "MIT"
      },
      "script/Interactions.s.sol": {
        "keccak256": "0x80677d46eaa881dac552f631b3c06fefb5f484c3e031766398aac9b61a19bac6",
        "urls": [
          "bzz-raw://fa585c8ab222eeb55a446b905c81a44a6e7591e32addfbb07dafe9bf1c345561",
          "dweb:/ipfs/QmaV46nviH3wJ6hHPWDW4DdoGTZMbvYWvcgpFxMkCxXaLB"
        ],
        "license": "MIT"
      },
      "src/BasicNft.sol": {
        "keccak256": "0xf893b4ffb5f1a010210a97f9334d7b95569bd369f0addcfd15114834d226c709",
        "urls": [
          "bzz-raw://968012942cdf8295776b89a0bc10a6306aad39a3d447f54610448a90cc4e7707",
          "dweb:/ipfs/QmcUqFzZUNDGCvnoSkxALXkciTg7kEArUwPtpXHrU1ki8g"
        ],
        "license": "MIT"
      },
      "src/MoodNft.sol": {
        "keccak256": "0x823361905eda34140ea81c84f48e2e646eaa24554ed049b70c0eddf1e8a91fad",
        "urls": [
          "bzz-raw://e8621ba6f0e9cf42e2df9d9db394a6b4da30d767a405b5fd5de66abab17a5770",
          "dweb:/ipfs/QmSP1Qj6TLyQT4MH4ztfvgn6BoFdhRKKcCNCiAj5nNMGDs"
        ],
        "license": "MIT"
      },
      "test/MoodNftTest.sol": {
        "keccak256": "0xe2c143d96e1824f58cbf666c0d7dbee9b9885bf53edd5aa08653de9864ad3680",
        "urls": [
          "bzz-raw://82423d234f26cd3a8a4c92e7950035025c9d0740ac8e47ec4c8d04caa90101fc",
          "dweb:/ipfs/QmUFAnezytRH8dTYKPmr7puwZKsaceN4oGJL5odnhaCge5"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/MoodNftTest.sol",
    "id": 41994,
    "exportedSymbols": {
      "DeployMoodNft": [
        40618
      ],
      "MintBasicNft": [
        40676
      ],
      "MoodNft": [
        41056
      ],
      "MoodNftTest": [
        41993
      ],
      "StdCheats": [
        14991
      ],
      "Test": [
        19572
      ],
      "console": [
        29142
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:4806:40",
    "nodes": [
      {
        "id": 41788,
        "nodeType": "PragmaDirective",
        "src": "33:24:40",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 41790,
        "nodeType": "ImportDirective",
        "src": "59:62:40",
        "nodes": [],
        "absolutePath": "script/DeployMoodNft.s.sol",
        "file": "../script/DeployMoodNft.s.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41994,
        "sourceUnit": 40619,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41789,
              "name": "DeployMoodNft",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40618,
              "src": "68:13:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41792,
        "nodeType": "ImportDirective",
        "src": "122:45:40",
        "nodes": [],
        "absolutePath": "src/MoodNft.sol",
        "file": "../src/MoodNft.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41994,
        "sourceUnit": 41057,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41791,
              "name": "MoodNft",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41056,
              "src": "131:7:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41795,
        "nodeType": "ImportDirective",
        "src": "168:51:40",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41994,
        "sourceUnit": 19573,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41793,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 19572,
              "src": "177:4:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 41794,
              "name": "console",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29142,
              "src": "183:7:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41797,
        "nodeType": "ImportDirective",
        "src": "220:52:40",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/StdCheats.sol",
        "file": "forge-std/StdCheats.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41994,
        "sourceUnit": 14992,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41796,
              "name": "StdCheats",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14991,
              "src": "229:9:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41799,
        "nodeType": "ImportDirective",
        "src": "273:60:40",
        "nodes": [],
        "absolutePath": "script/Interactions.s.sol",
        "file": "../script/Interactions.s.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41994,
        "sourceUnit": 40765,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41798,
              "name": "MintBasicNft",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40676,
              "src": "282:12:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41993,
        "nodeType": "ContractDefinition",
        "src": "335:4503:40",
        "nodes": [
          {
            "id": 41806,
            "nodeType": "VariableDeclaration",
            "src": "378:37:40",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "NFT_NAME",
            "nameLocation": "394:8:40",
            "scope": 41993,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 41804,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "378:6:40",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4d6f6f64204e4654",
              "id": 41805,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "405:10:40",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_061f95ad754b8b2fc14caedf72a009801343f11d011419388184f383cc4c2b73",
                "typeString": "literal_string \"Mood NFT\""
              },
              "value": "Mood NFT"
            },
            "visibility": "internal"
          },
          {
            "id": 41809,
            "nodeType": "VariableDeclaration",
            "src": "418:33:40",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "NFT_SYMBOL",
            "nameLocation": "434:10:40",
            "scope": 41993,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 41807,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "418:6:40",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4d4e",
              "id": 41808,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "447:4:40",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_a58cf80943770dd084f078bec17346ccb44c1ca309c9db7e14b1781d30f61dc0",
                "typeString": "literal_string \"MN\""
              },
              "value": "MN"
            },
            "visibility": "internal"
          },
          {
            "id": 41812,
            "nodeType": "VariableDeclaration",
            "src": "454:22:40",
            "nodes": [],
            "constant": false,
            "functionSelector": "980327b8",
            "mutability": "mutable",
            "name": "moodNft",
            "nameLocation": "469:7:40",
            "scope": 41993,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MoodNft_$41056",
              "typeString": "contract MoodNft"
            },
            "typeName": {
              "id": 41811,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 41810,
                "name": "MoodNft",
                "nameLocations": [
                  "454:7:40"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41056,
                "src": "454:7:40"
              },
              "referencedDeclaration": 41056,
              "src": "454:7:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MoodNft_$41056",
                "typeString": "contract MoodNft"
              }
            },
            "visibility": "public"
          },
          {
            "id": 41815,
            "nodeType": "VariableDeclaration",
            "src": "479:29:40",
            "nodes": [],
            "constant": false,
            "functionSelector": "d5f39488",
            "mutability": "mutable",
            "name": "deployer",
            "nameLocation": "500:8:40",
            "scope": 41993,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DeployMoodNft_$40618",
              "typeString": "contract DeployMoodNft"
            },
            "typeName": {
              "id": 41814,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 41813,
                "name": "DeployMoodNft",
                "nameLocations": [
                  "479:13:40"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40618,
                "src": "479:13:40"
              },
              "referencedDeclaration": 40618,
              "src": "479:13:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DeployMoodNft_$40618",
                "typeString": "contract DeployMoodNft"
              }
            },
            "visibility": "public"
          },
          {
            "id": 41817,
            "nodeType": "VariableDeclaration",
            "src": "511:30:40",
            "nodes": [],
            "constant": false,
            "functionSelector": "efdee94f",
            "mutability": "mutable",
            "name": "deployerAddress",
            "nameLocation": "526:15:40",
            "scope": 41993,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 41816,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "511:7:40",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 41820,
            "nodeType": "VariableDeclaration",
            "src": "545:1025:40",
            "nodes": [],
            "constant": true,
            "functionSelector": "db645622",
            "mutability": "constant",
            "name": "HAPPY_MOOD_URI",
            "nameLocation": "568:14:40",
            "scope": 41993,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 41818,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "545:6:40",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c65794a755957316c496a6f69545739765a43424f526c51694c4341695a47567a59334a7063485270623234694f694a426269424f526c516764476868644342795a575a735a574e306379423061475567625739765a4342765a69423061475567623364755a584973494445774d43556762323467513268686157346849697767496d463064484a70596e56305a584d694f69426265794a30636d4670644639306558426c496a6f67496d317662325270626d567a6379497349434a32595778315a534936494445774d4831644c434169615731685a3255694f694a6b595852684f6d6c745957646c4c334e325a79743462577737596d467a5a5459304c464249546a4a6165554979595664574d3146744f54525155306c33535552425a3031715158644a52456c3354554e4a5a3251796247746b5232633553577052643031445357644a523268735956646b623252454d476c4f5245463353576c434e474a586548566a656a4270595568534d474e4562335a4d4d32517a5a486b314d3031354e585a6a62574e3254577042643031444f58706b62574e70554764765a306c456547706857457071596b64565a316b7a5a7a6c4a616b563354554e4a5a316b7a617a6c4a616b563354554e4a5a31707462484e69524442705a56645763324a484f544e4a61554a3555464e4a4d3039445357646a4d314a35596a4a3062464254536d6c6952305a7159586c4a5a324d7a556e6c694d6e52735446686b63467049556d395155306c3653576b344b304e705157645152324e6e57544a3461474d7a54546c4a62565931576c684e6156426e6232644a5130466e5545644f63474e74546e4e6155304a715a5551776155357152576c4a5230343155464e4a4e4531705357646a616a42705456524a615578364e45744a5130466e53555234616d4659536d70695231566e57544e6e4f556c7152586c4f65556c6e57544e724f556c715a336c4a61554a3555464e4a6545317053585a515a32396e53555233646c70364e45744a51304534593064474d474644516d7451553070305456524e4d6b78715a33684a52455634546d6b304d5530795458564f616d746e5457705a645531555933524f616c4631545652465a3035455358525052455631546c524a644578715933704a61554a365a456873633170554d476c616257787a596b5277645749794e57785065554a365a45684b646d457956545a4a5230707a5756644f636b3935516e706b5345703259544a56644751796247746b523263325355524e4e306c704f437444616e6432597a4e61626c426e5054306966513d3d",
              "id": 41819,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "587:983:40",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_be502a4d8d2d3c2d1d4a9c4a93a739b2b651b59e1442db32b5fea90e59187e03",
                "typeString": "literal_string \"data:application/json;base64,eyJuYW1lIjoiTW9vZCBORlQiLCAiZGVzY3JpcHRpb24iOiJBbiBORlQgdGhhdCByZWZsZWN0cyB0aGUgbW9vZCBvZiB0aGUgb3duZXIsIDEwMCUgb24gQ2hhaW4hIiwgImF0dHJpYnV0ZXMiOiBbeyJ0cmFpdF90eXBlIjogIm1vb2RpbmVzcyIsICJ2YWx1ZSI6IDEwMH1dLCAiaW1hZ2UiOiJkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUIyYVdWM1FtOTRQU0l3SURBZ01qQXdJREl3TUNJZ2QybGtkR2c5SWpRd01DSWdJR2hsYVdkb2REMGlOREF3SWlCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNpUGdvZ0lEeGphWEpqYkdVZ1kzZzlJakV3TUNJZ1kzazlJakV3TUNJZ1ptbHNiRDBpZVdWc2JHOTNJaUJ5UFNJM09DSWdjM1J5YjJ0bFBTSmliR0ZqYXlJZ2MzUnliMnRsTFhkcFpIUm9QU0l6SWk4K0NpQWdQR2NnWTJ4aGMzTTlJbVY1WlhNaVBnb2dJQ0FnUEdOcGNtTnNaU0JqZUQwaU5qRWlJR041UFNJNE1pSWdjajBpTVRJaUx6NEtJQ0FnSUR4amFYSmpiR1VnWTNnOUlqRXlOeUlnWTNrOUlqZ3lJaUJ5UFNJeE1pSXZQZ29nSUR3dlp6NEtJQ0E4Y0dGMGFDQmtQU0p0TVRNMkxqZ3hJREV4Tmk0MU0yTXVOamtnTWpZdU1UY3ROalF1TVRFZ05ESXRPREV1TlRJdExqY3pJaUJ6ZEhsc1pUMGlabWxzYkRwdWIyNWxPeUJ6ZEhKdmEyVTZJR0pzWVdOck95QnpkSEp2YTJVdGQybGtkR2c2SURNN0lpOCtDand2YzNablBnPT0ifQ==\""
              },
              "value": "data:application/json;base64,eyJuYW1lIjoiTW9vZCBORlQiLCAiZGVzY3JpcHRpb24iOiJBbiBORlQgdGhhdCByZWZsZWN0cyB0aGUgbW9vZCBvZiB0aGUgb3duZXIsIDEwMCUgb24gQ2hhaW4hIiwgImF0dHJpYnV0ZXMiOiBbeyJ0cmFpdF90eXBlIjogIm1vb2RpbmVzcyIsICJ2YWx1ZSI6IDEwMH1dLCAiaW1hZ2UiOiJkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUIyYVdWM1FtOTRQU0l3SURBZ01qQXdJREl3TUNJZ2QybGtkR2c5SWpRd01DSWdJR2hsYVdkb2REMGlOREF3SWlCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNpUGdvZ0lEeGphWEpqYkdVZ1kzZzlJakV3TUNJZ1kzazlJakV3TUNJZ1ptbHNiRDBpZVdWc2JHOTNJaUJ5UFNJM09DSWdjM1J5YjJ0bFBTSmliR0ZqYXlJZ2MzUnliMnRsTFhkcFpIUm9QU0l6SWk4K0NpQWdQR2NnWTJ4aGMzTTlJbVY1WlhNaVBnb2dJQ0FnUEdOcGNtTnNaU0JqZUQwaU5qRWlJR041UFNJNE1pSWdjajBpTVRJaUx6NEtJQ0FnSUR4amFYSmpiR1VnWTNnOUlqRXlOeUlnWTNrOUlqZ3lJaUJ5UFNJeE1pSXZQZ29nSUR3dlp6NEtJQ0E4Y0dGMGFDQmtQU0p0TVRNMkxqZ3hJREV4Tmk0MU0yTXVOamtnTWpZdU1UY3ROalF1TVRFZ05ESXRPREV1TlRJdExqY3pJaUJ6ZEhsc1pUMGlabWxzYkRwdWIyNWxPeUJ6ZEhKdmEyVTZJR0pzWVdOck95QnpkSEp2YTJVdGQybGtkR2c2SURNN0lpOCtDand2YzNablBnPT0ifQ=="
            },
            "visibility": "public"
          },
          {
            "id": 41823,
            "nodeType": "VariableDeclaration",
            "src": "1574:2255:40",
            "nodes": [],
            "constant": true,
            "functionSelector": "3fc53740",
            "mutability": "constant",
            "name": "SAD_MOOD_URI",
            "nameLocation": "1597:12:40",
            "scope": 41993,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 41821,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1574:6:40",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c65794a755957316c496a6f69545739765a43424f526c51694c4341695a47567a59334a7063485270623234694f694a426269424f526c516764476868644342795a575a735a574e306379423061475567625739765a4342765a69423061475567623364755a584973494445774d43556762323467513268686157346849697767496d463064484a70596e56305a584d694f69426265794a30636d4670644639306558426c496a6f67496d317662325270626d567a6379497349434a32595778315a534936494445774d4831644c434169615731685a3255694f694a6b595852684f6d6c745957646c4c334e325a79743462577737596d467a5a5459304c4642454f5452695633646e5a47315765574d7962485a69616a427054564d3064306c70516e706b52305a31576b6447633249794e57785155307031596e6c4a4c31426e627a686a4d3170755355686b63467049556d395155306c345455524a4d474e495a326c4a523268735956646b623252454d476c4e56454635546b68434e456c70516a4a685631597a555730354e4642545358644a5245466e54565242655535445158684e52456b7753576c434e474a586548566a656a4270595568534d474e4562335a4d4d32517a5a486b314d3031354e585a6a62574e3254577042643031444f58706b62574e70554764765a306c456548645a57464a765355646163474a48647a6c4a615531365458704e61556c4855546c4a617a41785456524a5a303571556b524e616c6b775447705a5a3035715557644f616c466e5457705a4d4578715757644f616c466e546c524665574e365358644e517a5179535552524d4539445154424f5247646e546b52524e456c4555544250517a423554555242645535705154424f52476430546b52524e465636597a4650557a51775355525a4d456c455658684e61554579546b6877644531445154524e616b4a715446524a643035544e44424a524546305458706a6555785552544a4f615451795446524e4d3031704d48704f656b70365456525a4d6b78715758524e656d4e355355524e4d3031704d48704f656b6c6e5458706a65556c4552544a4f615451795355524e4d3031705158704f656b6c305456525a4d6b78715757644e656d4e355446524e4d3031705158704f656b6f3253576b344b304e705157645153454a6f5a45646e5a31707462484e6952444270535442564d6c4a55576b5a4f61556c6e576b5177615652555658684e61554634546b5243616b78555358644f557a5177535552426445313659336c4a52455579546d6b304d6b785554544e4e61554636546e704b656b315557544a4d616c6c6e5458706a65556c4554544e4e61554636546e704a5a30313659336c4d56455579546d6b304d6b6c4554544e4e61544236546e704a6445315557544a4d616c6c305458706a6555785554544e4e61544236546e704b4e6c5255535452505130457754577047614535455a33564e5245566e546b526e645531455257644e51304633535552465a3039555757644e5130457754304d306430315451544250517a523354564e4264306c455157644e557a4131546d6c42643256744d48704f656c6c6e5457706a655746444d444250517a523457586b774d4578715357644e517a417a5447706e644531354e486c4d5647643154564d774d307871556b524f616b45775355525a656b35704e48684a5246557954576b304d556c455654564f655545785456524a5a303555617a4e6a6554413154576b3065456c455454564d616b5630543152566455394451545250517a517957586b77645531355154424d616b6c3054586b304e556c455933564f517a4130544770465a3035354e44425452453079545564464e456c455a32644e5130463353555246644539444d44524d616c4a71546b4d304d4578555a7a424d616b316e546e7052645535544d48684f56455631546d6c42654535715158524e5646563454477061656b31555654464d616c6c6e546d706a645531355158684f616b466e5456525665457871576d685051304530535552425a3031445158684d5647646e54304d304d4756744d486c4f517a423554577053614535455a33564e5245566e546b526e645531455257644e51304633535552465a3031444d44564f6155457754304d306430315451544250517a523354564e4264306c455157644e55304633535552724d6d567053585a515a32396e5355523464316c59556d394a52317077596b64334f556c705458704e656b3170535564524f556c724d486c505247646e546b524a65466c555554524a52464530535552425a3031545158644a52477379535552425a3035455a32644f5247646e54554e4265456c455158525056466c6e54556877644531715354424a524556345457314e644539455658564f55304633544652464d5535544e444a4a52466b7a5447704e644531555758644a5245557854564d304d6c6c555a32645051304633535552425a3031445154524a52476431546b646e4d4539444e48685a656c463154576c4264306c4559335650517a42365447704a5a3039444e48684d56474e31546b4e42656b78715933524f52477431546c4e424d4535544e48704d564763305447705a5a30395556585650517a413054304d304d6d4e3661336c4a52453031544770465a303955565856505130453054304d304d6c6c354e48704a5246463154576c42656b78716132644f655451775355526e6455315451544e4d616c4a4a546d705a4d466c555a32645051304633535552425a3031445154524d56476431546b564e4d6b35715933564f6155457954555242645531355154465056474e31546c4e424d5531365457644f5645563553555256656b307a6348524e56456b305446524665453174525442505130457754304e4264306c455257644e51304531546d6c4264306c455554524a52464530535552425a3031545158644d56477379535552434e6b6c704f437444616e6432597a4e61626c426e627a306966513d3d",
              "id": 41822,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1614:2215:40",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_fe40350ebfdea6067edc9712cc5f0efc7c62db199d168463c9702ecad8d7afae",
                "typeString": "literal_string \"data:application/json;base64,eyJuYW1lIjoiTW9vZCBORlQiLCAiZGVzY3JpcHRpb24iOiJBbiBORlQgdGhhdCByZWZsZWN0cyB0aGUgbW9vZCBvZiB0aGUgb3duZXIsIDEwMCUgb24gQ2hhaW4hIiwgImF0dHJpYnV0ZXMiOiBbeyJ0cmFpdF90eXBlIjogIm1vb2RpbmVzcyIsICJ2YWx1ZSI6IDEwMH1dLCAiaW1hZ2UiOiJkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBEOTRiV3dnZG1WeWMybHZiajBpTVM0d0lpQnpkR0Z1WkdGc2IyNWxQU0p1YnlJL1BnbzhjM1puSUhkcFpIUm9QU0l4TURJMGNIZ2lJR2hsYVdkb2REMGlNVEF5TkhCNElpQjJhV1YzUW05NFBTSXdJREFnTVRBeU5DQXhNREkwSWlCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNpUGdvZ0lEeHdZWFJvSUdacGJHdzlJaU16TXpNaUlHUTlJazAxTVRJZ05qUkRNalkwTGpZZ05qUWdOalFnTWpZMExqWWdOalFnTlRFeWN6SXdNQzQySURRME9DQTBORGdnTkRRNElEUTBPQzB5TURBdU5pQTBORGd0TkRRNFV6YzFPUzQwSURZMElEVXhNaUEyTkhwdE1DQTRNakJqTFRJd05TNDBJREF0TXpjeUxURTJOaTQyTFRNM01pMHpOekp6TVRZMkxqWXRNemN5SURNM01pMHpOeklnTXpjeUlERTJOaTQySURNM01pQXpOekl0TVRZMkxqWWdNemN5TFRNM01pQXpOeko2SWk4K0NpQWdQSEJoZEdnZ1ptbHNiRDBpSTBVMlJUWkZOaUlnWkQwaVRUVXhNaUF4TkRCakxUSXdOUzQwSURBdE16Y3lJREUyTmk0MkxUTTNNaUF6TnpKek1UWTJMallnTXpjeUlETTNNaUF6TnpJZ016Y3lMVEUyTmk0MklETTNNaTB6TnpJdE1UWTJMall0TXpjeUxUTTNNaTB6TnpKNlRUSTRPQ0EwTWpGaE5EZ3VNREVnTkRndU1ERWdNQ0F3SURFZ09UWWdNQ0EwT0M0d01TQTBPQzR3TVNBd0lEQWdNUzA1TmlBd2VtMHpOellnTWpjeWFDMDBPQzR4WXkwMExqSWdNQzAzTGpndE15NHlMVGd1TVMwM0xqUkROakEwSURZek5pNHhJRFUyTWk0MUlEVTVOeUExTVRJZ05UazNjeTA1TWk0eElETTVMakV0T1RVdU9DQTRPQzQyWXkwdU15QTBMakl0TXk0NUlEY3VOQzA0TGpFZ055NDBTRE0yTUdFNElEZ2dNQ0F3SURFdE9DMDRMalJqTkM0MExUZzBMak1nTnpRdU5TMHhOVEV1TmlBeE5qQXRNVFV4TGpaek1UVTFMallnTmpjdU15QXhOakFnTVRVeExqWmhPQ0E0SURBZ01DQXhMVGdnT0M0MGVtMHlOQzB5TWpSaE5EZ3VNREVnTkRndU1ERWdNQ0F3SURFZ01DMDVOaUEwT0M0d01TQTBPQzR3TVNBd0lEQWdNU0F3SURrMmVpSXZQZ29nSUR4d1lYUm9JR1pwYkd3OUlpTXpNek1pSUdROUlrMHlPRGdnTkRJeFlUUTRJRFE0SURBZ01TQXdJRGsySURBZ05EZ2dORGdnTUNBeElEQXRPVFlnTUhwdE1qSTBJREV4TW1NdE9EVXVOU0F3TFRFMU5TNDJJRFkzTGpNdE1UWXdJREUxTVM0MllUZ2dPQ0F3SURBZ01DQTRJRGd1TkdnME9DNHhZelF1TWlBd0lEY3VPQzB6TGpJZ09DNHhMVGN1TkNBekxqY3RORGt1TlNBME5TNHpMVGc0TGpZZ09UVXVPQzA0T0M0MmN6a3lJRE01TGpFZ09UVXVPQ0E0T0M0Mll5NHpJRFF1TWlBekxqa2dOeTQwSURndU1TQTNMalJJTmpZMFlUZ2dPQ0F3SURBZ01DQTRMVGd1TkVNMk5qY3VOaUEyTURBdU15QTFPVGN1TlNBMU16TWdOVEV5SURVek0zcHRNVEk0TFRFeE1tRTBPQ0EwT0NBd0lERWdNQ0E1TmlBd0lEUTRJRFE0SURBZ01TQXdMVGsySURCNklpOCtDand2YzNablBnbz0ifQ==\""
              },
              "value": "data:application/json;base64,eyJuYW1lIjoiTW9vZCBORlQiLCAiZGVzY3JpcHRpb24iOiJBbiBORlQgdGhhdCByZWZsZWN0cyB0aGUgbW9vZCBvZiB0aGUgb3duZXIsIDEwMCUgb24gQ2hhaW4hIiwgImF0dHJpYnV0ZXMiOiBbeyJ0cmFpdF90eXBlIjogIm1vb2RpbmVzcyIsICJ2YWx1ZSI6IDEwMH1dLCAiaW1hZ2UiOiJkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBEOTRiV3dnZG1WeWMybHZiajBpTVM0d0lpQnpkR0Z1WkdGc2IyNWxQU0p1YnlJL1BnbzhjM1puSUhkcFpIUm9QU0l4TURJMGNIZ2lJR2hsYVdkb2REMGlNVEF5TkhCNElpQjJhV1YzUW05NFBTSXdJREFnTVRBeU5DQXhNREkwSWlCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNpUGdvZ0lEeHdZWFJvSUdacGJHdzlJaU16TXpNaUlHUTlJazAxTVRJZ05qUkRNalkwTGpZZ05qUWdOalFnTWpZMExqWWdOalFnTlRFeWN6SXdNQzQySURRME9DQTBORGdnTkRRNElEUTBPQzB5TURBdU5pQTBORGd0TkRRNFV6YzFPUzQwSURZMElEVXhNaUEyTkhwdE1DQTRNakJqTFRJd05TNDBJREF0TXpjeUxURTJOaTQyTFRNM01pMHpOekp6TVRZMkxqWXRNemN5SURNM01pMHpOeklnTXpjeUlERTJOaTQySURNM01pQXpOekl0TVRZMkxqWWdNemN5TFRNM01pQXpOeko2SWk4K0NpQWdQSEJoZEdnZ1ptbHNiRDBpSTBVMlJUWkZOaUlnWkQwaVRUVXhNaUF4TkRCakxUSXdOUzQwSURBdE16Y3lJREUyTmk0MkxUTTNNaUF6TnpKek1UWTJMallnTXpjeUlETTNNaUF6TnpJZ016Y3lMVEUyTmk0MklETTNNaTB6TnpJdE1UWTJMall0TXpjeUxUTTNNaTB6TnpKNlRUSTRPQ0EwTWpGaE5EZ3VNREVnTkRndU1ERWdNQ0F3SURFZ09UWWdNQ0EwT0M0d01TQTBPQzR3TVNBd0lEQWdNUzA1TmlBd2VtMHpOellnTWpjeWFDMDBPQzR4WXkwMExqSWdNQzAzTGpndE15NHlMVGd1TVMwM0xqUkROakEwSURZek5pNHhJRFUyTWk0MUlEVTVOeUExTVRJZ05UazNjeTA1TWk0eElETTVMakV0T1RVdU9DQTRPQzQyWXkwdU15QTBMakl0TXk0NUlEY3VOQzA0TGpFZ055NDBTRE0yTUdFNElEZ2dNQ0F3SURFdE9DMDRMalJqTkM0MExUZzBMak1nTnpRdU5TMHhOVEV1TmlBeE5qQXRNVFV4TGpaek1UVTFMallnTmpjdU15QXhOakFnTVRVeExqWmhPQ0E0SURBZ01DQXhMVGdnT0M0MGVtMHlOQzB5TWpSaE5EZ3VNREVnTkRndU1ERWdNQ0F3SURFZ01DMDVOaUEwT0M0d01TQTBPQzR3TVNBd0lEQWdNU0F3SURrMmVpSXZQZ29nSUR4d1lYUm9JR1pwYkd3OUlpTXpNek1pSUdROUlrMHlPRGdnTkRJeFlUUTRJRFE0SURBZ01TQXdJRGsySURBZ05EZ2dORGdnTUNBeElEQXRPVFlnTUhwdE1qSTBJREV4TW1NdE9EVXVOU0F3TFRFMU5TNDJJRFkzTGpNdE1UWXdJREUxTVM0MllUZ2dPQ0F3SURBZ01DQTRJRGd1TkdnME9DNHhZelF1TWlBd0lEY3VPQzB6TGpJZ09DNHhMVGN1TkNBekxqY3RORGt1TlNBME5TNHpMVGc0TGpZZ09UVXVPQzA0T0M0MmN6a3lJRE01TGpFZ09UVXVPQ0E0T0M0Mll5NHpJRFF1TWlBekxqa2dOeTQwSURndU1TQTNMalJJTmpZMFlUZ2dPQ0F3SURBZ01DQTRMVGd1TkVNMk5qY3VOaUEyTURBdU15QTFPVGN1TlNBMU16TWdOVEV5SURVek0zcHRNVEk0TFRFeE1tRTBPQ0EwT0NBd0lERWdNQ0E1TmlBd0lEUTRJRFE0SURBZ01TQXdMVGsySURCNklpOCtDand2YzNablBnbz0ifQ=="
            },
            "visibility": "public"
          },
          {
            "id": 41829,
            "nodeType": "VariableDeclaration",
            "src": "3833:41:40",
            "nodes": [],
            "constant": true,
            "functionSelector": "81e167cf",
            "mutability": "constant",
            "name": "USER",
            "nameLocation": "3857:4:40",
            "scope": 41993,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 41824,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3833:7:40",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "31",
                  "id": 41827,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3872:1:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "id": 41826,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3864:7:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 41825,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3864:7:40",
                  "typeDescriptions": {}
                }
              },
              "id": 41828,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3864:10:40",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 41846,
            "nodeType": "FunctionDefinition",
            "src": "3878:90:40",
            "nodes": [],
            "body": {
              "id": 41845,
              "nodeType": "Block",
              "src": "3902:66:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 41837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41832,
                      "name": "deployer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41815,
                      "src": "3906:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DeployMoodNft_$40618",
                        "typeString": "contract DeployMoodNft"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 41835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3917:17:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_DeployMoodNft_$40618_$",
                          "typeString": "function () returns (contract DeployMoodNft)"
                        },
                        "typeName": {
                          "id": 41834,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 41833,
                            "name": "DeployMoodNft",
                            "nameLocations": [
                              "3921:13:40"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40618,
                            "src": "3921:13:40"
                          },
                          "referencedDeclaration": 40618,
                          "src": "3921:13:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DeployMoodNft_$40618",
                            "typeString": "contract DeployMoodNft"
                          }
                        }
                      },
                      "id": 41836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3917:19:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DeployMoodNft_$40618",
                        "typeString": "contract DeployMoodNft"
                      }
                    },
                    "src": "3906:30:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DeployMoodNft_$40618",
                      "typeString": "contract DeployMoodNft"
                    }
                  },
                  "id": 41838,
                  "nodeType": "ExpressionStatement",
                  "src": "3906:30:40"
                },
                {
                  "expression": {
                    "id": 41843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41839,
                      "name": "moodNft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41812,
                      "src": "3940:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MoodNft_$41056",
                        "typeString": "contract MoodNft"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 41840,
                          "name": "deployer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41815,
                          "src": "3950:8:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DeployMoodNft_$40618",
                            "typeString": "contract DeployMoodNft"
                          }
                        },
                        "id": 41841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3959:3:40",
                        "memberName": "run",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40580,
                        "src": "3950:12:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_contract$_MoodNft_$41056_$",
                          "typeString": "function () external returns (contract MoodNft)"
                        }
                      },
                      "id": 41842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3950:14:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MoodNft_$41056",
                        "typeString": "contract MoodNft"
                      }
                    },
                    "src": "3940:24:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MoodNft_$41056",
                      "typeString": "contract MoodNft"
                    }
                  },
                  "id": 41844,
                  "nodeType": "ExpressionStatement",
                  "src": "3940:24:40"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "3887:5:40",
            "parameters": {
              "id": 41830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3892:2:40"
            },
            "returnParameters": {
              "id": 41831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3902:0:40"
            },
            "scope": 41993,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41888,
            "nodeType": "FunctionDefinition",
            "src": "3971:274:40",
            "nodes": [],
            "body": {
              "id": 41887,
              "nodeType": "Block",
              "src": "4019:226:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 41865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 41853,
                                      "name": "moodNft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41812,
                                      "src": "4061:7:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MoodNft_$41056",
                                        "typeString": "contract MoodNft"
                                      }
                                    },
                                    "id": 41854,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4069:4:40",
                                    "memberName": "name",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38028,
                                    "src": "4061:12:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                      "typeString": "function () view external returns (string memory)"
                                    }
                                  },
                                  "id": 41855,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4061:14:40",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 41851,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4044:3:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 41852,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4048:12:40",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4044:16:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 41856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4044:32:40",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 41850,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "4034:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 41857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4034:43:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "id": 41861,
                                      "name": "NFT_NAME",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41806,
                                      "src": "4113:8:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 41862,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4112:10:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 41859,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4095:3:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 41860,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4099:12:40",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4095:16:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 41863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4095:28:40",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 41858,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "4085:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 41864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4085:39:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "4034:90:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 41849,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "4023:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 41866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4023:105:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41867,
                  "nodeType": "ExpressionStatement",
                  "src": "4023:105:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 41884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 41872,
                                      "name": "moodNft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41812,
                                      "src": "4170:7:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MoodNft_$41056",
                                        "typeString": "contract MoodNft"
                                      }
                                    },
                                    "id": 41873,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4178:6:40",
                                    "memberName": "symbol",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38038,
                                    "src": "4170:14:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                      "typeString": "function () view external returns (string memory)"
                                    }
                                  },
                                  "id": 41874,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4170:16:40",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 41870,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4153:3:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 41871,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4157:12:40",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4153:16:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 41875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4153:34:40",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 41869,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "4143:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 41876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4143:45:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "id": 41880,
                                      "name": "NFT_SYMBOL",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41809,
                                      "src": "4224:10:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 41881,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4223:12:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 41878,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4206:3:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 41879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4210:12:40",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4206:16:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 41882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4206:30:40",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 41877,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "4196:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 41883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4196:41:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "4143:94:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 41868,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "4132:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 41885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4132:109:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41886,
                  "nodeType": "ExpressionStatement",
                  "src": "4132:109:40"
                }
              ]
            },
            "functionSelector": "23b2484e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testInitializedCorrectly",
            "nameLocation": "3980:24:40",
            "parameters": {
              "id": 41847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4004:2:40"
            },
            "returnParameters": {
              "id": 41848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4019:0:40"
            },
            "scope": 41993,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41912,
            "nodeType": "FunctionDefinition",
            "src": "4248:129:40",
            "nodes": [],
            "body": {
              "id": 41911,
              "nodeType": "Block",
              "src": "4293:84:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41894,
                        "name": "USER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41829,
                        "src": "4306:4:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 41891,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "4297:2:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$21078",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4300:5:40",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20691,
                      "src": "4297:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 41895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4297:14:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41896,
                  "nodeType": "ExpressionStatement",
                  "src": "4297:14:40"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 41897,
                        "name": "moodNft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41812,
                        "src": "4315:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MoodNft_$41056",
                          "typeString": "contract MoodNft"
                        }
                      },
                      "id": 41899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4323:7:40",
                      "memberName": "mintNft",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40923,
                      "src": "4315:15:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 41900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4315:17:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41901,
                  "nodeType": "ExpressionStatement",
                  "src": "4315:17:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 41905,
                              "name": "USER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41829,
                              "src": "4362:4:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 41903,
                              "name": "moodNft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41812,
                              "src": "4344:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MoodNft_$41056",
                                "typeString": "contract MoodNft"
                              }
                            },
                            "id": 41904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4352:9:40",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37990,
                            "src": "4344:17:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 41906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4344:23:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 41907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4371:1:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4344:28:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 41902,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "4337:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 41909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4337:36:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41910,
                  "nodeType": "ExpressionStatement",
                  "src": "4337:36:40"
                }
              ]
            },
            "functionSelector": "451f3246",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCanMintAndHaveABalance",
            "nameLocation": "4257:26:40",
            "parameters": {
              "id": 41889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4283:2:40"
            },
            "returnParameters": {
              "id": 41890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4293:0:40"
            },
            "scope": 41993,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41946,
            "nodeType": "FunctionDefinition",
            "src": "4380:214:40",
            "nodes": [],
            "body": {
              "id": 41945,
              "nodeType": "Block",
              "src": "4432:162:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41918,
                        "name": "USER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41829,
                        "src": "4445:4:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 41915,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "4436:2:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$21078",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4439:5:40",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20691,
                      "src": "4436:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 41919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4436:14:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41920,
                  "nodeType": "ExpressionStatement",
                  "src": "4436:14:40"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 41921,
                        "name": "moodNft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41812,
                        "src": "4454:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MoodNft_$41056",
                          "typeString": "contract MoodNft"
                        }
                      },
                      "id": 41923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4462:7:40",
                      "memberName": "mintNft",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40923,
                      "src": "4454:15:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 41924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4454:17:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41925,
                  "nodeType": "ExpressionStatement",
                  "src": "4454:17:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 41942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 41932,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4531:1:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "expression": {
                                      "id": 41930,
                                      "name": "moodNft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41812,
                                      "src": "4514:7:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MoodNft_$41056",
                                        "typeString": "contract MoodNft"
                                      }
                                    },
                                    "id": 41931,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4522:8:40",
                                    "memberName": "tokenURI",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 41031,
                                    "src": "4514:16:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) view external returns (string memory)"
                                    }
                                  },
                                  "id": 41933,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4514:19:40",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 41928,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4497:3:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 41929,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4501:12:40",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4497:16:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 41934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4497:37:40",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 41927,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "4487:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 41935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4487:48:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 41939,
                                  "name": "HAPPY_MOOD_URI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41820,
                                  "src": "4570:14:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 41937,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4553:3:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 41938,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4557:12:40",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4553:16:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 41940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4553:32:40",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 41936,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "4543:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 41941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4543:43:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "4487:99:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 41926,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "4476:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 41943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4476:114:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41944,
                  "nodeType": "ExpressionStatement",
                  "src": "4476:114:40"
                }
              ]
            },
            "functionSelector": "70d15f8d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTokenURIDefaultIsCorrectlySet",
            "nameLocation": "4389:33:40",
            "parameters": {
              "id": 41913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4422:2:40"
            },
            "returnParameters": {
              "id": 41914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4432:0:40"
            },
            "scope": 41993,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41992,
            "nodeType": "FunctionDefinition",
            "src": "4597:239:40",
            "nodes": [],
            "body": {
              "id": 41991,
              "nodeType": "Block",
              "src": "4634:202:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41952,
                        "name": "USER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41829,
                        "src": "4647:4:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 41949,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "4638:2:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$21078",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4641:5:40",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20691,
                      "src": "4638:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 41953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4638:14:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41954,
                  "nodeType": "ExpressionStatement",
                  "src": "4638:14:40"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 41955,
                        "name": "moodNft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41812,
                        "src": "4656:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MoodNft_$41056",
                          "typeString": "contract MoodNft"
                        }
                      },
                      "id": 41957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4664:7:40",
                      "memberName": "mintNft",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40923,
                      "src": "4656:15:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 41958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4656:17:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41959,
                  "nodeType": "ExpressionStatement",
                  "src": "4656:17:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41963,
                        "name": "USER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41829,
                        "src": "4687:4:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 41960,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2350,
                        "src": "4678:2:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$21078",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4681:5:40",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20691,
                      "src": "4678:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 41964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4678:14:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41965,
                  "nodeType": "ExpressionStatement",
                  "src": "4678:14:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 41969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4713:1:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 41966,
                        "name": "moodNft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41812,
                        "src": "4696:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MoodNft_$41056",
                          "typeString": "contract MoodNft"
                        }
                      },
                      "id": 41968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4704:8:40",
                      "memberName": "flipMood",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40963,
                      "src": "4696:16:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 41970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4696:19:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41971,
                  "nodeType": "ExpressionStatement",
                  "src": "4696:19:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 41988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 41978,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4775:1:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "expression": {
                                      "id": 41976,
                                      "name": "moodNft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41812,
                                      "src": "4758:7:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MoodNft_$41056",
                                        "typeString": "contract MoodNft"
                                      }
                                    },
                                    "id": 41977,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4766:8:40",
                                    "memberName": "tokenURI",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 41031,
                                    "src": "4758:16:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) view external returns (string memory)"
                                    }
                                  },
                                  "id": 41979,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4758:19:40",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 41974,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4741:3:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 41975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4745:12:40",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4741:16:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 41980,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4741:37:40",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 41973,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "4731:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 41981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4731:48:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 41985,
                                  "name": "SAD_MOOD_URI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41823,
                                  "src": "4814:12:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 41983,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4797:3:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 41984,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4801:12:40",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4797:16:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 41986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4797:30:40",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 41982,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "4787:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 41987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4787:41:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "4731:97:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 41972,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "4720:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 41989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4720:112:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41990,
                  "nodeType": "ExpressionStatement",
                  "src": "4720:112:40"
                }
              ]
            },
            "functionSelector": "45431413",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFlipTokenToSad",
            "nameLocation": "4606:18:40",
            "parameters": {
              "id": 41947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4624:2:40"
            },
            "returnParameters": {
              "id": 41948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4634:0:40"
            },
            "scope": 41993,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41800,
              "name": "StdCheats",
              "nameLocations": [
                "359:9:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14991,
              "src": "359:9:40"
            },
            "id": 41801,
            "nodeType": "InheritanceSpecifier",
            "src": "359:9:40"
          },
          {
            "baseName": {
              "id": 41802,
              "name": "Test",
              "nameLocations": [
                "370:4:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19572,
              "src": "370:4:40"
            },
            "id": 41803,
            "nodeType": "InheritanceSpecifier",
            "src": "370:4:40"
          }
        ],
        "canonicalName": "MoodNftTest",
        "contractDependencies": [
          40618
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          41993,
          19572,
          2357,
          2354,
          19523,
          15281,
          14991,
          14312,
          12579,
          11885,
          2291
        ],
        "name": "MoodNftTest",
        "nameLocation": "344:11:40",
        "scope": 41994,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85,
          10480,
          10485,
          10490,
          10497,
          10504,
          10511
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 40
}