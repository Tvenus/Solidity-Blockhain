{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "basicNft",
      "outputs": [
        {
          "internalType": "contract BasicNft",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "internalType": "contract DeployBasicNft",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testNameIsCorrect",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b506122898061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c8063916a17c61161008c578063c37aa67411610066578063c37aa67414610180578063d5f39488146101ab578063e20c9f71146101be578063fa7626d4146101c657600080fd5b8063916a17c614610158578063b5508aa914610160578063ba414fa61461016857600080fd5b80633e5e3c23116100c85780633e5e3c231461011e5780633f7286f41461012657806366d9a9a01461012e57806385226c811461014357600080fd5b806232f8d1146100ee5780630a9254e4146100f85780631ed7831c14610100575b600080fd5b6100f66101d3565b005b6100f66102c3565b61010861038e565b60405161011591906109bd565b60405180910390f35b6101086103f0565b610108610450565b6101366104b0565b6040516101159190610a0a565b61014b61059f565b6040516101159190610ae1565b61013661066f565b61014b610755565b610170610825565b6040519015158152602001610115565b601c54610193906001600160a01b031681565b6040516001600160a01b039091168152602001610115565b601b54610193906001600160a01b031681565b610108610950565b6000546101709060ff1681565b6040805180820182526005815264446f67696560d81b6020820152601c5482516306fdde0360e01b8152925191926000926001600160a01b03909216916306fdde039160048082019286929091908290030181865afa15801561023a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102629190810190610b71565b9050806040516020016102759190610c1e565b604051602081830303815290604052805190602001208260405160200161029c9190610c1e565b60405160208183030381529060405280519060200120146102bf576102bf610c3a565b5050565b6040516102cf906109b0565b604051809103906000f0801580156102eb573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216918217905560408051636020311360e11b8152905163c04062269160048082019260209290919082900301816000875af1158015610348573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036c9190610c50565b601c80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d8054806020026020016040519081016040528092919081815260200182805480156103e657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116103c8575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156103e6576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103c8575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156103e6576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103c8575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156105965760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561057e57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116105405790505b505050505081525050815260200190600101906104d4565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156105965783829060005260206000200180546105e290610c80565b80601f016020809104026020016040519081016040528092919081815260200182805461060e90610c80565b801561065b5780601f106106305761010080835404028352916020019161065b565b820191906000526020600020905b81548152906001019060200180831161063e57829003601f168201915b5050505050815260200190600101906105c3565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156105965760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561073d57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116106ff5790505b50505050508152505081526020019060010190610693565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101561059657838290600052602060002001805461079890610c80565b80601f01602080910402602001604051908101604052809291908181526020018280546107c490610c80565b80156108115780601f106107e657610100808354040283529160200191610811565b820191906000526020600020905b8154815290600101906020018083116107f457829003601f168201915b505050505081526020019060010190610779565b60008054610100900460ff16156108455750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561094b5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916108d3917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610cba565b60408051601f19818403018152908290526108ed91610c1e565b6000604051808303816000865af19150503d806000811461092a576040519150601f19603f3d011682016040523d82523d6000602084013e61092f565b606091505b50915050808060200190518101906109479190610ceb565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156103e6576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103c8575050505050905090565b61154680610d0e83390190565b6020808252825182820181905260009190848201906040850190845b818110156109fe5783516001600160a01b0316835292840192918401916001016109d9565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610aae57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610a995783516001600160e01b0319168252928b019260019290920191908b0190610a6f565b50978a01979550505091870191600101610a32565b50919998505050505050505050565b60005b83811015610ad8578181015183820152602001610ac0565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610b4e57878503603f1901845281518051808752610b2f818989018a8501610abd565b601f01601f191695909501860194509285019290850190600101610b08565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610b8357600080fd5b815167ffffffffffffffff80821115610b9b57600080fd5b818401915084601f830112610baf57600080fd5b815181811115610bc157610bc1610b5b565b604051601f8201601f19908116603f01168101908382118183101715610be957610be9610b5b565b81604052828152876020848701011115610c0257600080fd5b610c13836020830160208801610abd565b979650505050505050565b60008251610c30818460208701610abd565b9190910192915050565b634e487b7160e01b600052600160045260246000fd5b600060208284031215610c6257600080fd5b81516001600160a01b0381168114610c7957600080fd5b9392505050565b600181811c90821680610c9457607f821691505b602082108103610cb457634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090610cdd816004850160208701610abd565b919091016004019392505050565b600060208284031215610cfd57600080fd5b81518015158114610c7957600080fdfe608060405260048054600160ff199182168117909255600c8054909116909117905534801561002d57600080fd5b506115098061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c04062261461003b578063f8ccbf4714610060575b600080fd5b61004361007d565b6040516001600160a01b0390911681526020015b60405180910390f35b600c5461006d9060ff1681565b6040519015158152602001610057565b60007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b0316637fb5297f6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100dd57600080fd5b505af11580156100f1573d6000803e3d6000fd5b5050505060006040516101039061019e565b604051809103906000f08015801561011f573d6000803e3d6000fd5b5090507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166376eadd366040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561018057600080fd5b505af1158015610194573d6000803e3d6000fd5b5092949350505050565b611328806101ac8339019056fe60806040523480156200001157600080fd5b5060405180604001604052806005815260200164446f67696560d81b8152506040518060400160405280600481526020016320444f4760e01b81525081600090816200005e919062000120565b5060016200006d828262000120565b5050600060065550620001ec565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000a657607f821691505b602082108103620000c757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200011b57600081815260208120601f850160051c81016020861015620000f65750805b601f850160051c820191505b81811015620001175782815560010162000102565b5050505b505050565b81516001600160401b038111156200013c576200013c6200007b565b62000154816200014d845462000091565b84620000cd565b602080601f8311600181146200018c5760008415620001735750858301515b600019600386901b1c1916600185901b17855562000117565b600085815260208120601f198616915b82811015620001bd578886015182559484019460019091019084016200019c565b5085821015620001dc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61112c80620001fc6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063b88d4fde11610066578063b88d4fde146101e1578063c87b56dd146101f4578063da86f4a914610207578063e985e9c51461021a57600080fd5b806370a08231146101a557806395d89b41146101c6578063a22cb465146101ce57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806323b872dd1461016c57806342842e0e1461017f5780636352211e1461019257600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610c1f565b61022d565b60405190151581526020015b60405180910390f35b61011f61027f565b60405161010e9190610c89565b61013f61013a366004610c9c565b610311565b6040516001600160a01b03909116815260200161010e565b61016a610165366004610cd1565b610338565b005b61016a61017a366004610cfb565b6103d6565b61016a61018d366004610cfb565b610411565b61013f6101a0366004610c9c565b61042c565b6101b86101b3366004610d37565b610465565b60405190815260200161010e565b61011f6104ad565b61016a6101dc366004610d52565b6104bc565b61016a6101ef366004610e1a565b6104cb565b61011f610202366004610c9c565b61050d565b61016a610215366004610e96565b6105af565b610102610228366004610edf565b6105ef565b60006001600160e01b031982166380ac58cd60e01b148061025e57506001600160e01b03198216635b5e139f60e01b145b8061027957506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028e90610f12565b80601f01602080910402602001604051908101604052809291908181526020018280546102ba90610f12565b80156103075780601f106102dc57610100808354040283529160200191610307565b820191906000526020600020905b8154815290600101906020018083116102ea57829003601f168201915b5050505050905090565b600061031c8261061d565b506000908152600460205260409020546001600160a01b031690565b60006103438261042c565b9050806001600160a01b0316836001600160a01b03160361038757604051630b61174360e31b81526001600160a01b03821660048201526024015b60405180910390fd5b336001600160a01b038216148015906103a757506103a581336105ef565b155b156103c75760405163a9fbf51f60e01b815233600482015260240161037e565b6103d18383610658565b505050565b6103e033826106c6565b6104065760405163177e802f60e01b81523360048201526024810182905260440161037e565b6103d1838383610725565b6103d1838383604051806020016040528060008152506104cb565b6000818152600260205260408120546001600160a01b03168061027957604051637e27328960e01b81526004810184905260240161037e565b60006001600160a01b038216610491576040516322718ad960e21b81526000600482015260240161037e565b506001600160a01b031660009081526003602052604090205490565b60606001805461028e90610f12565b6104c73383836108b3565b5050565b6104d533836106c6565b6104fb5760405163177e802f60e01b81523360048201526024810183905260440161037e565b6105078484848461095d565b50505050565b600081815260076020526040902080546060919061052a90610f12565b80601f016020809104026020016040519081016040528092919081815260200182805461055690610f12565b80156105a35780601f10610578576101008083540402835291602001916105a3565b820191906000526020600020905b81548152906001019060200180831161058657829003601f168201915b50505050509050919050565b60065460009081526007602052604090206105ca8282610f9a565b506105d73360065461099c565b600680549060006105e783611070565b919050555050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260409020546001600160a01b031661065557604051637e27328960e01b81526004810182905260240161037e565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061068d8261042c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806106d28361042c565b9050806001600160a01b0316846001600160a01b031614806106f957506106f981856105ef565b8061071d5750836001600160a01b031661071284610311565b6001600160a01b0316145b949350505050565b60006107308261042c565b9050836001600160a01b0316816001600160a01b03161461077e576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161037e565b6001600160a01b0383166107a857604051633250574960e11b81526000600482015260240161037e565b6107b18261042c565b9050836001600160a01b0316816001600160a01b0316146107ff576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161037e565b600082815260046020908152604080832080546001600160a01b03191690556001600160a01b038716835260039091528120805460019290610842908490611089565b90915550506001600160a01b03808416600081815260036020908152604080832080546001019055868352600290915280822080546001600160a01b031916841790555185938816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4610507565b816001600160a01b0316836001600160a01b0316036108f057604051630b61174360e31b81526001600160a01b038416600482015260240161037e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610968848484610725565b610974848484846109b6565b61050757604051633250574960e11b81526001600160a01b038416600482015260240161037e565b6104c7828260405180602001604052806000815250610ac3565b60006001600160a01b0384163b15610ab857604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906109fa90339089908890889060040161109c565b6020604051808303816000875af1925050508015610a35575060408051601f3d908101601f19168201909252610a32918101906110d9565b60015b610a9e573d808015610a63576040519150601f19603f3d011682016040523d82523d6000602084013e610a68565b606091505b508051600003610a9657604051633250574960e11b81526001600160a01b038616600482015260240161037e565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061071d565b506001949350505050565b610acd8383610b02565b610ada60008484846109b6565b6103d157604051633250574960e11b81526001600160a01b038416600482015260240161037e565b6001600160a01b038216610b2c57604051633250574960e11b81526000600482015260240161037e565b6000818152600260205260409020546001600160a01b031615610b65576040516339e3563760e11b81526000600482015260240161037e565b6000818152600260205260409020546001600160a01b031615610b9e576040516339e3563760e11b81526000600482015260240161037e565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461065557600080fd5b600060208284031215610c3157600080fd5b8135610c3c81610c09565b9392505050565b6000815180845260005b81811015610c6957602081850181015186830182015201610c4d565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610c3c6020830184610c43565b600060208284031215610cae57600080fd5b5035919050565b80356001600160a01b0381168114610ccc57600080fd5b919050565b60008060408385031215610ce457600080fd5b610ced83610cb5565b946020939093013593505050565b600080600060608486031215610d1057600080fd5b610d1984610cb5565b9250610d2760208501610cb5565b9150604084013590509250925092565b600060208284031215610d4957600080fd5b610c3c82610cb5565b60008060408385031215610d6557600080fd5b610d6e83610cb5565b915060208301358015158114610d8357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115610dbf57610dbf610d8e565b604051601f8501601f19908116603f01168101908282118183101715610de757610de7610d8e565b81604052809350858152868686011115610e0057600080fd5b858560208301376000602087830101525050509392505050565b60008060008060808587031215610e3057600080fd5b610e3985610cb5565b9350610e4760208601610cb5565b925060408501359150606085013567ffffffffffffffff811115610e6a57600080fd5b8501601f81018713610e7b57600080fd5b610e8a87823560208401610da4565b91505092959194509250565b600060208284031215610ea857600080fd5b813567ffffffffffffffff811115610ebf57600080fd5b8201601f81018413610ed057600080fd5b61071d84823560208401610da4565b60008060408385031215610ef257600080fd5b610efb83610cb5565b9150610f0960208401610cb5565b90509250929050565b600181811c90821680610f2657607f821691505b602082108103610f4657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156103d157600081815260208120601f850160051c81016020861015610f735750805b601f850160051c820191505b81811015610f9257828155600101610f7f565b505050505050565b815167ffffffffffffffff811115610fb457610fb4610d8e565b610fc881610fc28454610f12565b84610f4c565b602080601f831160018114610ffd5760008415610fe55750858301515b600019600386901b1c1916600185901b178555610f92565b600085815260208120601f198616915b8281101561102c5788860151825594840194600190910190840161100d565b508582101561104a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6000600182016110825761108261105a565b5060010190565b818103818111156102795761027961105a565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906110cf90830184610c43565b9695505050505050565b6000602082840312156110eb57600080fd5b8151610c3c81610c0956fea26469706673582212207b4b0f823583aca111d47d7f08016291ba0e5635a41ec3a1a79e9e636efd8a0664736f6c63430008140033a2646970667358221220f6eff629560ec4bef52dd58ca27dbdd950eeffb0de702bb0a3bc14965a1ebd4964736f6c63430008140033a26469706673582212209b486f86fcdbfaca9d2c09ce8af0f9ac8808527e287ca292076053ee05a3ec6664736f6c63430008140033",
    "sourceMap": "232:429:32:-:0;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3126:44:4;;;;;;;;;;;232:429:32;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "232:429:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;421:238;;;:::i;:::-;;326:92;;;:::i;2170:134:7:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2939:133;;;:::i;2640:141::-;;;:::i;2456:178::-;;;:::i;:::-;;;;;;;:::i;2310:140::-;;;:::i;:::-;;;;;;;:::i;2787:146::-;;;:::i;1875:141::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;3688:14:33;;3681:22;3663:41;;3651:2;3636:18;1819:584:0;3523:187:33;298:24:32;;;;;-1:-1:-1;;;;;298:24:32;;;;;;-1:-1:-1;;;;;3897:32:33;;;3879:51;;3867:2;3852:18;298:24:32;3715:221:33;265:30:32;;;;;-1:-1:-1;;;;;265:30:32;;;2022:142:7;;;:::i;1572:26:0:-;;;;;;;;;421:238:32;466:36;;;;;;;;;;;-1:-1:-1;;;466:36:32;;;;533:8;;:15;;-1:-1:-1;;;533:15:32;;;;466:36;;:26;;-1:-1:-1;;;;;533:8:32;;;;:13;;:15;;;;;466:26;;533:15;;;;;;;;:8;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;533:15:32;;;;;;;;;;;;:::i;:::-;506:42;;639:10;622:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;612:39;;;;;;590:12;573:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;563:41;;;;;;:88;552:103;;;;:::i;:::-;462:197;;421:238::o;326:92::-;365:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;354:8:32;:31;;-1:-1:-1;;;;;;354:31:32;-1:-1:-1;;;;;354:31:32;;;;;;;;;400:14;;;-1:-1:-1;;;400:14:32;;;;:12;;:14;;;;;;;;;;;;;;;-1:-1:-1;354:31:32;400:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;389:8;:25;;-1:-1:-1;;;;;;389:25:32;-1:-1:-1;;;;;389:25:32;;;;;;;;;;326:92::o;2170:134:7:-;2217:33;2281:16;2262:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2262:35:7;;;;;;;;;;;;;;;;;;;;;;;2170:134;:::o;2939:133::-;2985:33;3049:16;3030:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3030:35:7;;;;;;;;;;;;;;;;;;;;;;2939:133;:::o;2640:141::-;2688:35;2756:18;2735:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2735:39:7;;;;;;;;;;;;;;;;;;;;;;2640:141;:::o;2456:178::-;2512:48;2601:26;2572:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2572:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2572:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2456:178;:::o;2310:140::-;2358:34;2425:18;2404:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2787:146;2835:40;2908:18;2887:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2887:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2887:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1875:141;1924:34;1991:18;1970:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;6505:51:33;;;-1:-1:-1;;;6572:18:33;;;6565:34;2196:43:0;;;;;;;;;6478:18:33;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2022:142:7:-;2071:35;2139:18;2118:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2118:39:7;;;;;;;;;;;;;;;;;;;;;;2022:142;:::o;-1:-1:-1:-;;;;;;;;:::o;14:658:33:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:33;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:33;;14:658;-1:-1:-1;;;;;;14:658:33:o;677:1567::-;879:4;908:2;948;937:9;933:18;978:2;967:9;960:21;1001:6;1036;1030:13;1067:6;1059;1052:22;1093:2;1083:12;;1126:2;1115:9;1111:18;1104:25;;1188:2;1178:6;1175:1;1171:14;1160:9;1156:30;1152:39;1226:2;1218:6;1214:15;1247:1;1268;1278:937;1294:6;1289:3;1286:15;1278:937;;;1363:22;;;-1:-1:-1;;1359:36:33;1347:49;;1419:13;;1506:9;;-1:-1:-1;;;;;1502:35:33;1487:51;;1577:11;;1571:18;1609:15;;;1602:27;;;1690:19;;1459:15;;;1722:24;;;1812:21;;;;1857:1;;1780:2;1768:15;;;1871:236;1887:8;1882:3;1879:17;1871:236;;;1968:15;;-1:-1:-1;;;;;;1964:42:33;1950:57;;2076:17;;;;1915:1;1906:11;;;;;2033:14;;;;1871:236;;;-1:-1:-1;2193:12:33;;;;2130:5;-1:-1:-1;;;2158:15:33;;;;1320:1;1311:11;1278:937;;;-1:-1:-1;2232:6:33;;677:1567;-1:-1:-1;;;;;;;;;677:1567:33:o;2249:250::-;2334:1;2344:113;2358:6;2355:1;2352:13;2344:113;;;2434:11;;;2428:18;2415:11;;;2408:39;2380:2;2373:10;2344:113;;;-1:-1:-1;;2491:1:33;2473:16;;2466:27;2249:250::o;2504:1014::-;2666:4;2695:2;2735;2724:9;2720:18;2765:2;2754:9;2747:21;2788:6;2823;2817:13;2854:6;2846;2839:22;2892:2;2881:9;2877:18;2870:25;;2954:2;2944:6;2941:1;2937:14;2926:9;2922:30;2918:39;2904:53;;2992:2;2984:6;2980:15;3013:1;3023:466;3037:6;3034:1;3031:13;3023:466;;;3102:22;;;-1:-1:-1;;3098:36:33;3086:49;;3158:13;;3200:9;;3222:24;;;3259:74;3200:9;3307:15;;;3294:11;;;3259:74;:::i;:::-;3399:2;3376:17;-1:-1:-1;;3372:31:33;3360:44;;;;3356:53;;;-1:-1:-1;3467:12:33;;;;3432:15;;;;3059:1;3052:9;3023:466;;;-1:-1:-1;3506:6:33;;2504:1014;-1:-1:-1;;;;;;;2504:1014:33:o;4173:127::-;4234:10;4229:3;4225:20;4222:1;4215:31;4265:4;4262:1;4255:15;4289:4;4286:1;4279:15;4305:897;4385:6;4438:2;4426:9;4417:7;4413:23;4409:32;4406:52;;;4454:1;4451;4444:12;4406:52;4487:9;4481:16;4516:18;4557:2;4549:6;4546:14;4543:34;;;4573:1;4570;4563:12;4543:34;4611:6;4600:9;4596:22;4586:32;;4656:7;4649:4;4645:2;4641:13;4637:27;4627:55;;4678:1;4675;4668:12;4627:55;4707:2;4701:9;4729:2;4725;4722:10;4719:36;;;4735:18;;:::i;:::-;4810:2;4804:9;4778:2;4864:13;;-1:-1:-1;;4860:22:33;;;4884:2;4856:31;4852:40;4840:53;;;4908:18;;;4928:22;;;4905:46;4902:72;;;4954:18;;:::i;:::-;4994:10;4990:2;4983:22;5029:2;5021:6;5014:18;5069:7;5064:2;5059;5055;5051:11;5047:20;5044:33;5041:53;;;5090:1;5087;5080:12;5041:53;5103:68;5168:2;5163;5155:6;5151:15;5146:2;5142;5138:11;5103:68;:::i;:::-;5190:6;4305:897;-1:-1:-1;;;;;;;4305:897:33:o;5207:289::-;5338:3;5376:6;5370:13;5392:66;5451:6;5446:3;5439:4;5431:6;5427:17;5392:66;:::i;:::-;5474:16;;;;;5207:289;-1:-1:-1;;5207:289:33:o;5501:127::-;5562:10;5557:3;5553:20;5550:1;5543:31;5593:4;5590:1;5583:15;5617:4;5614:1;5607:15;5633:308;5721:6;5774:2;5762:9;5753:7;5749:23;5745:32;5742:52;;;5790:1;5787;5780:12;5742:52;5816:16;;-1:-1:-1;;;;;5861:31:33;;5851:42;;5841:70;;5907:1;5904;5897:12;5841:70;5930:5;5633:308;-1:-1:-1;;;5633:308:33:o;5946:380::-;6025:1;6021:12;;;;6068;;;6089:61;;6143:4;6135:6;6131:17;6121:27;;6089:61;6196:2;6188:6;6185:14;6165:18;6162:38;6159:161;;6242:10;6237:3;6233:20;6230:1;6223:31;6277:4;6274:1;6267:15;6305:4;6302:1;6295:15;6159:161;;5946:380;;;:::o;6610:384::-;-1:-1:-1;;;;;;6795:33:33;;6783:46;;6852:13;;6765:3;;6874:74;6852:13;6937:1;6928:11;;6921:4;6909:17;;6874:74;:::i;:::-;6968:16;;;;6986:1;6964:24;;6610:384;-1:-1:-1;;;6610:384:33:o;7291:277::-;7358:6;7411:2;7399:9;7390:7;7386:23;7382:32;7379:52;;;7427:1;7424;7417:12;7379:52;7459:9;7453:16;7512:5;7505:13;7498:21;7491:5;7488:32;7478:60;;7534:1;7531;7524:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "basicNft()": "c37aa674",
    "deployer()": "d5f39488",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testNameIsCorrect()": "0032f8d1"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"basicNft\",\"outputs\":[{\"internalType\":\"contract BasicNft\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"contract DeployBasicNft\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testNameIsCorrect\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/BasicNftTest.s.sol\":\"BasicNftTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x0bded803c7e28336785fa600f03035e61d0b689bba2f014b1720e576c5ee3307\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407f3979f460cc60bc7e4ce6fd7da4facac9f52623b4d6805052538d897eab9b\",\"dweb:/ipfs/QmSRhYNywsJhtYEYyPM1izGNsP1SBzxsXwLfcQnFF5NA9p\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x51e6eb138fc953fac1ac78012a39b3f16d9289ce06a222ba93bb0621768f96e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c577e054cf578594148a07b286571d494f401b6d4a940d3ccabd47b29233d\",\"dweb:/ipfs/QmTWDVvR4m82MGXWYY8BCaVN89TguQJSLqRgzHzrMkFHtx\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x43d853d6dd3c3f3d5a614a25f4553e2d4b719426a9eb2e8e433155306a5fdc02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dc16367f2391bf642f3762bfde686c643a08e8712ce56ad1026eb397247428e\",\"dweb:/ipfs/QmTpEko9tKnBbJNQw7T1oGoa4Gyfh6y28JbNdrQQXKUNAb\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c\",\"dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xf3b62c75cea11a0e8ef8e6526e5e5c74ae47a892b9bcefc0e98d76066e1ffd24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a41faaf836453e02c71fc272c80b3c90a614b30c9ba636512db0d033c7b93beb\",\"dweb:/ipfs/QmeQAreYYaxztQtFLQdHCzCPEorj9T5foSu2hQmxk7xT5x\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xc0c32cb12acb184919a4c205ef58785b56d7247ecf92be1094af81ec2b1f9254\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6053a75463b4611a170cf0626f0c42291b8de42cd205b61c5030a5e57adc989a\",\"dweb:/ipfs/Qmb4Gy4wq3zZGTAHUgF28VPuLwcy7MWQiPczYsg4aBWgNy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x166e17976071ef3bdd470346f92c6480dafe080c0d325f258f31cecc98cedf3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58ed59e4177247af4504389f05f112e6c1e298481a5c97fc11a0c2d6d8a25638\",\"dweb:/ipfs/QmX4BXoQHQLhXLhNTjP6d8A6Yg7FAS6sxCdctgmqxGjZRU\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xf00efff6a85021292d359d1ca89cdfac7fa277deb26cbe54cdb396f48c08d137\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a35531c6604ffe194000573607cf45d7419561020dc67741062b39a20aa2a8a\",\"dweb:/ipfs/QmTYXpXGxPztWNTYKsUKJECqkFBpFTMYdW8NH9McM5WFnb\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb691b9ba9e5a08ee4d4201f9125892420ce6f0e595c3f4014790c71f64475872\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5757a17d5de817abac51de72a4b2528272e6d784eb0f534f25ec4cfa87525c7\",\"dweb:/ipfs/QmS5GFinq87NPYruFH5yQo5A2aDagvNRjhi7DCtQPhAZR3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xf7ff3613d8bad1bc3e25a435ccdf9273bc23308f3c3e71152f8b4bf75cc632e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c0661b4e567d7e848581c7dd77e60dec2ce800b5b491f5dc3e18a6d1dc8dce0\",\"dweb:/ipfs/QmZjAczySSrqtmKK2JRM7VARie7wMiBY1sUbt4DKkLfFnd\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x4efae37327cb35cfe276e9d7900c4159b5992bc255030b1ec7525a7297cfb686\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a39e1bcd1adc74b9e085938e9d245c00fbbd08a313311fc806d6b8c2cb4b438\",\"dweb:/ipfs/QmR5TwUm1dkYZ5uBRW8w6gaduYZaNdRFWiSjTARy1WMhdC\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x639f180f9bedd48998c68f1bf4f8d01b37a4573bc496acb04a55308c6de0045c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ff2313c66e4e14d167aae923b38509ec68dcaa281d2314f45b527139d33d4af\",\"dweb:/ipfs/QmU7aik96EmKeG8feBbQZ8BufngtYB6guGTkZoX5umP73i\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xb97d36c301445278c5f8fd94c7bda1c7406d28def61da67864cb6e27f359d6da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63d542fd2f752d7f715057cbb956e95e198d1ce0545092212025369920a9c33a\",\"dweb:/ipfs/QmNbjRRr4u2denjbZrsQhU5d4mxPyyfv2m5t3suKToLwaB\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x080b124383ec4cae37ea3e96c3b3910d20a99b05c72f6f272898ec839b72f9dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b363ade0054534f553ead520d60c46e28329133f26dab03551484b35c61c99a5\",\"dweb:/ipfs/QmfNPDd23KYGtWUWX2AcRytXjoUu6xuc91hpQLnHCE9SUz\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846\",\"dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3ddad25673a903c650b6f78ad878f0559c66c30ace86e1110ff44fd07900264c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7907214499f21a835a3582b3c24d2844f70a19c6874458e5daae3d0eef205c81\",\"dweb:/ipfs/QmSALTEWv1GbTHH5b739hjzrWC78DDe7trbxEgt5pniF9k\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x63a4fc7046bc052edeec923181f2f886681e1e0b34c4f23ce84425acfe80a1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cee5cb5fa0dc7d47c463f900b5fcd44abe84f6bce23433898af1221598a3a9b\",\"dweb:/ipfs/Qmdjp7Pf6RuGgAnSxUKd9CvniN8gUG6wLH1cdvhg5L9w4z\"]},\"script/DeployBasicNft.s.sol\":{\"keccak256\":\"0x16821a0126b4fa2e2c7db614ccd16ce2adb2084ad8620beb91cde8395f84d5ba\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://4121c82a2b2b515ddd910ca719c01ddb7de211d3d938e45f59a92802593d8a48\",\"dweb:/ipfs/QmTWJ5Tj3aUPAmxEDjDhQSKvL7n2ipL2A8PR1Fhu25QH22\"]},\"src/BasicNFT.sol\":{\"keccak256\":\"0xab317b3482567f4217f85e25d01cb17c00e15bb35d8d5ed4fce3ed36e6b57d53\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://c46ead43eeaf6b71c9624a64f417f7e031f136349c09b8c4b603ddff6d336819\",\"dweb:/ipfs/QmUkGAsYwU4NzihSk4BvVxvt9NSCpxmfkdEeT5xhp7MXWa\"]},\"test/BasicNftTest.s.sol\":{\"keccak256\":\"0x52b0e4b35904dfc323b42e71efa7fdb080b30977ff452ef65f349ca00bcd347c\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://601136d66680be90a17d9d1931020f2fc598e45f0e9e31cab98d882acdf9cb38\",\"dweb:/ipfs/QmeBV9BmWFE4YLFBDgxXNj6SYATfAUtXJeAeFMxPAaenXR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "basicNft",
          "outputs": [
            {
              "internalType": "contract BasicNft",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "deployer",
          "outputs": [
            {
              "internalType": "contract DeployBasicNft",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testNameIsCorrect"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":foundry-devops/=lib/foundry-devops/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/BasicNftTest.s.sol": "BasicNftTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x0bded803c7e28336785fa600f03035e61d0b689bba2f014b1720e576c5ee3307",
        "urls": [
          "bzz-raw://407f3979f460cc60bc7e4ce6fd7da4facac9f52623b4d6805052538d897eab9b",
          "dweb:/ipfs/QmSRhYNywsJhtYEYyPM1izGNsP1SBzxsXwLfcQnFF5NA9p"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x51e6eb138fc953fac1ac78012a39b3f16d9289ce06a222ba93bb0621768f96e6",
        "urls": [
          "bzz-raw://653c577e054cf578594148a07b286571d494f401b6d4a940d3ccabd47b29233d",
          "dweb:/ipfs/QmTWDVvR4m82MGXWYY8BCaVN89TguQJSLqRgzHzrMkFHtx"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x43d853d6dd3c3f3d5a614a25f4553e2d4b719426a9eb2e8e433155306a5fdc02",
        "urls": [
          "bzz-raw://9dc16367f2391bf642f3762bfde686c643a08e8712ce56ad1026eb397247428e",
          "dweb:/ipfs/QmTpEko9tKnBbJNQw7T1oGoa4Gyfh6y28JbNdrQQXKUNAb"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1",
        "urls": [
          "bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c",
          "dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xf3b62c75cea11a0e8ef8e6526e5e5c74ae47a892b9bcefc0e98d76066e1ffd24",
        "urls": [
          "bzz-raw://a41faaf836453e02c71fc272c80b3c90a614b30c9ba636512db0d033c7b93beb",
          "dweb:/ipfs/QmeQAreYYaxztQtFLQdHCzCPEorj9T5foSu2hQmxk7xT5x"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xc0c32cb12acb184919a4c205ef58785b56d7247ecf92be1094af81ec2b1f9254",
        "urls": [
          "bzz-raw://6053a75463b4611a170cf0626f0c42291b8de42cd205b61c5030a5e57adc989a",
          "dweb:/ipfs/Qmb4Gy4wq3zZGTAHUgF28VPuLwcy7MWQiPczYsg4aBWgNy"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x166e17976071ef3bdd470346f92c6480dafe080c0d325f258f31cecc98cedf3e",
        "urls": [
          "bzz-raw://58ed59e4177247af4504389f05f112e6c1e298481a5c97fc11a0c2d6d8a25638",
          "dweb:/ipfs/QmX4BXoQHQLhXLhNTjP6d8A6Yg7FAS6sxCdctgmqxGjZRU"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0xf00efff6a85021292d359d1ca89cdfac7fa277deb26cbe54cdb396f48c08d137",
        "urls": [
          "bzz-raw://2a35531c6604ffe194000573607cf45d7419561020dc67741062b39a20aa2a8a",
          "dweb:/ipfs/QmTYXpXGxPztWNTYKsUKJECqkFBpFTMYdW8NH9McM5WFnb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xb691b9ba9e5a08ee4d4201f9125892420ce6f0e595c3f4014790c71f64475872",
        "urls": [
          "bzz-raw://d5757a17d5de817abac51de72a4b2528272e6d784eb0f534f25ec4cfa87525c7",
          "dweb:/ipfs/QmS5GFinq87NPYruFH5yQo5A2aDagvNRjhi7DCtQPhAZR3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xf7ff3613d8bad1bc3e25a435ccdf9273bc23308f3c3e71152f8b4bf75cc632e9",
        "urls": [
          "bzz-raw://6c0661b4e567d7e848581c7dd77e60dec2ce800b5b491f5dc3e18a6d1dc8dce0",
          "dweb:/ipfs/QmZjAczySSrqtmKK2JRM7VARie7wMiBY1sUbt4DKkLfFnd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x4efae37327cb35cfe276e9d7900c4159b5992bc255030b1ec7525a7297cfb686",
        "urls": [
          "bzz-raw://9a39e1bcd1adc74b9e085938e9d245c00fbbd08a313311fc806d6b8c2cb4b438",
          "dweb:/ipfs/QmR5TwUm1dkYZ5uBRW8w6gaduYZaNdRFWiSjTARy1WMhdC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x639f180f9bedd48998c68f1bf4f8d01b37a4573bc496acb04a55308c6de0045c",
        "urls": [
          "bzz-raw://4ff2313c66e4e14d167aae923b38509ec68dcaa281d2314f45b527139d33d4af",
          "dweb:/ipfs/QmU7aik96EmKeG8feBbQZ8BufngtYB6guGTkZoX5umP73i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xb97d36c301445278c5f8fd94c7bda1c7406d28def61da67864cb6e27f359d6da",
        "urls": [
          "bzz-raw://63d542fd2f752d7f715057cbb956e95e198d1ce0545092212025369920a9c33a",
          "dweb:/ipfs/QmNbjRRr4u2denjbZrsQhU5d4mxPyyfv2m5t3suKToLwaB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x080b124383ec4cae37ea3e96c3b3910d20a99b05c72f6f272898ec839b72f9dd",
        "urls": [
          "bzz-raw://b363ade0054534f553ead520d60c46e28329133f26dab03551484b35c61c99a5",
          "dweb:/ipfs/QmfNPDd23KYGtWUWX2AcRytXjoUu6xuc91hpQLnHCE9SUz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x39194d726021816f8a5f2b821574349a4884833cf841378dc8e6862e5f789ed6",
        "urls": [
          "bzz-raw://08cfffa942e4589c4d927db3fecfea998e9486ff41f48ee905fdda34d152a846",
          "dweb:/ipfs/QmQKwHL48iBd5XzRAnSNnGBXo6Ykt22iADEReEusX1SQvK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x3ddad25673a903c650b6f78ad878f0559c66c30ace86e1110ff44fd07900264c",
        "urls": [
          "bzz-raw://7907214499f21a835a3582b3c24d2844f70a19c6874458e5daae3d0eef205c81",
          "dweb:/ipfs/QmSALTEWv1GbTHH5b739hjzrWC78DDe7trbxEgt5pniF9k"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x63a4fc7046bc052edeec923181f2f886681e1e0b34c4f23ce84425acfe80a1fb",
        "urls": [
          "bzz-raw://9cee5cb5fa0dc7d47c463f900b5fcd44abe84f6bce23433898af1221598a3a9b",
          "dweb:/ipfs/Qmdjp7Pf6RuGgAnSxUKd9CvniN8gUG6wLH1cdvhg5L9w4z"
        ],
        "license": "MIT"
      },
      "script/DeployBasicNft.s.sol": {
        "keccak256": "0x16821a0126b4fa2e2c7db614ccd16ce2adb2084ad8620beb91cde8395f84d5ba",
        "urls": [
          "bzz-raw://4121c82a2b2b515ddd910ca719c01ddb7de211d3d938e45f59a92802593d8a48",
          "dweb:/ipfs/QmTWJ5Tj3aUPAmxEDjDhQSKvL7n2ipL2A8PR1Fhu25QH22"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "src/BasicNFT.sol": {
        "keccak256": "0xab317b3482567f4217f85e25d01cb17c00e15bb35d8d5ed4fce3ed36e6b57d53",
        "urls": [
          "bzz-raw://c46ead43eeaf6b71c9624a64f417f7e031f136349c09b8c4b603ddff6d336819",
          "dweb:/ipfs/QmUkGAsYwU4NzihSk4BvVxvt9NSCpxmfkdEeT5xhp7MXWa"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "test/BasicNftTest.s.sol": {
        "keccak256": "0x52b0e4b35904dfc323b42e71efa7fdb080b30977ff452ef65f349ca00bcd347c",
        "urls": [
          "bzz-raw://601136d66680be90a17d9d1931020f2fc598e45f0e9e31cab98d882acdf9cb38",
          "dweb:/ipfs/QmeBV9BmWFE4YLFBDgxXNj6SYATfAUtXJeAeFMxPAaenXR"
        ],
        "license": "SEE LICENSE IN LICENSE"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/BasicNftTest.s.sol",
    "id": 45480,
    "exportedSymbols": {
      "BasicNft": [
        45415
      ],
      "BasicNftTest": [
        45479
      ],
      "DeployBasicNft": [
        45356
      ],
      "Test": [
        11643
      ]
    },
    "nodeType": "SourceUnit",
    "src": "51:611:32",
    "nodes": [
      {
        "id": 45417,
        "nodeType": "PragmaDirective",
        "src": "51:23:32",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 45419,
        "nodeType": "ImportDirective",
        "src": "75:42:32",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45480,
        "sourceUnit": 11644,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45418,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11643,
              "src": "84:4:32",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45421,
        "nodeType": "ImportDirective",
        "src": "118:64:32",
        "nodes": [],
        "absolutePath": "script/DeployBasicNft.s.sol",
        "file": "../script/DeployBasicNft.s.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45480,
        "sourceUnit": 45357,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45420,
              "name": "DeployBasicNft",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45356,
              "src": "127:14:32",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45423,
        "nodeType": "ImportDirective",
        "src": "183:47:32",
        "nodes": [],
        "absolutePath": "src/BasicNFT.sol",
        "file": "../src/BasicNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45480,
        "sourceUnit": 45416,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45422,
              "name": "BasicNft",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45415,
              "src": "192:8:32",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45479,
        "nodeType": "ContractDefinition",
        "src": "232:429:32",
        "nodes": [
          {
            "id": 45428,
            "nodeType": "VariableDeclaration",
            "src": "265:30:32",
            "nodes": [],
            "constant": false,
            "functionSelector": "d5f39488",
            "mutability": "mutable",
            "name": "deployer",
            "nameLocation": "287:8:32",
            "scope": 45479,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DeployBasicNft_$45356",
              "typeString": "contract DeployBasicNft"
            },
            "typeName": {
              "id": 45427,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45426,
                "name": "DeployBasicNft",
                "nameLocations": [
                  "265:14:32"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45356,
                "src": "265:14:32"
              },
              "referencedDeclaration": 45356,
              "src": "265:14:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DeployBasicNft_$45356",
                "typeString": "contract DeployBasicNft"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45431,
            "nodeType": "VariableDeclaration",
            "src": "298:24:32",
            "nodes": [],
            "constant": false,
            "functionSelector": "c37aa674",
            "mutability": "mutable",
            "name": "basicNft",
            "nameLocation": "314:8:32",
            "scope": 45479,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BasicNft_$45415",
              "typeString": "contract BasicNft"
            },
            "typeName": {
              "id": 45430,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45429,
                "name": "BasicNft",
                "nameLocations": [
                  "298:8:32"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45415,
                "src": "298:8:32"
              },
              "referencedDeclaration": 45415,
              "src": "298:8:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasicNft_$45415",
                "typeString": "contract BasicNft"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45448,
            "nodeType": "FunctionDefinition",
            "src": "326:92:32",
            "nodes": [],
            "body": {
              "id": 45447,
              "nodeType": "Block",
              "src": "350:68:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45434,
                      "name": "deployer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45428,
                      "src": "354:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DeployBasicNft_$45356",
                        "typeString": "contract DeployBasicNft"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "365:18:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_DeployBasicNft_$45356_$",
                          "typeString": "function () returns (contract DeployBasicNft)"
                        },
                        "typeName": {
                          "id": 45436,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45435,
                            "name": "DeployBasicNft",
                            "nameLocations": [
                              "369:14:32"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 45356,
                            "src": "369:14:32"
                          },
                          "referencedDeclaration": 45356,
                          "src": "369:14:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DeployBasicNft_$45356",
                            "typeString": "contract DeployBasicNft"
                          }
                        }
                      },
                      "id": 45438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "365:20:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DeployBasicNft_$45356",
                        "typeString": "contract DeployBasicNft"
                      }
                    },
                    "src": "354:31:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DeployBasicNft_$45356",
                      "typeString": "contract DeployBasicNft"
                    }
                  },
                  "id": 45440,
                  "nodeType": "ExpressionStatement",
                  "src": "354:31:32"
                },
                {
                  "expression": {
                    "id": 45445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45441,
                      "name": "basicNft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45431,
                      "src": "389:8:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BasicNft_$45415",
                        "typeString": "contract BasicNft"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 45442,
                          "name": "deployer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45428,
                          "src": "400:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DeployBasicNft_$45356",
                            "typeString": "contract DeployBasicNft"
                          }
                        },
                        "id": 45443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "409:3:32",
                        "memberName": "run",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45355,
                        "src": "400:12:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_contract$_BasicNft_$45415_$",
                          "typeString": "function () external returns (contract BasicNft)"
                        }
                      },
                      "id": 45444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "400:14:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BasicNft_$45415",
                        "typeString": "contract BasicNft"
                      }
                    },
                    "src": "389:25:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BasicNft_$45415",
                      "typeString": "contract BasicNft"
                    }
                  },
                  "id": 45446,
                  "nodeType": "ExpressionStatement",
                  "src": "389:25:32"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "335:5:32",
            "parameters": {
              "id": 45432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "340:2:32"
            },
            "returnParameters": {
              "id": 45433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "350:0:32"
            },
            "scope": 45479,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45478,
            "nodeType": "FunctionDefinition",
            "src": "421:238:32",
            "nodes": [],
            "body": {
              "id": 45477,
              "nodeType": "Block",
              "src": "462:197:32",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45452
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45452,
                      "mutability": "mutable",
                      "name": "expectedName",
                      "nameLocation": "480:12:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 45477,
                      "src": "466:26:32",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 45451,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "466:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45454,
                  "initialValue": {
                    "hexValue": "446f676965",
                    "id": 45453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "495:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e5d21699003d762b953d66adecbe4f97c4791cae2f281f96a4beb7efcb7bbcf6",
                      "typeString": "literal_string \"Dogie\""
                    },
                    "value": "Dogie"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "466:36:32"
                },
                {
                  "assignments": [
                    45456
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45456,
                      "mutability": "mutable",
                      "name": "actualName",
                      "nameLocation": "520:10:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 45477,
                      "src": "506:24:32",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 45455,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "506:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45460,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45457,
                        "name": "basicNft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45431,
                        "src": "533:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BasicNft_$45415",
                          "typeString": "contract BasicNft"
                        }
                      },
                      "id": 45458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "542:4:32",
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42888,
                      "src": "533:13:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 45459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "533:15:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "506:42:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 45474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 45465,
                                  "name": "expectedName",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45452,
                                  "src": "590:12:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 45463,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "573:3:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 45464,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "577:12:32",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "573:16:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 45466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "573:30:32",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 45462,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "563:9:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 45467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "563:41:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 45471,
                                  "name": "actualName",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45456,
                                  "src": "639:10:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 45469,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "622:3:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 45470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "626:12:32",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "622:16:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 45472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "622:28:32",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 45468,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "612:9:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 45473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "612:39:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "563:88:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 45461,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "552:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 45475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "552:103:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45476,
                  "nodeType": "ExpressionStatement",
                  "src": "552:103:32"
                }
              ]
            },
            "functionSelector": "0032f8d1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testNameIsCorrect",
            "nameLocation": "430:17:32",
            "parameters": {
              "id": 45449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "447:2:32"
            },
            "returnParameters": {
              "id": 45450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "462:0:32"
            },
            "scope": 45479,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45424,
              "name": "Test",
              "nameLocations": [
                "257:4:32"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11643,
              "src": "257:4:32"
            },
            "id": 45425,
            "nodeType": "InheritanceSpecifier",
            "src": "257:4:32"
          }
        ],
        "canonicalName": "BasicNftTest",
        "contractDependencies": [
          45356
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45479,
          11643,
          2357,
          2354,
          11592,
          7350,
          7060,
          6296,
          4516,
          3823,
          2291
        ],
        "name": "BasicNftTest",
        "nameLocation": "241:12:32",
        "scope": 45480,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85,
          2418,
          2423,
          2428,
          2435,
          2442,
          2449
        ]
      }
    ],
    "license": "SEE LICENSE IN LICENSE"
  },
  "id": 32
}