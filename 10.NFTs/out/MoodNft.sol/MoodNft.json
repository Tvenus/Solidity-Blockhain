{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "sadSvgUri",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "happySvgUri",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ERC721Metadata__URI_QueryFor_NonExistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MoodNft__CantFlipMoodIfNotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "CreatedNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "flipMood",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHappySVG",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSadSVG",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintNft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162001cb538038062001cb58339810160408190526200003491620001f3565b60405180604001604052806008815260200167135bdbd90813919560c21b8152506040518060400160405280600281526020016126a760f11b8152508160009081620000819190620002ec565b506001620000908282620002ec565b505050620000ad620000a7620000d860201b60201c565b620000dc565b60006007556008620000c08382620002ec565b506009620000cf8282620002ec565b505050620003b8565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015657600080fd5b81516001600160401b03808211156200017357620001736200012e565b604051601f8301601f19908116603f011681019082821181831017156200019e576200019e6200012e565b81604052838152602092508683858801011115620001bb57600080fd5b600091505b83821015620001df5785820183015181830184015290820190620001c0565b600093810190920192909252949350505050565b600080604083850312156200020757600080fd5b82516001600160401b03808211156200021f57600080fd5b6200022d8683870162000144565b935060208501519150808211156200024457600080fd5b50620002538582860162000144565b9150509250929050565b600181811c908216806200027257607f821691505b6020821081036200029357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002e757600081815260208120601f850160051c81016020861015620002c25750805b601f850160051c820191505b81811015620002e357828155600101620002ce565b5050505b505050565b81516001600160401b038111156200030857620003086200012e565b62000320816200031984546200025d565b8462000299565b602080601f8311600181146200035857600084156200033f5750858301515b600019600386901b1c1916600185901b178555620002e3565b600085815260208120601f198616915b82811015620003895788860151825594840194600190910190840162000368565b5085821015620003a85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6118ed80620003c86000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b8578063c1a147a01161007c578063c1a147a014610266578063c2229fea14610279578063c87b56dd14610281578063e985e9c514610294578063f2fde38b146102a7578063fc842121146102ba57600080fd5b8063715018a61461021f5780638da5cb5b1461022757806395d89b4114610238578063a22cb46514610240578063b88d4fde1461025357600080fd5b806342842e0e116100ff57806342842e0e146101cc5780635de0682f146101df5780636352211e146101e75780636e02007d146101fa57806370a082311461020c57600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a457806323b872dd146101b9575b600080fd5b61014f61014a3660046112a6565b6102c2565b60405190151581526020015b60405180910390f35b61016c610314565b60405161015b919061131a565b61018c61018736600461132d565b6103a6565b6040516001600160a01b03909116815260200161015b565b6101b76101b2366004611362565b6103cd565b005b6101b76101c736600461138c565b6104e7565b6101b76101da36600461138c565b610518565b61016c610533565b61018c6101f536600461132d565b610542565b6007545b60405190815260200161015b565b6101fe61021a3660046113c8565b6105a2565b6101b7610628565b6006546001600160a01b031661018c565b61016c61063c565b6101b761024e3660046113e3565b61064b565b6101b7610261366004611435565b61065a565b6101b761027436600461132d565b610692565b6101b7610716565b61016c61028f36600461132d565b610760565b61014f6102a2366004611511565b610974565b6101b76102b53660046113c8565b6109a2565b61016c610a18565b60006001600160e01b031982166380ac58cd60e01b14806102f357506001600160e01b03198216635b5e139f60e01b145b8061030e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461032390611544565b80601f016020809104026020016040519081016040528092919081815260200182805461034f90611544565b801561039c5780601f106103715761010080835404028352916020019161039c565b820191906000526020600020905b81548152906001019060200180831161037f57829003601f168201915b5050505050905090565b60006103b182610a27565b506000908152600460205260409020546001600160a01b031690565b60006103d882610542565b9050806001600160a01b0316836001600160a01b03160361044a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061046657506104668133610974565b6104d85760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610441565b6104e28383610a86565b505050565b6104f13382610af4565b61050d5760405162461bcd60e51b81526004016104419061157e565b6104e2838383610b53565b6104e28383836040518060200160405280600081525061065a565b60606008805461032390611544565b6000818152600260205260408120546001600160a01b03168061030e5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610441565b60006001600160a01b03821661060c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610441565b506001600160a01b031660009081526003602052604090205490565b610630610cb7565b61063a6000610d11565b565b60606001805461032390611544565b610656338383610d63565b5050565b6106643383610af4565b6106805760405162461bcd60e51b81526004016104419061157e565b61068c84848484610e31565b50505050565b61069c3382610af4565b6106b9576040516385046ca760e01b815260040160405180910390fd5b6000818152600a602052604081205460ff1660018111156106dc576106dc6115cb565b036106fc576000908152600a60205260409020805460ff19166001179055565b6000818152600a60205260409020805460ff191690555b50565b61072233600754610e64565b6007546107309060016115f7565b60078190556040517f72102923c3d44433bd725cb2c744a4c92a536ad249b665dec9853a16ed66552590600090a2565b6000818152600260205260409020546060906001600160a01b0316610798576040516336faf6d760e11b815260040160405180910390fd5b6000600980546107a790611544565b80601f01602080910402602001604051908101604052809291908181526020018280546107d390611544565b80156108205780601f106107f557610100808354040283529160200191610820565b820191906000526020600020905b81548152906001019060200180831161080357829003601f168201915b509394506001935061083192505050565b6000848152600a602052604090205460ff166001811115610854576108546115cb565b036108e7576008805461086690611544565b80601f016020809104026020016040519081016040528092919081815260200182805461089290611544565b80156108df5780601f106108b4576101008083540402835291602001916108df565b820191906000526020600020905b8154815290600101906020018083116108c257829003601f168201915b505050505090505b60408051808201909152601d81527f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000602082015261094c610926610314565b8360405160200161093892919061160a565b604051602081830303815290604052610e7e565b60405160200161095d92919061171e565b604051602081830303815290604052915050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6109aa610cb7565b6001600160a01b038116610a0f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610441565b61071381610d11565b60606009805461032390611544565b6000818152600260205260409020546001600160a01b03166107135760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610441565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610abb82610542565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b0083610542565b9050806001600160a01b0316846001600160a01b03161480610b275750610b278185610974565b80610b4b5750836001600160a01b0316610b40846103a6565b6001600160a01b0316145b949350505050565b826001600160a01b0316610b6682610542565b6001600160a01b031614610b8c5760405162461bcd60e51b81526004016104419061174d565b6001600160a01b038216610bee5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610441565b826001600160a01b0316610c0182610542565b6001600160a01b031614610c275760405162461bcd60e51b81526004016104419061174d565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b0316331461063a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610441565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610dc45760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610441565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e3c848484610b53565b610e4884848484610fd1565b61068c5760405162461bcd60e51b815260040161044190611792565b6106568282604051806020016040528060008152506110d2565b60608151600003610e9d57505060408051602081019091526000815290565b60006040518060600160405280604081526020016118786040913990506000600384516002610ecc91906115f7565b610ed691906117e4565b610ee1906004611806565b67ffffffffffffffff811115610ef957610ef961141f565b6040519080825280601f01601f191660200182016040528015610f23576020820181803683370190505b509050600182016020820185865187015b80821015610f8f576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250610f34565b5050600386510660018114610fab5760028114610fbe57610fc6565b603d6001830353603d6002830353610fc6565b603d60018303535b509195945050505050565b60006001600160a01b0384163b156110c757604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061101590339089908890889060040161181d565b6020604051808303816000875af1925050508015611050575060408051601f3d908101601f1916820190925261104d9181019061185a565b60015b6110ad573d80801561107e576040519150601f19603f3d011682016040523d82523d6000602084013e611083565b606091505b5080516000036110a55760405162461bcd60e51b815260040161044190611792565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b4b565b506001949350505050565b6110dc8383611105565b6110e96000848484610fd1565b6104e25760405162461bcd60e51b815260040161044190611792565b6001600160a01b03821661115b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610441565b6000818152600260205260409020546001600160a01b0316156111c05760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610441565b6000818152600260205260409020546001600160a01b0316156112255760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610441565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461071357600080fd5b6000602082840312156112b857600080fd5b81356112c381611290565b9392505050565b60005b838110156112e55781810151838201526020016112cd565b50506000910152565b600081518084526113068160208601602086016112ca565b601f01601f19169290920160200192915050565b6020815260006112c360208301846112ee565b60006020828403121561133f57600080fd5b5035919050565b80356001600160a01b038116811461135d57600080fd5b919050565b6000806040838503121561137557600080fd5b61137e83611346565b946020939093013593505050565b6000806000606084860312156113a157600080fd5b6113aa84611346565b92506113b860208501611346565b9150604084013590509250925092565b6000602082840312156113da57600080fd5b6112c382611346565b600080604083850312156113f657600080fd5b6113ff83611346565b91506020830135801515811461141457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561144b57600080fd5b61145485611346565b935061146260208601611346565b925060408501359150606085013567ffffffffffffffff8082111561148657600080fd5b818701915087601f83011261149a57600080fd5b8135818111156114ac576114ac61141f565b604051601f8201601f19908116603f011681019083821181831017156114d4576114d461141f565b816040528281528a60208487010111156114ed57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561152457600080fd5b61152d83611346565b915061153b60208401611346565b90509250929050565b600181811c9082168061155857607f821691505b60208210810361157857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561030e5761030e6115e1565b683d913730b6b2911d1160b91b8152825160009061162f8160098501602088016112ca565b7f222c20226465736372697074696f6e223a22416e204e465420746861742072656009918401918201527f666c6563747320746865206d6f6f64206f6620746865206f776e65722c20313060298201526e018129037b71021b430b4b71091161608d1b60498201527f2261747472696275746573223a205b7b2274726169745f74797065223a20226d60588201527f6f6f64696e657373222c202276616c7565223a203130307d5d2c2022696d616760788201526332911d1160e11b6098820152835161170381609c8401602088016112ca565b61227d60f01b609c9290910191820152609e01949350505050565b600083516117308184602088016112ca565b8351908301906117448183602088016112ca565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008261180157634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761030e5761030e6115e1565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611850908301846112ee565b9695505050505050565b60006020828403121561186c57600080fd5b81516112c38161129056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212200b696ea67147bf51f1c23e01774b66d490d09375c3d463752a89e5cf37bf4cb364736f6c63430008140033",
    "sourceMap": "612:2180:36:-:0;;;982:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:21;;;;;;;;;;;;;-1:-1:-1;;;1390:113:21;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:21;;;1464:5;1456;:13;;;;;;:::i;:::-;-1:-1:-1;1479:7:21;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;936:32:20;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;1099:1:36::1;1082:14;:18:::0;1104:11:::1;:23;1118:9:::0;1104:11;:23:::1;:::i;:::-;-1:-1:-1::0;1131:13:36::1;:27;1147:11:::0;1131:13;:27:::1;:::i;:::-;;982:180:::0;;612:2180;;640:96:27;719:10;;640:96::o;2433:187:20:-;2525:6;;;-1:-1:-1;;;;;2541:17:20;;;-1:-1:-1;;;;;;2541:17:20;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:41:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:41;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:41;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:41:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:41;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:41;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:41;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:41;;;3992:26;3943:89;-1:-1:-1;;2747:1:41;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:41;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:41;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:41;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:41:o;:::-;612:2180:36;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b8578063c1a147a01161007c578063c1a147a014610266578063c2229fea14610279578063c87b56dd14610281578063e985e9c514610294578063f2fde38b146102a7578063fc842121146102ba57600080fd5b8063715018a61461021f5780638da5cb5b1461022757806395d89b4114610238578063a22cb46514610240578063b88d4fde1461025357600080fd5b806342842e0e116100ff57806342842e0e146101cc5780635de0682f146101df5780636352211e146101e75780636e02007d146101fa57806370a082311461020c57600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a457806323b872dd146101b9575b600080fd5b61014f61014a3660046112a6565b6102c2565b60405190151581526020015b60405180910390f35b61016c610314565b60405161015b919061131a565b61018c61018736600461132d565b6103a6565b6040516001600160a01b03909116815260200161015b565b6101b76101b2366004611362565b6103cd565b005b6101b76101c736600461138c565b6104e7565b6101b76101da36600461138c565b610518565b61016c610533565b61018c6101f536600461132d565b610542565b6007545b60405190815260200161015b565b6101fe61021a3660046113c8565b6105a2565b6101b7610628565b6006546001600160a01b031661018c565b61016c61063c565b6101b761024e3660046113e3565b61064b565b6101b7610261366004611435565b61065a565b6101b761027436600461132d565b610692565b6101b7610716565b61016c61028f36600461132d565b610760565b61014f6102a2366004611511565b610974565b6101b76102b53660046113c8565b6109a2565b61016c610a18565b60006001600160e01b031982166380ac58cd60e01b14806102f357506001600160e01b03198216635b5e139f60e01b145b8061030e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461032390611544565b80601f016020809104026020016040519081016040528092919081815260200182805461034f90611544565b801561039c5780601f106103715761010080835404028352916020019161039c565b820191906000526020600020905b81548152906001019060200180831161037f57829003601f168201915b5050505050905090565b60006103b182610a27565b506000908152600460205260409020546001600160a01b031690565b60006103d882610542565b9050806001600160a01b0316836001600160a01b03160361044a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061046657506104668133610974565b6104d85760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610441565b6104e28383610a86565b505050565b6104f13382610af4565b61050d5760405162461bcd60e51b81526004016104419061157e565b6104e2838383610b53565b6104e28383836040518060200160405280600081525061065a565b60606008805461032390611544565b6000818152600260205260408120546001600160a01b03168061030e5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610441565b60006001600160a01b03821661060c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610441565b506001600160a01b031660009081526003602052604090205490565b610630610cb7565b61063a6000610d11565b565b60606001805461032390611544565b610656338383610d63565b5050565b6106643383610af4565b6106805760405162461bcd60e51b81526004016104419061157e565b61068c84848484610e31565b50505050565b61069c3382610af4565b6106b9576040516385046ca760e01b815260040160405180910390fd5b6000818152600a602052604081205460ff1660018111156106dc576106dc6115cb565b036106fc576000908152600a60205260409020805460ff19166001179055565b6000818152600a60205260409020805460ff191690555b50565b61072233600754610e64565b6007546107309060016115f7565b60078190556040517f72102923c3d44433bd725cb2c744a4c92a536ad249b665dec9853a16ed66552590600090a2565b6000818152600260205260409020546060906001600160a01b0316610798576040516336faf6d760e11b815260040160405180910390fd5b6000600980546107a790611544565b80601f01602080910402602001604051908101604052809291908181526020018280546107d390611544565b80156108205780601f106107f557610100808354040283529160200191610820565b820191906000526020600020905b81548152906001019060200180831161080357829003601f168201915b509394506001935061083192505050565b6000848152600a602052604090205460ff166001811115610854576108546115cb565b036108e7576008805461086690611544565b80601f016020809104026020016040519081016040528092919081815260200182805461089290611544565b80156108df5780601f106108b4576101008083540402835291602001916108df565b820191906000526020600020905b8154815290600101906020018083116108c257829003601f168201915b505050505090505b60408051808201909152601d81527f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000602082015261094c610926610314565b8360405160200161093892919061160a565b604051602081830303815290604052610e7e565b60405160200161095d92919061171e565b604051602081830303815290604052915050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6109aa610cb7565b6001600160a01b038116610a0f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610441565b61071381610d11565b60606009805461032390611544565b6000818152600260205260409020546001600160a01b03166107135760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610441565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610abb82610542565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b0083610542565b9050806001600160a01b0316846001600160a01b03161480610b275750610b278185610974565b80610b4b5750836001600160a01b0316610b40846103a6565b6001600160a01b0316145b949350505050565b826001600160a01b0316610b6682610542565b6001600160a01b031614610b8c5760405162461bcd60e51b81526004016104419061174d565b6001600160a01b038216610bee5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610441565b826001600160a01b0316610c0182610542565b6001600160a01b031614610c275760405162461bcd60e51b81526004016104419061174d565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b0316331461063a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610441565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610dc45760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610441565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e3c848484610b53565b610e4884848484610fd1565b61068c5760405162461bcd60e51b815260040161044190611792565b6106568282604051806020016040528060008152506110d2565b60608151600003610e9d57505060408051602081019091526000815290565b60006040518060600160405280604081526020016118786040913990506000600384516002610ecc91906115f7565b610ed691906117e4565b610ee1906004611806565b67ffffffffffffffff811115610ef957610ef961141f565b6040519080825280601f01601f191660200182016040528015610f23576020820181803683370190505b509050600182016020820185865187015b80821015610f8f576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250610f34565b5050600386510660018114610fab5760028114610fbe57610fc6565b603d6001830353603d6002830353610fc6565b603d60018303535b509195945050505050565b60006001600160a01b0384163b156110c757604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061101590339089908890889060040161181d565b6020604051808303816000875af1925050508015611050575060408051601f3d908101601f1916820190925261104d9181019061185a565b60015b6110ad573d80801561107e576040519150601f19603f3d011682016040523d82523d6000602084013e611083565b606091505b5080516000036110a55760405162461bcd60e51b815260040161044190611792565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b4b565b506001949350505050565b6110dc8383611105565b6110e96000848484610fd1565b6104e25760405162461bcd60e51b815260040161044190611792565b6001600160a01b03821661115b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610441565b6000818152600260205260409020546001600160a01b0316156111c05760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610441565b6000818152600260205260409020546001600160a01b0316156112255760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610441565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461071357600080fd5b6000602082840312156112b857600080fd5b81356112c381611290565b9392505050565b60005b838110156112e55781810151838201526020016112cd565b50506000910152565b600081518084526113068160208601602086016112ca565b601f01601f19169290920160200192915050565b6020815260006112c360208301846112ee565b60006020828403121561133f57600080fd5b5035919050565b80356001600160a01b038116811461135d57600080fd5b919050565b6000806040838503121561137557600080fd5b61137e83611346565b946020939093013593505050565b6000806000606084860312156113a157600080fd5b6113aa84611346565b92506113b860208501611346565b9150604084013590509250925092565b6000602082840312156113da57600080fd5b6112c382611346565b600080604083850312156113f657600080fd5b6113ff83611346565b91506020830135801515811461141457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561144b57600080fd5b61145485611346565b935061146260208601611346565b925060408501359150606085013567ffffffffffffffff8082111561148657600080fd5b818701915087601f83011261149a57600080fd5b8135818111156114ac576114ac61141f565b604051601f8201601f19908116603f011681019083821181831017156114d4576114d461141f565b816040528281528a60208487010111156114ed57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561152457600080fd5b61152d83611346565b915061153b60208401611346565b90509250929050565b600181811c9082168061155857607f821691505b60208210810361157857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561030e5761030e6115e1565b683d913730b6b2911d1160b91b8152825160009061162f8160098501602088016112ca565b7f222c20226465736372697074696f6e223a22416e204e465420746861742072656009918401918201527f666c6563747320746865206d6f6f64206f6620746865206f776e65722c20313060298201526e018129037b71021b430b4b71091161608d1b60498201527f2261747472696275746573223a205b7b2274726169745f74797065223a20226d60588201527f6f6f64696e657373222c202276616c7565223a203130307d5d2c2022696d616760788201526332911d1160e11b6098820152835161170381609c8401602088016112ca565b61227d60f01b609c9290910191820152609e01949350505050565b600083516117308184602088016112ca565b8351908301906117448183602088016112ca565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008261180157634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761030e5761030e6115e1565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611850908301846112ee565b9695505050505050565b60006020828403121561186c57600080fd5b81516112c38161129056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212200b696ea67147bf51f1c23e01774b66d490d09375c3d463752a89e5cf37bf4cb364736f6c63430008140033",
    "sourceMap": "612:2180:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:21;;;;;;:::i;:::-;;:::i;:::-;;;565:14:41;;558:22;540:41;;528:2;513:18;1570:300:21;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:41;;;1679:51;;1667:2;1652:18;3935:167:21;1533:203:41;3468:406:21;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;:::i;:::-;;:::i;5004:179::-;;;;;;:::i;:::-;;:::i;2618:83:36:-;;;:::i;2190:219:21:-;;;;;;:::i;:::-;;:::i;2704:86:36:-;2772:14;;2704:86;;;2657:25:41;;;2645:2;2630:18;2704:86:36;2511:177:41;1929:204:21;;;;;;:::i;:::-;;:::i;1831:101:20:-;;;:::i;1201:85::-;1273:6;;-1:-1:-1;;;;;1273:6:20;1201:85;;2633:102:21;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5249:314::-;;;;;;:::i;:::-;;:::i;1362:306:36:-;;;;;;:::i;:::-;;:::i;1165:194::-;;;:::i;1787:738::-;;;;;;:::i;:::-;;:::i;4388:162:21:-;;;;;;:::i;:::-;;:::i;2081:198:20:-;;;;;;:::i;:::-;;:::i;2528:87:36:-;;;:::i;1570:300:21:-;1672:4;-1:-1:-1;;;;;;1707:40:21;;-1:-1:-1;;;1707:40:21;;:104;;-1:-1:-1;;;;;;;1763:48:21;;-1:-1:-1;;;1763:48:21;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:29;;;1827:36:21;1688:175;1570:300;-1:-1:-1;;1570:300:21:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:21;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:21;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:21;:2;-1:-1:-1;;;;;3605:11:21;;3597:57;;;;-1:-1:-1;;;3597:57:21;;5363:2:41;3597:57:21;;;5345:21:41;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:41;;;5485:31;5533:19;;3597:57:21;;;;;;;;;719:10:27;-1:-1:-1;;;;;3686:21:21;;;;:62;;-1:-1:-1;3711:37:21;3728:5;719:10:27;4388:162:21;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:21;;5765:2:41;3665:170:21;;;5747:21:41;5804:2;5784:18;;;5777:30;5843:34;5823:18;;;5816:62;5914:31;5894:18;;;5887:59;5963:19;;3665:170:21;5563:425:41;3665:170:21;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;719:10:27;4834:7:21;4801:18;:41::i;:::-;4793:99;;;;-1:-1:-1;;;4793:99:21;;;;;;;:::i;:::-;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;2618:83:36:-;2660:13;2686:11;2679:18;;;;;:::i;2190:219:21:-;2262:7;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:21;;2324:56;;;;-1:-1:-1;;;2324:56:21;;6609:2:41;2324:56:21;;;6591:21:41;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:41;;;6660:54;6731:18;;2324:56:21;6407:348:41;1929:204:21;2001:7;-1:-1:-1;;;;;2028:19:21;;2020:73;;;;-1:-1:-1;;;2020:73:21;;6962:2:41;2020:73:21;;;6944:21:41;7001:2;6981:18;;;6974:30;7040:34;7020:18;;;7013:62;-1:-1:-1;;;7091:18:41;;;7084:39;7140:19;;2020:73:21;6760:405:41;2020:73:21;-1:-1:-1;;;;;;2110:16:21;;;;;:9;:16;;;;;;;1929:204::o;1831:101:20:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2633:102:21:-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:27;4296:8:21;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;719:10:27;5450:7:21;5417:18;:41::i;:::-;5409:99;;;;-1:-1:-1;;;5409:99:21;;;;;;;:::i;:::-;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;1362:306:36:-;1413:39;1432:10;1444:7;1413:18;:39::i;:::-;1408:96;;1466:33;;-1:-1:-1;;;1466:33:36;;;;;;;;;;;1408:96;1541:14;1512:25;;;:16;:25;;;;;;;;;:43;;;;;;;:::i;:::-;;1508:157;;1562:25;;;;:16;:25;;;;;:40;;-1:-1:-1;;1562:40:36;1590:12;1562:40;;;1362:306::o;1508:157::-;1646:14;1618:25;;;:16;:25;;;;;:42;;-1:-1:-1;;1618:42:36;;;1508:157;1362:306;:::o;1165:194::-;1244:37;1254:10;1266:14;;1244:9;:37::i;:::-;1302:14;;:18;;1319:1;1302:18;:::i;:::-;1285:14;:35;;;1329:26;;;;;;;1165:194::o;1787:738::-;7321:4:21;6930:16;;;:7;:16;;;;;;1865:13:36;;-1:-1:-1;;;;;6930:16:21;1884:87:36;;1919:47;;-1:-1:-1;;;1919:47:36;;;;;;;;;;;1884:87;1974:22;1999:13;1974:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1974:38:36;;-1:-1:-1;2050:12:36;;-1:-1:-1;2021:41:36;;-1:-1:-1;;;2021:41:36;;:25;;;;:16;:25;;;;;;;;;:41;;;;;;;:::i;:::-;;2017:79;;2080:11;2069:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2017:79;1742:38;;;;;;;;;;;;;;;;;2161:349;2243:6;:4;:6::i;:::-;2464:8;2196:299;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2161:13;:349::i;:::-;2121:395;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2099:422;;;1787:738;;;:::o;4388:162:21:-;-1:-1:-1;;;;;4508:25:21;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162::o;2081:198:20:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:20;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:20;;9784:2:41;2161:73:20::1;::::0;::::1;9766:21:41::0;9823:2;9803:18;;;9796:30;9862:34;9842:18;;;9835:62;-1:-1:-1;;;9913:18:41;;;9906:36;9959:19;;2161:73:20::1;9582:402:41::0;2161:73:20::1;2244:28;2263:8;2244:18;:28::i;2528:87:36:-:0;2572:13;2598;2591:20;;;;;:::i;13466:133:21:-;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:21;13539:53;;;;-1:-1:-1;;;13539:53:21;;6609:2:41;13539:53:21;;;6591:21:41;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:41;;;6660:54;6731:18;;13539:53:21;6407:348:41;12768:171:21;12842:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12842:29:21;-1:-1:-1;;;;;12842:29:21;;;;;;;;:24;;12895:23;12842:24;12895:14;:23::i;:::-;-1:-1:-1;;;;;12886:46:21;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;-1:-1:-1;;;;;7706:16:21;:7;-1:-1:-1;;;;;7706:16:21;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:87;;;;7786:7;-1:-1:-1;;;;;7762:31:21;:20;7774:7;7762:11;:20::i;:::-;-1:-1:-1;;;;;7762:31:21;;7706:87;7698:96;7540:261;-1:-1:-1;;;;7540:261:21:o;11423:1233::-;11577:4;-1:-1:-1;;;;;11550:31:21;:23;11565:7;11550:14;:23::i;:::-;-1:-1:-1;;;;;11550:31:21;;11542:81;;;;-1:-1:-1;;;11542:81:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;11641:16:21;;11633:65;;;;-1:-1:-1;;;11633:65:21;;10597:2:41;11633:65:21;;;10579:21:41;10636:2;10616:18;;;10609:30;10675:34;10655:18;;;10648:62;-1:-1:-1;;;10726:18:41;;;10719:34;10770:19;;11633:65:21;10395:400:41;11633:65:21;11878:4;-1:-1:-1;;;;;11851:31:21;:23;11866:7;11851:14;:23::i;:::-;-1:-1:-1;;;;;11851:31:21;;11843:81;;;;-1:-1:-1;;;11843:81:21;;;;;;;:::i;:::-;11993:24;;;;:15;:24;;;;;;;;11986:31;;-1:-1:-1;;;;;;11986:31:21;;;;;;-1:-1:-1;;;;;12461:15:21;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12461:20:21;;;12495:13;;;;;;;;;:18;;11986:31;12495:18;;;12533:16;;;:7;:16;;;;;;:21;;;;;;;;;;12570:27;;12009:7;;12570:27;;;3538:336;3468:406;;:::o;1359:130:20:-;1273:6;;-1:-1:-1;;;;;1273:6:20;719:10:27;1422:23:20;1414:68;;;;-1:-1:-1;;;1414:68:20;;11002:2:41;1414:68:20;;;10984:21:41;;;11021:18;;;11014:30;11080:34;11060:18;;;11053:62;11132:18;;1414:68:20;10800:356:41;2433:187:20;2525:6;;;-1:-1:-1;;;;;2541:17:20;;;-1:-1:-1;;;;;;2541:17:20;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;13075:307:21:-;13225:8;-1:-1:-1;;;;;13216:17:21;:5;-1:-1:-1;;;;;13216:17:21;;13208:55;;;;-1:-1:-1;;;13208:55:21;;11363:2:41;13208:55:21;;;11345:21:41;11402:2;11382:18;;;11375:30;11441:27;11421:18;;;11414:55;11486:18;;13208:55:21;11161:349:41;13208:55:21;-1:-1:-1;;;;;13273:25:21;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13273:46:21;;;;;;;;;;13334:41;;540::41;;;13334::21;;513:18:41;13334:41:21;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;-1:-1:-1;;;6612:110:21;;;;;;;:::i;8131:108::-;8206:26;8216:2;8220:7;8206:26;;;;;;;;;;;;:9;:26::i;505:3026:26:-;563:13;795:4;:11;810:1;795:16;791:31;;-1:-1:-1;;813:9:26;;;;;;;;;-1:-1:-1;813:9:26;;;505:3026::o;791:31::-;872:19;894:6;;;;;;;;;;;;;;;;;872:28;;1303:20;1362:1;1343:4;:11;1357:1;1343:15;;;;:::i;:::-;1342:21;;;;:::i;:::-;1337:27;;:1;:27;:::i;:::-;1326:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1326:39:26;;1303:62;;1540:1;1533:5;1529:13;1641:2;1633:6;1629:15;1748:4;1799;1793:11;1787:4;1783:22;1711:1403;1832:6;1823:7;1820:19;1711:1403;;;1934:1;1925:7;1921:15;1910:26;;1972:7;1966:14;2615:4;2607:5;2603:2;2599:14;2595:25;2585:8;2581:40;2575:47;2564:9;2556:67;2668:1;2657:9;2653:17;2640:30;;2758:4;2750:5;2746:2;2742:14;2738:25;2728:8;2724:40;2718:47;2707:9;2699:67;2811:1;2800:9;2796:17;2783:30;;2900:4;2892:5;2889:1;2885:13;2881:24;2871:8;2867:39;2861:46;2850:9;2842:66;2953:1;2942:9;2938:17;2925:30;;3034:4;3027:5;3023:16;3013:8;3009:31;3003:38;2992:9;2984:58;;3087:1;3076:9;3072:17;3059:30;;1711:1403;;;1715:104;;3272:1;3265:4;3259:11;3255:19;3292:1;3287:120;;;;3425:1;3420:71;;;;3248:243;;3287:120;3339:4;3335:1;3324:9;3320:17;3312:32;3388:4;3384:1;3373:9;3369:17;3361:32;3287:120;;3420:71;3472:4;3468:1;3457:9;3453:17;3445:32;3248:243;-1:-1:-1;3518:6:26;;505:3026;-1:-1:-1;;;;;505:3026:26:o;14151:831:21:-;14300:4;-1:-1:-1;;;;;14320:13:21;;1465:19:25;:23;14316:660:21;;14355:71;;-1:-1:-1;;;14355:71:21;;-1:-1:-1;;;;;14355:36:21;;;;;:71;;719:10:27;;14406:4:21;;14412:7;;14421:4;;14355:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14355:71:21;;;;;;;;-1:-1:-1;;14355:71:21;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14593:6;:13;14610:1;14593:18;14589:321;;14635:60;;-1:-1:-1;;;14635:60:21;;;;;;;:::i;14589:321::-;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;-1:-1:-1;;;;;;14476:51:21;-1:-1:-1;;;14476:51:21;;-1:-1:-1;14469:58:21;;14316:660;-1:-1:-1;14961:4:21;14151:831;;;;;;:::o;8460:309::-;8584:18;8590:2;8594:7;8584:5;:18::i;:::-;8633:53;8664:1;8668:2;8672:7;8681:4;8633:22;:53::i;:::-;8612:150;;;;-1:-1:-1;;;8612:150:21;;;;;;;:::i;9091:920::-;-1:-1:-1;;;;;9170:16:21;;9162:61;;;;-1:-1:-1;;;9162:61:21;;13279:2:41;9162:61:21;;;13261:21:41;;;13298:18;;;13291:30;13357:34;13337:18;;;13330:62;13409:18;;9162:61:21;13077:356:41;9162:61:21;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:21;7344:31;9233:58;;;;-1:-1:-1;;;9233:58:21;;13640:2:41;9233:58:21;;;13622:21:41;13679:2;13659:18;;;13652:30;13718;13698:18;;;13691:58;13766:18;;9233:58:21;13438:352:41;9233:58:21;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:21;7344:31;9437:58;;;;-1:-1:-1;;;9437:58:21;;13640:2:41;9437:58:21;;;13622:21:41;13679:2;13659:18;;;13652:30;13718;13698:18;;;13691:58;13766:18;;9437:58:21;13438:352:41;9437:58:21;-1:-1:-1;;;;;9837:13:21;;;;;;:9;:13;;;;;;;;:18;;9854:1;9837:18;;;9876:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9876:21:21;;;;;9913:33;9884:7;;9837:13;;9913:33;;9837:13;;9913:33;4169:153;;:::o;14:131:41:-;-1:-1:-1;;;;;;88:32:41;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:41:o;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:41;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:41;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:41:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:41;;1348:180;-1:-1:-1;1348:180:41:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:41;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:41:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2693:186::-;2752:6;2805:2;2793:9;2784:7;2780:23;2776:32;2773:52;;;2821:1;2818;2811:12;2773:52;2844:29;2863:9;2844:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:41;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5993:409::-;6195:2;6177:21;;;6234:2;6214:18;;;6207:30;6273:34;6268:2;6253:18;;6246:62;-1:-1:-1;;;6339:2:41;6324:18;;6317:43;6392:3;6377:19;;5993:409::o;7170:127::-;7231:10;7226:3;7222:20;7219:1;7212:31;7262:4;7259:1;7252:15;7286:4;7283:1;7276:15;7302:127;7363:10;7358:3;7354:20;7351:1;7344:31;7394:4;7391:1;7384:15;7418:4;7415:1;7408:15;7434:125;7499:9;;;7520:10;;;7517:36;;;7533:18;;:::i;7564:1512::-;-1:-1:-1;;;8165:43:41;;8231:13;;8147:3;;8253:74;8231:13;8316:1;8307:11;;8300:4;8288:17;;8253:74;:::i;:::-;8390:66;8386:1;8346:16;;;8378:10;;;8371:86;8486:34;8481:2;8473:11;;8466:55;-1:-1:-1;;;8545:2:41;8537:11;;8530:63;8622:66;8617:2;8609:11;;8602:87;8719:66;8713:3;8705:12;;8698:88;-1:-1:-1;;;8810:3:41;8802:12;;8795:42;8862:13;;8884:77;8862:13;8946:3;8938:12;;8931:4;8919:17;;8884:77;:::i;:::-;-1:-1:-1;;;9021:3:41;8980:17;;;;9013:12;;;9006:36;9066:3;9058:12;;7564:1512;-1:-1:-1;;;;7564:1512:41:o;9081:496::-;9260:3;9298:6;9292:13;9314:66;9373:6;9368:3;9361:4;9353:6;9349:17;9314:66;:::i;:::-;9443:13;;9402:16;;;;9465:70;9443:13;9402:16;9512:4;9500:17;;9465:70;:::i;:::-;9551:20;;9081:496;-1:-1:-1;;;;9081:496:41:o;9989:401::-;10191:2;10173:21;;;10230:2;10210:18;;;10203:30;10269:34;10264:2;10249:18;;10242:62;-1:-1:-1;;;10335:2:41;10320:18;;10313:35;10380:3;10365:19;;9989:401::o;11515:414::-;11717:2;11699:21;;;11756:2;11736:18;;;11729:30;11795:34;11790:2;11775:18;;11768:62;-1:-1:-1;;;11861:2:41;11846:18;;11839:48;11919:3;11904:19;;11515:414::o;11934:217::-;11974:1;12000;11990:132;;12044:10;12039:3;12035:20;12032:1;12025:31;12079:4;12076:1;12069:15;12107:4;12104:1;12097:15;11990:132;-1:-1:-1;12136:9:41;;11934:217::o;12156:168::-;12229:9;;;12260;;12277:15;;;12271:22;;12257:37;12247:71;;12298:18;;:::i;12329:489::-;-1:-1:-1;;;;;12598:15:41;;;12580:34;;12650:15;;12645:2;12630:18;;12623:43;12697:2;12682:18;;12675:34;;;12745:3;12740:2;12725:18;;12718:31;;;12523:4;;12766:46;;12792:19;;12784:6;12766:46;:::i;:::-;12758:54;12329:489;-1:-1:-1;;;;;;12329:489:41:o;12823:249::-;12892:6;12945:2;12933:9;12924:7;12920:23;12916:32;12913:52;;;12961:1;12958;12951:12;12913:52;12993:9;12987:16;13012:30;13036:5;13012:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "flipMood(uint256)": "c1a147a0",
    "getApproved(uint256)": "081812fc",
    "getHappySVG()": "fc842121",
    "getSadSVG()": "5de0682f",
    "getTokenCounter()": "6e02007d",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mintNft()": "c2229fea",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "renounceOwnership()": "715018a6",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"sadSvgUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"happySvgUri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC721Metadata__URI_QueryFor_NonExistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MoodNft__CantFlipMoodIfNotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"CreatedNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"flipMood\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHappySVG\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSadSVG\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MoodNft.sol\":\"MoodNft\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30\",\"dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Base64.sol\":{\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96\",\"dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"src/MoodNft.sol\":{\"keccak256\":\"0x823361905eda34140ea81c84f48e2e646eaa24554ed049b70c0eddf1e8a91fad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8621ba6f0e9cf42e2df9d9db394a6b4da30d767a405b5fd5de66abab17a5770\",\"dweb:/ipfs/QmSP1Qj6TLyQT4MH4ztfvgn6BoFdhRKKcCNCiAj5nNMGDs\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "sadSvgUri",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "happySvgUri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721Metadata__URI_QueryFor_NonExistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MoodNft__CantFlipMoodIfNotOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CreatedNFT",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flipMood"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getHappySVG",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSadSVG",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenCounter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintNft"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "See {IERC721Metadata-tokenURI}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":foundry-devops/=lib/foundry-devops/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/MoodNft.sol": "MoodNft"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118",
        "urls": [
          "bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30",
          "dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Base64.sol": {
        "keccak256": "0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136",
        "urls": [
          "bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96",
          "dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "src/MoodNft.sol": {
        "keccak256": "0x823361905eda34140ea81c84f48e2e646eaa24554ed049b70c0eddf1e8a91fad",
        "urls": [
          "bzz-raw://e8621ba6f0e9cf42e2df9d9db394a6b4da30d767a405b5fd5de66abab17a5770",
          "dweb:/ipfs/QmSP1Qj6TLyQT4MH4ztfvgn6BoFdhRKKcCNCiAj5nNMGDs"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/MoodNft.sol",
    "id": 41057,
    "exportedSymbols": {
      "Base64": [
        39337
      ],
      "ERC721": [
        38799
      ],
      "MoodNft": [
        41056
      ],
      "Ownable": [
        37872
      ]
    },
    "nodeType": "SourceUnit",
    "src": "375:2418:36",
    "nodes": [
      {
        "id": 40847,
        "nodeType": "PragmaDirective",
        "src": "375:23:36",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 40849,
        "nodeType": "ImportDirective",
        "src": "400:73:36",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41057,
        "sourceUnit": 38800,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40848,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38799,
              "src": "409:6:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40851,
        "nodeType": "ImportDirective",
        "src": "474:69:36",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41057,
        "sourceUnit": 37873,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40850,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37872,
              "src": "483:7:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40853,
        "nodeType": "ImportDirective",
        "src": "544:66:36",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Base64.sol",
        "file": "@openzeppelin/contracts/utils/Base64.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41057,
        "sourceUnit": 39338,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40852,
              "name": "Base64",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39337,
              "src": "553:6:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41056,
        "nodeType": "ContractDefinition",
        "src": "612:2180:36",
        "nodes": [
          {
            "id": 40859,
            "nodeType": "ErrorDefinition",
            "src": "651:54:36",
            "nodes": [],
            "errorSelector": "6df5edae",
            "name": "ERC721Metadata__URI_QueryFor_NonExistentToken",
            "nameLocation": "657:45:36",
            "parameters": {
              "id": 40858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "702:2:36"
            }
          },
          {
            "id": 40861,
            "nodeType": "ErrorDefinition",
            "src": "707:40:36",
            "nodes": [],
            "errorSelector": "85046ca7",
            "name": "MoodNft__CantFlipMoodIfNotOwner",
            "nameLocation": "713:31:36",
            "parameters": {
              "id": 40860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "744:2:36"
            }
          },
          {
            "id": 40864,
            "nodeType": "EnumDefinition",
            "src": "750:33:36",
            "nodes": [],
            "canonicalName": "MoodNft.NFTState",
            "members": [
              {
                "id": 40862,
                "name": "HAPPY",
                "nameLocation": "768:5:36",
                "nodeType": "EnumValue",
                "src": "768:5:36"
              },
              {
                "id": 40863,
                "name": "SAD",
                "nameLocation": "777:3:36",
                "nodeType": "EnumValue",
                "src": "777:3:36"
              }
            ],
            "name": "NFTState",
            "nameLocation": "755:8:36"
          },
          {
            "id": 40866,
            "nodeType": "VariableDeclaration",
            "src": "786:30:36",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_tokenCounter",
            "nameLocation": "802:14:36",
            "scope": 41056,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40865,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "786:7:36",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 40868,
            "nodeType": "VariableDeclaration",
            "src": "819:26:36",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_sadSvgUri",
            "nameLocation": "834:11:36",
            "scope": 41056,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 40867,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "819:6:36",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 40870,
            "nodeType": "VariableDeclaration",
            "src": "848:28:36",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_happySvgUri",
            "nameLocation": "863:13:36",
            "scope": 41056,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 40869,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "848:6:36",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 40875,
            "nodeType": "VariableDeclaration",
            "src": "880:53:36",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_tokenIdToState",
            "nameLocation": "917:16:36",
            "scope": 41056,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_NFTState_$40864_$",
              "typeString": "mapping(uint256 => enum MoodNft.NFTState)"
            },
            "typeName": {
              "id": 40874,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 40871,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "888:7:36",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "880:28:36",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_NFTState_$40864_$",
                "typeString": "mapping(uint256 => enum MoodNft.NFTState)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 40873,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 40872,
                  "name": "NFTState",
                  "nameLocations": [
                    "899:8:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40864,
                  "src": "899:8:36"
                },
                "referencedDeclaration": 40864,
                "src": "899:8:36",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_NFTState_$40864",
                  "typeString": "enum MoodNft.NFTState"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 40879,
            "nodeType": "EventDefinition",
            "src": "937:42:36",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "72102923c3d44433bd725cb2c744a4c92a536ad249b665dec9853a16ed665525",
            "name": "CreatedNFT",
            "nameLocation": "943:10:36",
            "parameters": {
              "id": 40878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40877,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "970:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 40879,
                  "src": "954:23:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40876,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "953:25:36"
            }
          },
          {
            "id": 40903,
            "nodeType": "FunctionDefinition",
            "src": "982:180:36",
            "nodes": [],
            "body": {
              "id": 40902,
              "nodeType": "Block",
              "src": "1078:84:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 40892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40890,
                      "name": "s_tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40866,
                      "src": "1082:14:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 40891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1099:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1082:18:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40893,
                  "nodeType": "ExpressionStatement",
                  "src": "1082:18:36"
                },
                {
                  "expression": {
                    "id": 40896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40894,
                      "name": "s_sadSvgUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40868,
                      "src": "1104:11:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40895,
                      "name": "sadSvgUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40881,
                      "src": "1118:9:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1104:23:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 40897,
                  "nodeType": "ExpressionStatement",
                  "src": "1104:23:36"
                },
                {
                  "expression": {
                    "id": 40900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40898,
                      "name": "s_happySvgUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40870,
                      "src": "1131:13:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40899,
                      "name": "happySvgUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40883,
                      "src": "1147:11:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1131:27:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 40901,
                  "nodeType": "ExpressionStatement",
                  "src": "1131:27:36"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d6f6f64204e4654",
                    "id": 40886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1060:10:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_061f95ad754b8b2fc14caedf72a009801343f11d011419388184f383cc4c2b73",
                      "typeString": "literal_string \"Mood NFT\""
                    },
                    "value": "Mood NFT"
                  },
                  {
                    "hexValue": "4d4e",
                    "id": 40887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1072:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a58cf80943770dd084f078bec17346ccb44c1ca309c9db7e14b1781d30f61dc0",
                      "typeString": "literal_string \"MN\""
                    },
                    "value": "MN"
                  }
                ],
                "id": 40888,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 40885,
                  "name": "ERC721",
                  "nameLocations": [
                    "1053:6:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38799,
                  "src": "1053:6:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "1053:24:36"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 40884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40881,
                  "mutability": "mutable",
                  "name": "sadSvgUri",
                  "nameLocation": "1011:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 40903,
                  "src": "997:23:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 40880,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "997:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40883,
                  "mutability": "mutable",
                  "name": "happySvgUri",
                  "nameLocation": "1038:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 40903,
                  "src": "1024:25:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 40882,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1024:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "993:59:36"
            },
            "returnParameters": {
              "id": 40889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1078:0:36"
            },
            "scope": 41056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40923,
            "nodeType": "FunctionDefinition",
            "src": "1165:194:36",
            "nodes": [],
            "body": {
              "id": 40922,
              "nodeType": "Block",
              "src": "1191:168:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40907,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1254:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 40908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1258:6:36",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1254:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 40909,
                        "name": "s_tokenCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40866,
                        "src": "1266:14:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40906,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        38367,
                        38396
                      ],
                      "referencedDeclaration": 38367,
                      "src": "1244:9:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 40910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1244:37:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40911,
                  "nodeType": "ExpressionStatement",
                  "src": "1244:37:36"
                },
                {
                  "expression": {
                    "id": 40916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40912,
                      "name": "s_tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40866,
                      "src": "1285:14:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 40915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 40913,
                        "name": "s_tokenCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40866,
                        "src": "1302:14:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 40914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1319:1:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1302:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1285:35:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40917,
                  "nodeType": "ExpressionStatement",
                  "src": "1285:35:36"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 40919,
                        "name": "s_tokenCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40866,
                        "src": "1340:14:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40918,
                      "name": "CreatedNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40879,
                      "src": "1329:10:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 40920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1329:26:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40921,
                  "nodeType": "EmitStatement",
                  "src": "1324:31:36"
                }
              ]
            },
            "functionSelector": "c2229fea",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNft",
            "nameLocation": "1174:7:36",
            "parameters": {
              "id": 40904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1181:2:36"
            },
            "returnParameters": {
              "id": 40905,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1191:0:36"
            },
            "scope": 41056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40963,
            "nodeType": "FunctionDefinition",
            "src": "1362:306:36",
            "nodes": [],
            "body": {
              "id": 40962,
              "nodeType": "Block",
              "src": "1404:264:36",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 40933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1412:40:36",
                    "subExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 40929,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1432:3:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 40930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1436:6:36",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1432:10:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 40931,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40925,
                          "src": "1444:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 40928,
                        "name": "_isApprovedOrOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38352,
                        "src": "1413:18:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) view returns (bool)"
                        }
                      },
                      "id": 40932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1413:39:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40938,
                  "nodeType": "IfStatement",
                  "src": "1408:96:36",
                  "trueBody": {
                    "id": 40937,
                    "nodeType": "Block",
                    "src": "1454:50:36",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 40934,
                            "name": "MoodNft__CantFlipMoodIfNotOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40861,
                            "src": "1466:31:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 40935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1466:33:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 40936,
                        "nodeType": "RevertStatement",
                        "src": "1459:40:36"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_NFTState_$40864",
                      "typeString": "enum MoodNft.NFTState"
                    },
                    "id": 40944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 40939,
                        "name": "s_tokenIdToState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40875,
                        "src": "1512:16:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_NFTState_$40864_$",
                          "typeString": "mapping(uint256 => enum MoodNft.NFTState)"
                        }
                      },
                      "id": 40941,
                      "indexExpression": {
                        "id": 40940,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40925,
                        "src": "1529:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1512:25:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTState_$40864",
                        "typeString": "enum MoodNft.NFTState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 40942,
                        "name": "NFTState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40864,
                        "src": "1541:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_NFTState_$40864_$",
                          "typeString": "type(enum MoodNft.NFTState)"
                        }
                      },
                      "id": 40943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1550:5:36",
                      "memberName": "HAPPY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40862,
                      "src": "1541:14:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTState_$40864",
                        "typeString": "enum MoodNft.NFTState"
                      }
                    },
                    "src": "1512:43:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 40960,
                    "nodeType": "Block",
                    "src": "1613:52:36",
                    "statements": [
                      {
                        "expression": {
                          "id": 40958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 40953,
                              "name": "s_tokenIdToState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40875,
                              "src": "1618:16:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_NFTState_$40864_$",
                                "typeString": "mapping(uint256 => enum MoodNft.NFTState)"
                              }
                            },
                            "id": 40955,
                            "indexExpression": {
                              "id": 40954,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40925,
                              "src": "1635:7:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1618:25:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_NFTState_$40864",
                              "typeString": "enum MoodNft.NFTState"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 40956,
                              "name": "NFTState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40864,
                              "src": "1646:8:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_NFTState_$40864_$",
                                "typeString": "type(enum MoodNft.NFTState)"
                              }
                            },
                            "id": 40957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1655:5:36",
                            "memberName": "HAPPY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40862,
                            "src": "1646:14:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_NFTState_$40864",
                              "typeString": "enum MoodNft.NFTState"
                            }
                          },
                          "src": "1618:42:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_NFTState_$40864",
                            "typeString": "enum MoodNft.NFTState"
                          }
                        },
                        "id": 40959,
                        "nodeType": "ExpressionStatement",
                        "src": "1618:42:36"
                      }
                    ]
                  },
                  "id": 40961,
                  "nodeType": "IfStatement",
                  "src": "1508:157:36",
                  "trueBody": {
                    "id": 40952,
                    "nodeType": "Block",
                    "src": "1557:50:36",
                    "statements": [
                      {
                        "expression": {
                          "id": 40950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 40945,
                              "name": "s_tokenIdToState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40875,
                              "src": "1562:16:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_NFTState_$40864_$",
                                "typeString": "mapping(uint256 => enum MoodNft.NFTState)"
                              }
                            },
                            "id": 40947,
                            "indexExpression": {
                              "id": 40946,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40925,
                              "src": "1579:7:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1562:25:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_NFTState_$40864",
                              "typeString": "enum MoodNft.NFTState"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 40948,
                              "name": "NFTState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40864,
                              "src": "1590:8:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_NFTState_$40864_$",
                                "typeString": "type(enum MoodNft.NFTState)"
                              }
                            },
                            "id": 40949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1599:3:36",
                            "memberName": "SAD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40863,
                            "src": "1590:12:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_NFTState_$40864",
                              "typeString": "enum MoodNft.NFTState"
                            }
                          },
                          "src": "1562:40:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_NFTState_$40864",
                            "typeString": "enum MoodNft.NFTState"
                          }
                        },
                        "id": 40951,
                        "nodeType": "ExpressionStatement",
                        "src": "1562:40:36"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "c1a147a0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "flipMood",
            "nameLocation": "1371:8:36",
            "parameters": {
              "id": 40926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40925,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1388:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 40963,
                  "src": "1380:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1380:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1379:17:36"
            },
            "returnParameters": {
              "id": 40927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1404:0:36"
            },
            "scope": 41056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40972,
            "nodeType": "FunctionDefinition",
            "src": "1671:113:36",
            "nodes": [],
            "body": {
              "id": 40971,
              "nodeType": "Block",
              "src": "1738:46:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
                    "id": 40969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1749:31:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                      "typeString": "literal_string \"data:application/json;base64,\""
                    },
                    "value": "data:application/json;base64,"
                  },
                  "functionReturnParameters": 40968,
                  "id": 40970,
                  "nodeType": "Return",
                  "src": "1742:38:36"
                }
              ]
            },
            "baseFunctions": [
              38086
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "1680:8:36",
            "overrides": {
              "id": 40965,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1705:8:36"
            },
            "parameters": {
              "id": 40964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1688:2:36"
            },
            "returnParameters": {
              "id": 40968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40967,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40972,
                  "src": "1723:13:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 40966,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1723:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1722:15:36"
            },
            "scope": 41056,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41031,
            "nodeType": "FunctionDefinition",
            "src": "1787:738:36",
            "nodes": [],
            "body": {
              "id": 41030,
              "nodeType": "Block",
              "src": "1880:645:36",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 40983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1888:17:36",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 40981,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40974,
                          "src": "1897:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 40980,
                        "name": "_exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38318,
                        "src": "1889:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 40982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1889:16:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40988,
                  "nodeType": "IfStatement",
                  "src": "1884:87:36",
                  "trueBody": {
                    "id": 40987,
                    "nodeType": "Block",
                    "src": "1907:64:36",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 40984,
                            "name": "ERC721Metadata__URI_QueryFor_NonExistentToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40859,
                            "src": "1919:45:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 40985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1919:47:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 40986,
                        "nodeType": "RevertStatement",
                        "src": "1912:54:36"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    40990
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40990,
                      "mutability": "mutable",
                      "name": "imageURI",
                      "nameLocation": "1988:8:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 41030,
                      "src": "1974:22:36",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 40989,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1974:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40992,
                  "initialValue": {
                    "id": 40991,
                    "name": "s_happySvgUri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40870,
                    "src": "1999:13:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1974:38:36"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_NFTState_$40864",
                      "typeString": "enum MoodNft.NFTState"
                    },
                    "id": 40998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 40993,
                        "name": "s_tokenIdToState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40875,
                        "src": "2021:16:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_NFTState_$40864_$",
                          "typeString": "mapping(uint256 => enum MoodNft.NFTState)"
                        }
                      },
                      "id": 40995,
                      "indexExpression": {
                        "id": 40994,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40974,
                        "src": "2038:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2021:25:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTState_$40864",
                        "typeString": "enum MoodNft.NFTState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 40996,
                        "name": "NFTState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40864,
                        "src": "2050:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_NFTState_$40864_$",
                          "typeString": "type(enum MoodNft.NFTState)"
                        }
                      },
                      "id": 40997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2059:3:36",
                      "memberName": "SAD",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40863,
                      "src": "2050:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTState_$40864",
                        "typeString": "enum MoodNft.NFTState"
                      }
                    },
                    "src": "2021:41:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41004,
                  "nodeType": "IfStatement",
                  "src": "2017:79:36",
                  "trueBody": {
                    "id": 41003,
                    "nodeType": "Block",
                    "src": "2064:32:36",
                    "statements": [
                      {
                        "expression": {
                          "id": 41001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 40999,
                            "name": "imageURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40990,
                            "src": "2069:8:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 41000,
                            "name": "s_sadSvgUri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40868,
                            "src": "2080:11:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "src": "2069:22:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 41002,
                        "nodeType": "ExpressionStatement",
                        "src": "2069:22:36"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 41009,
                              "name": "_baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                40972
                              ],
                              "referencedDeclaration": 40972,
                              "src": "2144:8:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () pure returns (string memory)"
                              }
                            },
                            "id": 41010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2144:10:36",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "7b226e616d65223a22",
                                        "id": 41017,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2222:11:36",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
                                          "typeString": "literal_string \"{\"name\":\"\""
                                        },
                                        "value": "{\"name\":\""
                                      },
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 41018,
                                          "name": "name",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 38028,
                                          "src": "2243:4:36",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                                            "typeString": "function () view returns (string memory)"
                                          }
                                        },
                                        "id": 41019,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2243:6:36",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      {
                                        "hexValue": "222c20226465736372697074696f6e223a22416e204e46542074686174207265666c6563747320746865206d6f6f64206f6620746865206f776e65722c2031303025206f6e20436861696e21222c20",
                                        "id": 41020,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2293:81:36",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_d70bed37aae4ca5a6bc9cc26e5f28dabff31f132342c0e2ee96dcf78f06a3ef9",
                                          "typeString": "literal_string \"\", \"description\":\"An NFT that reflects the mood of the owner, 100% on Chain!\", \""
                                        },
                                        "value": "\", \"description\":\"An NFT that reflects the mood of the owner, 100% on Chain!\", "
                                      },
                                      {
                                        "hexValue": "2261747472696275746573223a205b7b2274726169745f74797065223a20226d6f6f64696e657373222c202276616c7565223a203130307d5d2c2022696d616765223a22",
                                        "id": 41021,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2384:70:36",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_2bdfaf06ccef2b7fdc96297ae00bdc60576f1a46ea0fd4e626cdd0e8ab7b5106",
                                          "typeString": "literal_string \"\"attributes\": [{\"trait_type\": \"moodiness\", \"value\": 100}], \"image\":\"\""
                                        },
                                        "value": "\"attributes\": [{\"trait_type\": \"moodiness\", \"value\": 100}], \"image\":\""
                                      },
                                      {
                                        "id": 41022,
                                        "name": "imageURI",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 40990,
                                        "src": "2464:8:36",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      {
                                        "hexValue": "227d",
                                        "id": 41023,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2482:4:36",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                                          "typeString": "literal_string \"\"}\""
                                        },
                                        "value": "\"}"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
                                          "typeString": "literal_string \"{\"name\":\"\""
                                        },
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_d70bed37aae4ca5a6bc9cc26e5f28dabff31f132342c0e2ee96dcf78f06a3ef9",
                                          "typeString": "literal_string \"\", \"description\":\"An NFT that reflects the mood of the owner, 100% on Chain!\", \""
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_2bdfaf06ccef2b7fdc96297ae00bdc60576f1a46ea0fd4e626cdd0e8ab7b5106",
                                          "typeString": "literal_string \"\"attributes\": [{\"trait_type\": \"moodiness\", \"value\": 100}], \"image\":\"\""
                                        },
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                                          "typeString": "literal_string \"\"}\""
                                        }
                                      ],
                                      "expression": {
                                        "id": 41015,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "2196:3:36",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 41016,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2200:12:36",
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "2196:16:36",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 41024,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2196:299:36",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 41014,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2182:5:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 41013,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2182:5:36",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 41025,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2182:321:36",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 41011,
                                "name": "Base64",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39337,
                                "src": "2161:6:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Base64_$39337_$",
                                  "typeString": "type(library Base64)"
                                }
                              },
                              "id": 41012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2168:6:36",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 39336,
                              "src": "2161:13:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (bytes memory) pure returns (string memory)"
                              }
                            },
                            "id": 41026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2161:349:36",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 41007,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2121:3:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 41008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2125:12:36",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2121:16:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 41027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2121:395:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 41006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2109:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 41005,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2109:6:36",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 41028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2109:412:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 40979,
                  "id": 41029,
                  "nodeType": "Return",
                  "src": "2099:422:36"
                }
              ]
            },
            "baseFunctions": [
              38077
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "1796:8:36",
            "overrides": {
              "id": 40976,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1847:8:36"
            },
            "parameters": {
              "id": 40975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40974,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1816:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 41031,
                  "src": "1808:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40973,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1808:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1804:22:36"
            },
            "returnParameters": {
              "id": 40979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40978,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41031,
                  "src": "1865:13:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 40977,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1865:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1864:15:36"
            },
            "scope": 41056,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 41039,
            "nodeType": "FunctionDefinition",
            "src": "2528:87:36",
            "nodes": [],
            "body": {
              "id": 41038,
              "nodeType": "Block",
              "src": "2587:28:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 41036,
                    "name": "s_happySvgUri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40870,
                    "src": "2598:13:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 41035,
                  "id": 41037,
                  "nodeType": "Return",
                  "src": "2591:20:36"
                }
              ]
            },
            "functionSelector": "fc842121",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHappySVG",
            "nameLocation": "2537:11:36",
            "parameters": {
              "id": 41032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2548:2:36"
            },
            "returnParameters": {
              "id": 41035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41034,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41039,
                  "src": "2572:13:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 41033,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2572:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2571:15:36"
            },
            "scope": 41056,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41047,
            "nodeType": "FunctionDefinition",
            "src": "2618:83:36",
            "nodes": [],
            "body": {
              "id": 41046,
              "nodeType": "Block",
              "src": "2675:26:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 41044,
                    "name": "s_sadSvgUri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40868,
                    "src": "2686:11:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 41043,
                  "id": 41045,
                  "nodeType": "Return",
                  "src": "2679:18:36"
                }
              ]
            },
            "functionSelector": "5de0682f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSadSVG",
            "nameLocation": "2627:9:36",
            "parameters": {
              "id": 41040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2636:2:36"
            },
            "returnParameters": {
              "id": 41043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41042,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41047,
                  "src": "2660:13:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 41041,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2660:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2659:15:36"
            },
            "scope": 41056,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41055,
            "nodeType": "FunctionDefinition",
            "src": "2704:86:36",
            "nodes": [],
            "body": {
              "id": 41054,
              "nodeType": "Block",
              "src": "2761:29:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 41052,
                    "name": "s_tokenCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40866,
                    "src": "2772:14:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 41051,
                  "id": 41053,
                  "nodeType": "Return",
                  "src": "2765:21:36"
                }
              ]
            },
            "functionSelector": "6e02007d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenCounter",
            "nameLocation": "2713:15:36",
            "parameters": {
              "id": 41048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2728:2:36"
            },
            "returnParameters": {
              "id": 41051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41050,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41055,
                  "src": "2752:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2752:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2751:9:36"
            },
            "scope": 41056,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 40854,
              "name": "ERC721",
              "nameLocations": [
                "632:6:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38799,
              "src": "632:6:36"
            },
            "id": 40855,
            "nodeType": "InheritanceSpecifier",
            "src": "632:6:36"
          },
          {
            "baseName": {
              "id": 40856,
              "name": "Ownable",
              "nameLocations": [
                "640:7:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37872,
              "src": "640:7:36"
            },
            "id": 40857,
            "nodeType": "InheritanceSpecifier",
            "src": "640:7:36"
          }
        ],
        "canonicalName": "MoodNft",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          41056,
          37872,
          38799,
          38960,
          38915,
          39558,
          39570,
          39359
        ],
        "name": "MoodNft",
        "nameLocation": "621:7:36",
        "scope": 41057,
        "usedErrors": [
          40859,
          40861
        ],
        "usedEvents": [
          37773,
          38814,
          38823,
          38832,
          40879
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 36
}