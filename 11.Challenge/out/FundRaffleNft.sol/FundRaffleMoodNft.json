{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "sadSvgUri",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "happySvgUri",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ERC721IncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ERC721InsufficientApproval",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721Metadata__URI_QueryFor_NonExistentToken",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ERC721NonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "CreatedNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHappySVG",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSadSVG",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "mintNft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "365:1722:35:-:0;;;634:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1396:113:21;;;;;;;;;;;;;-1:-1:-1;;;1396:113:21;;;;;;;;;;;;;;;;-1:-1:-1;;;1396:113:21;;;1470:5;1462;:13;;;;;;:::i;:::-;-1:-1:-1;1485:7:21;:17;1495:7;1485;:17;:::i;:::-;-1:-1:-1;;751:1:35::1;734:14;:18:::0;-1:-1:-1;756:11:35::1;:23;770:9:::0;756:11;:23:::1;:::i;:::-;-1:-1:-1::0;783:13:35::1;:27;799:11:::0;783:13;:27:::1;:::i;:::-;;634:180:::0;;365:1722;;14:127:40;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:40;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:40;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:40:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:40;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:40;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:40;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:40;;;3992:26;3943:89;-1:-1:-1;;2747:1:40;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:40;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:40;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:40;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:40:o;:::-;365:1722:35;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "365:1722:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1576:300:21;;;;;;:::i;:::-;;:::i;:::-;;;565:14:40;;558:22;540:41;;528:2;513:18;1576:300:21;;;;;;;;2503:89;;;:::i;:::-;;;;;;;:::i;3897:158::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:40;;;1679:51;;1667:2;1652:18;3897:158:21;1533:203:40;3462:374:21;;;;;;:::i;:::-;;:::i;:::-;;4547:264;;;;;;:::i;:::-;;:::i;4877:140::-;;;;;;:::i;:::-;;:::i;1913:83:35:-;;;:::i;2200:241:21:-;;;;;;:::i;:::-;;:::i;1999:86:35:-;2067:14;;1999:86;;;2657:25:40;;;2645:2;2630:18;1999:86:35;2511:177:40;1935:208:21;;;;;;:::i;:::-;;:::i;2656:93::-;;;:::i;4122:144::-;;;;;;:::i;:::-;;:::i;5083:296::-;;;;;;:::i;:::-;;:::i;1083:737:35:-;;;;;;:::i;:::-;;:::i;4332:153:21:-;;;;;;:::i;:::-;;:::i;817:147:35:-;;;;;;:::i;:::-;;:::i;1823:87::-;;;:::i;1576:300:21:-;1678:4;-1:-1:-1;;;;;;1713:40:21;;-1:-1:-1;;;1713:40:21;;:104;;-1:-1:-1;;;;;;;1769:48:21;;-1:-1:-1;;;1769:48:21;1713:104;:156;;;-1:-1:-1;;;;;;;;;;831:40:28;;;1833:36:21;1694:175;1576:300;-1:-1:-1;;1576:300:21:o;2503:89::-;2548:13;2580:5;2573:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2503:89;:::o;3897:158::-;3964:7;3983:23;3998:7;3983:14;:23::i;:::-;-1:-1:-1;4024:24:21;;;;:15;:24;;;;;;-1:-1:-1;;;;;4024:24:21;;3897:158::o;3462:374::-;3533:13;3549:16;3557:7;3549;:16::i;:::-;3533:32;;3585:5;-1:-1:-1;;;;;3579:11:21;:2;-1:-1:-1;;;;;3579:11:21;;3575:77;;3613:28;;-1:-1:-1;;;3613:28:21;;-1:-1:-1;;;;;1697:32:40;;3613:28:21;;;1679:51:40;1652:18;;3613:28:21;;;;;;;;3575:77;720:10:26;-1:-1:-1;;;;;3666:21:21;;;;;;:63;;-1:-1:-1;3692:37:21;3709:5;720:10:26;4332:153:21;:::i;3692:37::-;3691:38;3666:63;3662:136;;;3752:35;;-1:-1:-1;;;3752:35:21;;720:10:26;3752:35:21;;;1679:51:40;1652:18;;3752:35:21;1533:203:40;3662:136:21;3808:21;3817:2;3821:7;3808:8;:21::i;:::-;3523:313;3462:374;;:::o;4547:264::-;4642:41;720:10:26;4675:7:21;4642:18;:41::i;:::-;4637:129;;4706:49;;-1:-1:-1;;;4706:49:21;;720:10:26;4706:49:21;;;5335:51:40;5402:18;;;5395:34;;;5308:18;;4706:49:21;5161:274:40;4637:129:21;4776:28;4786:4;4792:2;4796:7;4776:9;:28::i;4877:140::-;4971:39;4988:4;4994:2;4998:7;4971:39;;;;;;;;;;;;:16;:39::i;1913:83:35:-;1955:13;1981:11;1974:18;;;;;:::i;2200:241:21:-;2263:7;6708:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6708:16:21;;2325:88;;2371:31;;-1:-1:-1;;;2371:31:21;;;;;2657:25:40;;;2630:18;;2371:31:21;2511:177:40;1935:208:21;1998:7;-1:-1:-1;;;;;2021:19:21;;2017:87;;2063:30;;-1:-1:-1;;;2063:30:21;;2090:1;2063:30;;;1679:51:40;1652:18;;2063:30:21;1533:203:40;2017:87:21;-1:-1:-1;;;;;;2120:16:21;;;;;:9;:16;;;;;;;1935:208::o;2656:93::-;2703:13;2735:7;2728:14;;;;;:::i;4122:144::-;4207:52;720:10:26;4240:8:21;4250;4207:18;:52::i;:::-;4122:144;;:::o;5083:296::-;5201:41;720:10:26;5234:7:21;5201:18;:41::i;:::-;5196:129;;5265:49;;-1:-1:-1;;;5265:49:21;;720:10:26;5265:49:21;;;5335:51:40;5402:18;;;5395:34;;;5308:18;;5265:49:21;5161:274:40;5196:129:21;5334:38;5348:4;5354:2;5358:7;5367:4;5334:13;:38::i;:::-;5083:296;;;;:::o;1083:737:35:-;7099:4:21;6708:16;;;:7;:16;;;;;;1161:13:35;;-1:-1:-1;;;;;6708:16:21;1180:87:35;;1215:47;;-1:-1:-1;;;1215:47:35;;;;;;;;;;;1180:87;1270:22;1295:13;1270:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1270:38:35;;-1:-1:-1;1345:12:35;;-1:-1:-1;1316:41:35;;-1:-1:-1;;;1316:41:35;;:25;;;;:16;:25;;;;;;;;;:41;;;;;;;:::i;:::-;;1312:79;;1375:11;1364:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1312:79;1038:38;;;;;;;;;;;;;;;;;1456:349;1538:6;:4;:6::i;:::-;1759:8;1491:299;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1456:13;:349::i;:::-;1416:395;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1394:422;;;1083:737;;;:::o;4332:153:21:-;-1:-1:-1;;;;;4443:25:21;;;4420:4;4443:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4332:153::o;817:147:35:-;857:29;867:2;871:14;;857:9;:29::i;:::-;907:14;;:18;;924:1;907:18;:::i;:::-;890:14;:35;;;934:26;;;;;;;817:147;:::o;1823:87::-;1867:13;1893;1886:20;;;;;:::i;13184:165:21:-;7099:4;6708:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6708:16:21;13257:86;;13301:31;;-1:-1:-1;;;13301:31:21;;;;;2657:25:40;;;2630:18;;13301:31:21;2511:177:40;13257:86:21;13184:165;:::o;12496:164::-;12570:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12570:29:21;-1:-1:-1;;;;;12570:29:21;;;;;;;;:24;;12623:16;12570:24;12623:7;:16::i;:::-;-1:-1:-1;;;;;12614:39:21;;;;;;;;;;;12496:164;;:::o;7318:254::-;7411:4;7427:13;7443:16;7451:7;7443;:16::i;:::-;7427:32;;7488:5;-1:-1:-1;;;;;7477:16:21;:7;-1:-1:-1;;;;;7477:16:21;;:52;;;;7497:32;7514:5;7521:7;7497:16;:32::i;:::-;7477:87;;;;7557:7;-1:-1:-1;;;;;7533:31:21;:20;7545:7;7533:11;:20::i;:::-;-1:-1:-1;;;;;7533:31:21;;7477:87;7469:96;7318:254;-1:-1:-1;;;;7318:254:21:o;11132:1252::-;11221:13;11237:16;11245:7;11237;:16::i;:::-;11221:32;;11276:4;-1:-1:-1;;;;;11267:13:21;:5;-1:-1:-1;;;;;11267:13:21;;11263:93;;11303:42;;-1:-1:-1;;;11303:42:21;;-1:-1:-1;;;;;8110:15:40;;;11303:42:21;;;8092:34:40;8142:18;;;8135:34;;;8205:15;;8185:18;;;8178:43;8027:18;;11303:42:21;7852:375:40;11263:93:21;-1:-1:-1;;;;;11369:16:21;;11365:87;;11408:33;;-1:-1:-1;;;11408:33:21;;11438:1;11408:33;;;1679:51:40;1652:18;;11408:33:21;1533:203:40;11365:87:21;11604:16;11612:7;11604;:16::i;:::-;11596:24;;11643:4;-1:-1:-1;;;;;11634:13:21;:5;-1:-1:-1;;;;;11634:13:21;;11630:93;;11670:42;;-1:-1:-1;;;11670:42:21;;-1:-1:-1;;;;;8110:15:40;;;11670:42:21;;;8092:34:40;8142:18;;;8135:34;;;8205:15;;8185:18;;;8178:43;8027:18;;11670:42:21;7852:375:40;11630:93:21;11791:24;;;;:15;:24;;;;;;;;11784:31;;-1:-1:-1;;;;;;11784:31:21;;;-1:-1:-1;;;;;11979:15:21;;;;:9;:15;;;;;:20;;11784:31;;11791:24;11979:20;;11784:31;;11979:20;:::i;:::-;;;;-1:-1:-1;;;;;;;12222:13:21;;;;;;;:9;:13;;;;;;;;:18;;12239:1;12222:18;;;12261:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;12261:21:21;;;;;12298:27;12269:7;;12298:27;;;;;;12336:41;5083:296;12796:304;12912:8;-1:-1:-1;;;;;12903:17:21;:5;-1:-1:-1;;;;;12903:17:21;;12899:83;;12943:28;;-1:-1:-1;;;12943:28:21;;-1:-1:-1;;;;;1697:32:40;;12943:28:21;;;1679:51:40;1652:18;;12943:28:21;1533:203:40;12899:83:21;-1:-1:-1;;;;;12991:25:21;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12991:46:21;;;;;;;;;;13052:41;;540::40;;;13052::21;;513:18:40;13052:41:21;;;;;;;12796:304;;;:::o;6240:267::-;6352:28;6362:4;6368:2;6372:7;6352:9;:28::i;:::-;6395:47;6418:4;6424:2;6428:7;6437:4;6395:22;:47::i;:::-;6390:111;;6465:25;;-1:-1:-1;;;6465:25:21;;-1:-1:-1;;;;;1697:32:40;;6465:25:21;;;1679:51:40;1652:18;;6465:25:21;1533:203:40;506:3026:25;564:13;796:4;:11;811:1;796:16;792:31;;-1:-1:-1;;814:9:25;;;;;;;;;-1:-1:-1;814:9:25;;;506:3026::o;792:31::-;873:19;895:6;;;;;;;;;;;;;;;;;873:28;;1304:20;1363:1;1344:4;:11;1358:1;1344:15;;;;:::i;:::-;1343:21;;;;:::i;:::-;1338:27;;:1;:27;:::i;:::-;1327:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1327:39:25;;1304:62;;1541:1;1534:5;1530:13;1642:2;1634:6;1630:15;1749:4;1800;1794:11;1788:4;1784:22;1712:1403;1833:6;1824:7;1821:19;1712:1403;;;1935:1;1926:7;1922:15;1911:26;;1973:7;1967:14;2616:4;2608:5;2604:2;2600:14;2596:25;2586:8;2582:40;2576:47;2565:9;2557:67;2669:1;2658:9;2654:17;2641:30;;2759:4;2751:5;2747:2;2743:14;2739:25;2729:8;2725:40;2719:47;2708:9;2700:67;2812:1;2801:9;2797:17;2784:30;;2901:4;2893:5;2890:1;2886:13;2882:24;2872:8;2868:39;2862:46;2851:9;2843:66;2954:1;2943:9;2939:17;2926:30;;3035:4;3028:5;3024:16;3014:8;3010:31;3004:38;2993:9;2985:58;;3088:1;3077:9;3073:17;3060:30;;1712:1403;;;1716:104;;3273:1;3266:4;3260:11;3256:19;3293:1;3288:120;;;;3426:1;3421:71;;;;3249:243;;3288:120;3340:4;3336:1;3325:9;3321:17;3313:32;3389:4;3385:1;3374:9;3370:17;3362:32;3288:120;;3421:71;3473:4;3469:1;3458:9;3454:17;3446:32;3249:243;-1:-1:-1;3519:6:25;;506:3026;-1:-1:-1;;;;;506:3026:25:o;7902:108:21:-;7977:26;7987:2;7991:7;7977:26;;;;;;;;;;;;:9;:26::i;13901:806::-;14050:4;-1:-1:-1;;;;;14070:14:21;;;:18;14066:635;;14108:71;;-1:-1:-1;;;14108:71:21;;-1:-1:-1;;;;;14108:36:21;;;;;:71;;720:10:26;;14159:4:21;;14165:7;;14174:4;;14108:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14108:71:21;;;;;;;;-1:-1:-1;;14108:71:21;;;;;;;;;;;;:::i;:::-;;;14104:545;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14346:6;:13;14363:1;14346:18;14342:293;;14395:25;;-1:-1:-1;;;14395:25:21;;-1:-1:-1;;;;;1697:32:40;;14395:25:21;;;1679:51:40;1652:18;;14395:25:21;1533:203:40;14342:293:21;14587:6;14581:13;14572:6;14568:2;14564:15;14557:38;14104:545;-1:-1:-1;;;;;;14229:51:21;-1:-1:-1;;;14229:51:21;;-1:-1:-1;14222:58:21;;14066:635;-1:-1:-1;14686:4:21;13901:806;;;;;;:::o;8231:245::-;8325:18;8331:2;8335:7;8325:5;:18::i;:::-;8358:53;8389:1;8393:2;8397:7;8406:4;8358:22;:53::i;:::-;8353:117;;8434:25;;-1:-1:-1;;;8434:25:21;;-1:-1:-1;;;;;1697:32:40;;8434:25:21;;;1679:51:40;1652:18;;8434:25:21;1533:203:40;8798:997:21;-1:-1:-1;;;;;8873:16:21;;8869:87;;8912:33;;-1:-1:-1;;;8912:33:21;;8942:1;8912:33;;;1679:51:40;1652:18;;8912:33:21;1533:203:40;8869:87:21;7099:4;6708:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6708:16:21;7122:31;8965:85;;9008:31;;-1:-1:-1;;;9008:31:21;;9036:1;9008:31;;;1679:51:40;1652:18;;9008:31:21;1533:203:40;8965:85:21;7099:4;6708:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6708:16:21;7122:31;9195:85;;9238:31;;-1:-1:-1;;;9238:31:21;;9266:1;9238:31;;;1679:51:40;1652:18;;9238:31:21;1533:203:40;9195:85:21;-1:-1:-1;;;;;9621:13:21;;;;;;:9;:13;;;;;;;;:18;;9638:1;9621:18;;;9660:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9660:21:21;;;;;9697:33;9668:7;;9621:13;;9697:33;;9621:13;;9697:33;4122:144;;:::o;14:131:40:-;-1:-1:-1;;;;;;88:32:40;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:40:o;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:40;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:40;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:40:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:40;;1348:180;-1:-1:-1;1348:180:40:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:40;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:40:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2693:186::-;2752:6;2805:2;2793:9;2784:7;2780:23;2776:32;2773:52;;;2821:1;2818;2811:12;2773:52;2844:29;2863:9;2844:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:40;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5440:127::-;5501:10;5496:3;5492:20;5489:1;5482:31;5532:4;5529:1;5522:15;5556:4;5553:1;5546:15;5572:1512;-1:-1:-1;;;6173:43:40;;6239:13;;6155:3;;6261:74;6239:13;6324:1;6315:11;;6308:4;6296:17;;6261:74;:::i;:::-;6398:66;6394:1;6354:16;;;6386:10;;;6379:86;6494:34;6489:2;6481:11;;6474:55;-1:-1:-1;;;6553:2:40;6545:11;;6538:63;6630:66;6625:2;6617:11;;6610:87;6727:66;6721:3;6713:12;;6706:88;-1:-1:-1;;;6818:3:40;6810:12;;6803:42;6870:13;;6892:77;6870:13;6954:3;6946:12;;6939:4;6927:17;;6892:77;:::i;:::-;-1:-1:-1;;;7029:3:40;6988:17;;;;7021:12;;;7014:36;7074:3;7066:12;;5572:1512;-1:-1:-1;;;;5572:1512:40:o;7089:496::-;7268:3;7306:6;7300:13;7322:66;7381:6;7376:3;7369:4;7361:6;7357:17;7322:66;:::i;:::-;7451:13;;7410:16;;;;7473:70;7451:13;7410:16;7520:4;7508:17;;7473:70;:::i;:::-;7559:20;;7089:496;-1:-1:-1;;;;7089:496:40:o;7590:127::-;7651:10;7646:3;7642:20;7639:1;7632:31;7682:4;7679:1;7672:15;7706:4;7703:1;7696:15;7722:125;7787:9;;;7808:10;;;7805:36;;;7821:18;;:::i;8232:128::-;8299:9;;;8320:11;;;8317:37;;;8334:18;;:::i;8365:217::-;8405:1;8431;8421:132;;8475:10;8470:3;8466:20;8463:1;8456:31;8510:4;8507:1;8500:15;8538:4;8535:1;8528:15;8421:132;-1:-1:-1;8567:9:40;;8365:217::o;8587:168::-;8660:9;;;8691;;8708:15;;;8702:22;;8688:37;8678:71;;8729:18;;:::i;8760:489::-;-1:-1:-1;;;;;9029:15:40;;;9011:34;;9081:15;;9076:2;9061:18;;9054:43;9128:2;9113:18;;9106:34;;;9176:3;9171:2;9156:18;;9149:31;;;8954:4;;9197:46;;9223:19;;9215:6;9197:46;:::i;:::-;9189:54;8760:489;-1:-1:-1;;;;;;8760:489:40:o;9254:249::-;9323:6;9376:2;9364:9;9355:7;9351:23;9347:32;9344:52;;;9392:1;9389;9382:12;9344:52;9424:9;9418:16;9443:30;9467:5;9443:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "getApproved(uint256)": "081812fc",
    "getHappySVG()": "fc842121",
    "getSadSVG()": "5de0682f",
    "getTokenCounter()": "6e02007d",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mintNft(address)": "e9c2e14b",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"sadSvgUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"happySvgUri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721Metadata__URI_QueryFor_NonExistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"CreatedNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHappySVG\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSadSVG\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mintNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/FundRaffleNft.sol\":\"FundRaffleMoodNft\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1586cf0492399e355b9603b36f77cc5e286e83473f8514fc569eb11cbcf400f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14c3f82e668518ca10a24ca556d2ef212bb0fee074168c3d36a27d7584ab2e6c\",\"dweb:/ipfs/QmRU77nGw7sysg94W7afzhEgYr2LoD9H6FqzoogURC7wq5\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x702a7b0be0bfa4a89a60f3e2ab99f248b71fcb84bda35580405ccca941b2edde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0af1154034267dfcd35f67c706a7be0f63ed09987521987ffd29a3f6f45dcb0\",\"dweb:/ipfs/QmPGQJjE7HNbenuVCvTcbgcPpLEDoV3bzK7RuQ7qa2PvDj\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd1f78a0c93a827fee3df60a14c2e2f3521d484c18ee62e237dcde832764fdfef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f361bebe3deb23861c3dca94ecc56b73801c2a6ef0b9eaaacbf471f35ce0750\",\"dweb:/ipfs/QmXzuPYJBksYb79yYDzg9HojhLVVnrnMpKfkU3bVZkFNfF\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x57acc452233860e061c8744b59309c8eabfe584d999cf9ae2f89bf5e275c52fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07c58176eabe6b16b2c81111404081115fc221899ab8a830e802aedbc7ed6195\",\"dweb:/ipfs/QmdBfMexJ1Gwk5G5tgdZhZ5YTY6sG8qAJ1RxtuLMXnJ3k4\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x6e9345d9ca72137f0e6180ffa193e8dd8e890a4a38f556040a1410c180017942\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5e2ccbe72df9cda0a3647a68752416f96dce03185f4bd33fc25355c94de79d5\",\"dweb:/ipfs/Qmer4uF3GRWaBfms5eAuiEi4JJQvwwn7UPjn212Tqwrcs9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x3cf58ca23b4e6c51b3ef28a92a78c723196ae0e1b85855d1a817397d701152d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://904ef82cee54e866e41a1f3b357cbd0e5ebb8e810b2f385ced00a1859f276303\",\"dweb:/ipfs/QmYV9oypLh9AjSP3XzBFhapE3sisU3vd3gwGC2gacr4Kwp\"]},\"lib/openzeppelin-contracts/contracts/utils/Base64.sol\":{\"keccak256\":\"0xabb7dada7a112a3407588ed479b4bdb661a1ad542012db1923865f9ff4d0a781\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://648fecc9486ffe35840e8c245e071f569182a3d2cc349cea1b8d68fd484635c3\",\"dweb:/ipfs/QmPcig4zTenzkWwumXrsqaA2xDVPBokdiifJxyokdancyv\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xdbc33ea310e83250cca8ad26e935a8d50ea10e781ba64a31beb0ea2ec912c605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54cc15b73a5e92fd1ed78cb67504a534ab5879e11c0688ec10809128e1e00ac8\",\"dweb:/ipfs/QmPRtXeXmMyYt8J8u57HV6GQjuSevjE8gk5tMeyqXdkAzu\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xc37f69e48a8f24faa6c904877c4ba856ccdb5cdbe1282bd4a8c3bf149f1e6e07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://818b7934e66493526c13b5ab82726efbdd7007f8ad204cc9458430ca7f0ba1db\",\"dweb:/ipfs/QmPoXfgjQZoih1HCKaC2tVzLskNzpSFjYWNbWX6A39oXiX\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x4e8cc1f6c06645a6a0802057b4951e86f57b2702500b1267457d58f37c0cf81a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62e51f135eb8f5a26ccb9b6a50ae5ca6d677b33e4c95bce932dd314cd19cf034\",\"dweb:/ipfs/QmT7EXgEhEVZWrKvt5W3tUZuC34kTGphjYMKPR4SUT5y7e\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xf66b7397bb70080f6f4ec77eecfda1814d04e47f70d55b0f22179619045f6835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b70065eda5adfda82cdec1258c13a660dfe9a403bba7df7abc320ca04770ebc7\",\"dweb:/ipfs/QmbW11jKKvA5HUrAR5P4YoDdWJLEGGM9MZu64YqwgFwgNn\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbff115c623555b3b1e2015276a728de93747c72621041f8f9968f8ee5378c81a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b20c595d346236c952ab7f94fbca1f30a5d23a64b6952c44b3c6dbf0356ea1a2\",\"dweb:/ipfs/QmbAsxq79zJ1sYXoLeTqX1WZxBegT1b8zm7B1xYHavDwGD\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x4c3b5ecf2e0f2d466f6e12645709d1a884961b4b82c8f6b7fad7c83f6c52ae42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1409caf33c143298e72b1b8f7e32badf0575bc7458a2f417acf0e6bbdd868359\",\"dweb:/ipfs/Qmcq8iWwCk5NjdeuxrVTg4FAPrPhbbkL8DdvUpYBFjYX2f\"]},\"src/FundRaffleNft.sol\":{\"keccak256\":\"0xae30cfaf451c4754d4207855c467fafb6d8e17edb865d12a0c9ff035b973e0b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7af01a164fadcb568b66e2f6edef912ad5756c12ca253ee888a4d75ab3841ad2\",\"dweb:/ipfs/QmY6KhNUn5CjZGnzTvqosnfhsePd4W7wP5HCKJhUc9naR6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "sadSvgUri",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "happySvgUri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721IncorrectOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC721InsufficientApproval"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidSender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721Metadata__URI_QueryFor_NonExistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC721NonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CreatedNFT",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getHappySVG",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSadSVG",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenCounter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintNft"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "See {IERC721Metadata-tokenURI}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":foundry-devops/=lib/foundry-devops/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/FundRaffleNft.sol": "FundRaffleMoodNft"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0x1586cf0492399e355b9603b36f77cc5e286e83473f8514fc569eb11cbcf400f6",
        "urls": [
          "bzz-raw://14c3f82e668518ca10a24ca556d2ef212bb0fee074168c3d36a27d7584ab2e6c",
          "dweb:/ipfs/QmRU77nGw7sysg94W7afzhEgYr2LoD9H6FqzoogURC7wq5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x702a7b0be0bfa4a89a60f3e2ab99f248b71fcb84bda35580405ccca941b2edde",
        "urls": [
          "bzz-raw://d0af1154034267dfcd35f67c706a7be0f63ed09987521987ffd29a3f6f45dcb0",
          "dweb:/ipfs/QmPGQJjE7HNbenuVCvTcbgcPpLEDoV3bzK7RuQ7qa2PvDj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0xd1f78a0c93a827fee3df60a14c2e2f3521d484c18ee62e237dcde832764fdfef",
        "urls": [
          "bzz-raw://5f361bebe3deb23861c3dca94ecc56b73801c2a6ef0b9eaaacbf471f35ce0750",
          "dweb:/ipfs/QmXzuPYJBksYb79yYDzg9HojhLVVnrnMpKfkU3bVZkFNfF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x57acc452233860e061c8744b59309c8eabfe584d999cf9ae2f89bf5e275c52fd",
        "urls": [
          "bzz-raw://07c58176eabe6b16b2c81111404081115fc221899ab8a830e802aedbc7ed6195",
          "dweb:/ipfs/QmdBfMexJ1Gwk5G5tgdZhZ5YTY6sG8qAJ1RxtuLMXnJ3k4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0x6e9345d9ca72137f0e6180ffa193e8dd8e890a4a38f556040a1410c180017942",
        "urls": [
          "bzz-raw://b5e2ccbe72df9cda0a3647a68752416f96dce03185f4bd33fc25355c94de79d5",
          "dweb:/ipfs/Qmer4uF3GRWaBfms5eAuiEi4JJQvwwn7UPjn212Tqwrcs9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x3cf58ca23b4e6c51b3ef28a92a78c723196ae0e1b85855d1a817397d701152d4",
        "urls": [
          "bzz-raw://904ef82cee54e866e41a1f3b357cbd0e5ebb8e810b2f385ced00a1859f276303",
          "dweb:/ipfs/QmYV9oypLh9AjSP3XzBFhapE3sisU3vd3gwGC2gacr4Kwp"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Base64.sol": {
        "keccak256": "0xabb7dada7a112a3407588ed479b4bdb661a1ad542012db1923865f9ff4d0a781",
        "urls": [
          "bzz-raw://648fecc9486ffe35840e8c245e071f569182a3d2cc349cea1b8d68fd484635c3",
          "dweb:/ipfs/QmPcig4zTenzkWwumXrsqaA2xDVPBokdiifJxyokdancyv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xdbc33ea310e83250cca8ad26e935a8d50ea10e781ba64a31beb0ea2ec912c605",
        "urls": [
          "bzz-raw://54cc15b73a5e92fd1ed78cb67504a534ab5879e11c0688ec10809128e1e00ac8",
          "dweb:/ipfs/QmPRtXeXmMyYt8J8u57HV6GQjuSevjE8gk5tMeyqXdkAzu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xc37f69e48a8f24faa6c904877c4ba856ccdb5cdbe1282bd4a8c3bf149f1e6e07",
        "urls": [
          "bzz-raw://818b7934e66493526c13b5ab82726efbdd7007f8ad204cc9458430ca7f0ba1db",
          "dweb:/ipfs/QmPoXfgjQZoih1HCKaC2tVzLskNzpSFjYWNbWX6A39oXiX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x4e8cc1f6c06645a6a0802057b4951e86f57b2702500b1267457d58f37c0cf81a",
        "urls": [
          "bzz-raw://62e51f135eb8f5a26ccb9b6a50ae5ca6d677b33e4c95bce932dd314cd19cf034",
          "dweb:/ipfs/QmT7EXgEhEVZWrKvt5W3tUZuC34kTGphjYMKPR4SUT5y7e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xf66b7397bb70080f6f4ec77eecfda1814d04e47f70d55b0f22179619045f6835",
        "urls": [
          "bzz-raw://b70065eda5adfda82cdec1258c13a660dfe9a403bba7df7abc320ca04770ebc7",
          "dweb:/ipfs/QmbW11jKKvA5HUrAR5P4YoDdWJLEGGM9MZu64YqwgFwgNn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbff115c623555b3b1e2015276a728de93747c72621041f8f9968f8ee5378c81a",
        "urls": [
          "bzz-raw://b20c595d346236c952ab7f94fbca1f30a5d23a64b6952c44b3c6dbf0356ea1a2",
          "dweb:/ipfs/QmbAsxq79zJ1sYXoLeTqX1WZxBegT1b8zm7B1xYHavDwGD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x4c3b5ecf2e0f2d466f6e12645709d1a884961b4b82c8f6b7fad7c83f6c52ae42",
        "urls": [
          "bzz-raw://1409caf33c143298e72b1b8f7e32badf0575bc7458a2f417acf0e6bbdd868359",
          "dweb:/ipfs/Qmcq8iWwCk5NjdeuxrVTg4FAPrPhbbkL8DdvUpYBFjYX2f"
        ],
        "license": "MIT"
      },
      "src/FundRaffleNft.sol": {
        "keccak256": "0xae30cfaf451c4754d4207855c467fafb6d8e17edb865d12a0c9ff035b973e0b9",
        "urls": [
          "bzz-raw://7af01a164fadcb568b66e2f6edef912ad5756c12ca253ee888a4d75ab3841ad2",
          "dweb:/ipfs/QmY6KhNUn5CjZGnzTvqosnfhsePd4W7wP5HCKJhUc9naR6"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/FundRaffleNft.sol",
    "id": 32888,
    "exportedSymbols": {
      "Base64": [
        30863
      ],
      "ERC721": [
        30655
      ],
      "ERC721Metadata__URI_QueryFor_NonExistentToken": [
        32727
      ],
      "FundRaffleMoodNft": [
        32887
      ],
      "MoodNft__CantFlipMoodIfNotOwner": [
        32729
      ],
      "Ownable": [
        29544
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2056:35",
    "nodes": [
      {
        "id": 32719,
        "nodeType": "PragmaDirective",
        "src": "32:23:35",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ]
      },
      {
        "id": 32721,
        "nodeType": "ImportDirective",
        "src": "57:73:35",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32888,
        "sourceUnit": 30656,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32720,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30655,
              "src": "66:6:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32723,
        "nodeType": "ImportDirective",
        "src": "131:69:35",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32888,
        "sourceUnit": 29545,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32722,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29544,
              "src": "140:7:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32725,
        "nodeType": "ImportDirective",
        "src": "201:66:35",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Base64.sol",
        "file": "@openzeppelin/contracts/utils/Base64.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32888,
        "sourceUnit": 30864,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32724,
              "name": "Base64",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30863,
              "src": "210:6:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32727,
        "nodeType": "ErrorDefinition",
        "src": "268:54:35",
        "nodes": [],
        "errorSelector": "6df5edae",
        "name": "ERC721Metadata__URI_QueryFor_NonExistentToken",
        "nameLocation": "274:45:35",
        "parameters": {
          "id": 32726,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "319:2:35"
        }
      },
      {
        "id": 32729,
        "nodeType": "ErrorDefinition",
        "src": "323:40:35",
        "nodes": [],
        "errorSelector": "85046ca7",
        "name": "MoodNft__CantFlipMoodIfNotOwner",
        "nameLocation": "329:31:35",
        "parameters": {
          "id": 32728,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "360:2:35"
        }
      },
      {
        "id": 32887,
        "nodeType": "ContractDefinition",
        "src": "365:1722:35",
        "nodes": [
          {
            "id": 32733,
            "nodeType": "VariableDeclaration",
            "src": "405:30:35",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_tokenCounter",
            "nameLocation": "421:14:35",
            "scope": 32887,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 32732,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "405:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 32735,
            "nodeType": "VariableDeclaration",
            "src": "438:26:35",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_sadSvgUri",
            "nameLocation": "453:11:35",
            "scope": 32887,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 32734,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "438:6:35",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 32737,
            "nodeType": "VariableDeclaration",
            "src": "467:28:35",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_happySvgUri",
            "nameLocation": "482:13:35",
            "scope": 32887,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 32736,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "467:6:35",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 32740,
            "nodeType": "EnumDefinition",
            "src": "498:33:35",
            "nodes": [],
            "canonicalName": "FundRaffleMoodNft.NFTState",
            "members": [
              {
                "id": 32738,
                "name": "HAPPY",
                "nameLocation": "516:5:35",
                "nodeType": "EnumValue",
                "src": "516:5:35"
              },
              {
                "id": 32739,
                "name": "SAD",
                "nameLocation": "525:3:35",
                "nodeType": "EnumValue",
                "src": "525:3:35"
              }
            ],
            "name": "NFTState",
            "nameLocation": "503:8:35"
          },
          {
            "id": 32745,
            "nodeType": "VariableDeclaration",
            "src": "533:53:35",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_tokenIdToState",
            "nameLocation": "570:16:35",
            "scope": 32887,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_NFTState_$32740_$",
              "typeString": "mapping(uint256 => enum FundRaffleMoodNft.NFTState)"
            },
            "typeName": {
              "id": 32744,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 32741,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "541:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "533:28:35",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_NFTState_$32740_$",
                "typeString": "mapping(uint256 => enum FundRaffleMoodNft.NFTState)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 32743,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 32742,
                  "name": "NFTState",
                  "nameLocations": [
                    "552:8:35"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32740,
                  "src": "552:8:35"
                },
                "referencedDeclaration": 32740,
                "src": "552:8:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_NFTState_$32740",
                  "typeString": "enum FundRaffleMoodNft.NFTState"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 32749,
            "nodeType": "EventDefinition",
            "src": "589:42:35",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "72102923c3d44433bd725cb2c744a4c92a536ad249b665dec9853a16ed665525",
            "name": "CreatedNFT",
            "nameLocation": "595:10:35",
            "parameters": {
              "id": 32748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32747,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "622:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32749,
                  "src": "606:23:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "606:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "605:25:35"
            }
          },
          {
            "id": 32773,
            "nodeType": "FunctionDefinition",
            "src": "634:180:35",
            "nodes": [],
            "body": {
              "id": 32772,
              "nodeType": "Block",
              "src": "730:84:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32760,
                      "name": "s_tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32733,
                      "src": "734:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 32761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "751:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "734:18:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32763,
                  "nodeType": "ExpressionStatement",
                  "src": "734:18:35"
                },
                {
                  "expression": {
                    "id": 32766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32764,
                      "name": "s_sadSvgUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32735,
                      "src": "756:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32765,
                      "name": "sadSvgUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32751,
                      "src": "770:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "756:23:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 32767,
                  "nodeType": "ExpressionStatement",
                  "src": "756:23:35"
                },
                {
                  "expression": {
                    "id": 32770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32768,
                      "name": "s_happySvgUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32737,
                      "src": "783:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32769,
                      "name": "happySvgUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32753,
                      "src": "799:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "783:27:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 32771,
                  "nodeType": "ExpressionStatement",
                  "src": "783:27:35"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d6f6f64204e4654",
                    "id": 32756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "712:10:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_061f95ad754b8b2fc14caedf72a009801343f11d011419388184f383cc4c2b73",
                      "typeString": "literal_string \"Mood NFT\""
                    },
                    "value": "Mood NFT"
                  },
                  {
                    "hexValue": "4d4e",
                    "id": 32757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "724:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a58cf80943770dd084f078bec17346ccb44c1ca309c9db7e14b1781d30f61dc0",
                      "typeString": "literal_string \"MN\""
                    },
                    "value": "MN"
                  }
                ],
                "id": 32758,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 32755,
                  "name": "ERC721",
                  "nameLocations": [
                    "705:6:35"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30655,
                  "src": "705:6:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "705:24:35"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 32754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32751,
                  "mutability": "mutable",
                  "name": "sadSvgUri",
                  "nameLocation": "663:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32773,
                  "src": "649:23:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32750,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32753,
                  "mutability": "mutable",
                  "name": "happySvgUri",
                  "nameLocation": "690:11:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32773,
                  "src": "676:25:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32752,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "676:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "645:59:35"
            },
            "returnParameters": {
              "id": 32759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "730:0:35"
            },
            "scope": 32887,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32794,
            "nodeType": "FunctionDefinition",
            "src": "817:147:35",
            "nodes": [],
            "body": {
              "id": 32793,
              "nodeType": "Block",
              "src": "853:111:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32779,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32775,
                        "src": "867:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32780,
                        "name": "s_tokenCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32733,
                        "src": "871:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32778,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30185,
                        30217
                      ],
                      "referencedDeclaration": 30185,
                      "src": "857:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 32781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "857:29:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32782,
                  "nodeType": "ExpressionStatement",
                  "src": "857:29:35"
                },
                {
                  "expression": {
                    "id": 32787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32783,
                      "name": "s_tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32733,
                      "src": "890:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 32786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32784,
                        "name": "s_tokenCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32733,
                        "src": "907:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 32785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "924:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "907:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "890:35:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32788,
                  "nodeType": "ExpressionStatement",
                  "src": "890:35:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 32790,
                        "name": "s_tokenCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32733,
                        "src": "945:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32789,
                      "name": "CreatedNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32749,
                      "src": "934:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 32791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "934:26:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32792,
                  "nodeType": "EmitStatement",
                  "src": "929:31:35"
                }
              ]
            },
            "functionSelector": "e9c2e14b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNft",
            "nameLocation": "826:7:35",
            "parameters": {
              "id": 32776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32775,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "842:2:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32794,
                  "src": "834:10:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "833:12:35"
            },
            "returnParameters": {
              "id": 32777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "853:0:35"
            },
            "scope": 32887,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32803,
            "nodeType": "FunctionDefinition",
            "src": "967:113:35",
            "nodes": [],
            "body": {
              "id": 32802,
              "nodeType": "Block",
              "src": "1034:46:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
                    "id": 32800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1045:31:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                      "typeString": "literal_string \"data:application/json;base64,\""
                    },
                    "value": "data:application/json;base64,"
                  },
                  "functionReturnParameters": 32799,
                  "id": 32801,
                  "nodeType": "Return",
                  "src": "1038:38:35"
                }
              ]
            },
            "baseFunctions": [
              29894
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "976:8:35",
            "overrides": {
              "id": 32796,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1001:8:35"
            },
            "parameters": {
              "id": 32795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "984:2:35"
            },
            "returnParameters": {
              "id": 32799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32798,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32803,
                  "src": "1019:13:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32797,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1018:15:35"
            },
            "scope": 32887,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 32862,
            "nodeType": "FunctionDefinition",
            "src": "1083:737:35",
            "nodes": [],
            "body": {
              "id": 32861,
              "nodeType": "Block",
              "src": "1176:644:35",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 32814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1184:17:35",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 32812,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32805,
                          "src": "1193:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 32811,
                        "name": "_exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30137,
                        "src": "1185:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 32813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1185:16:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32819,
                  "nodeType": "IfStatement",
                  "src": "1180:87:35",
                  "trueBody": {
                    "id": 32818,
                    "nodeType": "Block",
                    "src": "1203:64:35",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 32815,
                            "name": "ERC721Metadata__URI_QueryFor_NonExistentToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32727,
                            "src": "1215:45:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 32816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1215:47:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32817,
                        "nodeType": "RevertStatement",
                        "src": "1208:54:35"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    32821
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32821,
                      "mutability": "mutable",
                      "name": "imageURI",
                      "nameLocation": "1284:8:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 32861,
                      "src": "1270:22:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 32820,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1270:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32823,
                  "initialValue": {
                    "id": 32822,
                    "name": "s_happySvgUri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32737,
                    "src": "1295:13:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1270:38:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_NFTState_$32740",
                      "typeString": "enum FundRaffleMoodNft.NFTState"
                    },
                    "id": 32829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 32824,
                        "name": "s_tokenIdToState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32745,
                        "src": "1316:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_NFTState_$32740_$",
                          "typeString": "mapping(uint256 => enum FundRaffleMoodNft.NFTState)"
                        }
                      },
                      "id": 32826,
                      "indexExpression": {
                        "id": 32825,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32805,
                        "src": "1333:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1316:25:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTState_$32740",
                        "typeString": "enum FundRaffleMoodNft.NFTState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 32827,
                        "name": "NFTState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32740,
                        "src": "1345:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_NFTState_$32740_$",
                          "typeString": "type(enum FundRaffleMoodNft.NFTState)"
                        }
                      },
                      "id": 32828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1354:3:35",
                      "memberName": "SAD",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32739,
                      "src": "1345:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTState_$32740",
                        "typeString": "enum FundRaffleMoodNft.NFTState"
                      }
                    },
                    "src": "1316:41:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32835,
                  "nodeType": "IfStatement",
                  "src": "1312:79:35",
                  "trueBody": {
                    "id": 32834,
                    "nodeType": "Block",
                    "src": "1359:32:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 32832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 32830,
                            "name": "imageURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32821,
                            "src": "1364:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 32831,
                            "name": "s_sadSvgUri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32735,
                            "src": "1375:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "src": "1364:22:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 32833,
                        "nodeType": "ExpressionStatement",
                        "src": "1364:22:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 32840,
                              "name": "_baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                32803
                              ],
                              "referencedDeclaration": 32803,
                              "src": "1439:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () pure returns (string memory)"
                              }
                            },
                            "id": 32841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1439:10:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "7b226e616d65223a22",
                                        "id": 32848,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1517:11:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
                                          "typeString": "literal_string \"{\"name\":\"\""
                                        },
                                        "value": "{\"name\":\""
                                      },
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 32849,
                                          "name": "name",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 29840,
                                          "src": "1538:4:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                                            "typeString": "function () view returns (string memory)"
                                          }
                                        },
                                        "id": 32850,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1538:6:35",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      {
                                        "hexValue": "222c20226465736372697074696f6e223a22416e204e46542074686174207265666c6563747320746865206d6f6f64206f6620746865206f776e65722c2031303025206f6e20436861696e21222c20",
                                        "id": 32851,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1588:81:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_d70bed37aae4ca5a6bc9cc26e5f28dabff31f132342c0e2ee96dcf78f06a3ef9",
                                          "typeString": "literal_string \"\", \"description\":\"An NFT that reflects the mood of the owner, 100% on Chain!\", \""
                                        },
                                        "value": "\", \"description\":\"An NFT that reflects the mood of the owner, 100% on Chain!\", "
                                      },
                                      {
                                        "hexValue": "2261747472696275746573223a205b7b2274726169745f74797065223a20226d6f6f64696e657373222c202276616c7565223a203130307d5d2c2022696d616765223a22",
                                        "id": 32852,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1679:70:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_2bdfaf06ccef2b7fdc96297ae00bdc60576f1a46ea0fd4e626cdd0e8ab7b5106",
                                          "typeString": "literal_string \"\"attributes\": [{\"trait_type\": \"moodiness\", \"value\": 100}], \"image\":\"\""
                                        },
                                        "value": "\"attributes\": [{\"trait_type\": \"moodiness\", \"value\": 100}], \"image\":\""
                                      },
                                      {
                                        "id": 32853,
                                        "name": "imageURI",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 32821,
                                        "src": "1759:8:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      {
                                        "hexValue": "227d",
                                        "id": 32854,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1777:4:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                                          "typeString": "literal_string \"\"}\""
                                        },
                                        "value": "\"}"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
                                          "typeString": "literal_string \"{\"name\":\"\""
                                        },
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_d70bed37aae4ca5a6bc9cc26e5f28dabff31f132342c0e2ee96dcf78f06a3ef9",
                                          "typeString": "literal_string \"\", \"description\":\"An NFT that reflects the mood of the owner, 100% on Chain!\", \""
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_2bdfaf06ccef2b7fdc96297ae00bdc60576f1a46ea0fd4e626cdd0e8ab7b5106",
                                          "typeString": "literal_string \"\"attributes\": [{\"trait_type\": \"moodiness\", \"value\": 100}], \"image\":\"\""
                                        },
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                                          "typeString": "literal_string \"\"}\""
                                        }
                                      ],
                                      "expression": {
                                        "id": 32846,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "1491:3:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 32847,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "1495:12:35",
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "1491:16:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 32855,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1491:299:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 32845,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1477:5:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 32844,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1477:5:35",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 32856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1477:321:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 32842,
                                "name": "Base64",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30863,
                                "src": "1456:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Base64_$30863_$",
                                  "typeString": "type(library Base64)"
                                }
                              },
                              "id": 32843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1463:6:35",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30862,
                              "src": "1456:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (bytes memory) pure returns (string memory)"
                              }
                            },
                            "id": 32857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1456:349:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 32838,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1416:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 32839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1420:12:35",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1416:16:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 32858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1416:395:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 32837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1404:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 32836,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1404:6:35",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 32859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1404:412:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 32810,
                  "id": 32860,
                  "nodeType": "Return",
                  "src": "1394:422:35"
                }
              ]
            },
            "baseFunctions": [
              29885
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "1092:8:35",
            "overrides": {
              "id": 32807,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1143:8:35"
            },
            "parameters": {
              "id": 32806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32805,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1112:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32862,
                  "src": "1104:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1100:22:35"
            },
            "returnParameters": {
              "id": 32810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32809,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32862,
                  "src": "1161:13:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32808,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1160:15:35"
            },
            "scope": 32887,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 32870,
            "nodeType": "FunctionDefinition",
            "src": "1823:87:35",
            "nodes": [],
            "body": {
              "id": 32869,
              "nodeType": "Block",
              "src": "1882:28:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32867,
                    "name": "s_happySvgUri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32737,
                    "src": "1893:13:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 32866,
                  "id": 32868,
                  "nodeType": "Return",
                  "src": "1886:20:35"
                }
              ]
            },
            "functionSelector": "fc842121",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHappySVG",
            "nameLocation": "1832:11:35",
            "parameters": {
              "id": 32863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1843:2:35"
            },
            "returnParameters": {
              "id": 32866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32865,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32870,
                  "src": "1867:13:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32864,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1867:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1866:15:35"
            },
            "scope": 32887,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32878,
            "nodeType": "FunctionDefinition",
            "src": "1913:83:35",
            "nodes": [],
            "body": {
              "id": 32877,
              "nodeType": "Block",
              "src": "1970:26:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32875,
                    "name": "s_sadSvgUri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32735,
                    "src": "1981:11:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 32874,
                  "id": 32876,
                  "nodeType": "Return",
                  "src": "1974:18:35"
                }
              ]
            },
            "functionSelector": "5de0682f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSadSVG",
            "nameLocation": "1922:9:35",
            "parameters": {
              "id": 32871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1931:2:35"
            },
            "returnParameters": {
              "id": 32874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32873,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32878,
                  "src": "1955:13:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32872,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1955:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1954:15:35"
            },
            "scope": 32887,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32886,
            "nodeType": "FunctionDefinition",
            "src": "1999:86:35",
            "nodes": [],
            "body": {
              "id": 32885,
              "nodeType": "Block",
              "src": "2056:29:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32883,
                    "name": "s_tokenCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32733,
                    "src": "2067:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 32882,
                  "id": 32884,
                  "nodeType": "Return",
                  "src": "2060:21:35"
                }
              ]
            },
            "functionSelector": "6e02007d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenCounter",
            "nameLocation": "2008:15:35",
            "parameters": {
              "id": 32879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2023:2:35"
            },
            "returnParameters": {
              "id": 32882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32881,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32886,
                  "src": "2047:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2047:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2046:9:35"
            },
            "scope": 32887,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32730,
              "name": "ERC721",
              "nameLocations": [
                "395:6:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30655,
              "src": "395:6:35"
            },
            "id": 32731,
            "nodeType": "InheritanceSpecifier",
            "src": "395:6:35"
          }
        ],
        "canonicalName": "FundRaffleMoodNft",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32887,
          30655,
          29634,
          30816,
          30771,
          31161,
          31173,
          30885
        ],
        "name": "FundRaffleMoodNft",
        "nameLocation": "374:17:35",
        "scope": 32888,
        "usedErrors": [
          29592,
          29597,
          29606,
          29611,
          29616,
          29623,
          29628,
          29633,
          32727
        ],
        "usedEvents": [
          30670,
          30679,
          30688,
          32749
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 35
}