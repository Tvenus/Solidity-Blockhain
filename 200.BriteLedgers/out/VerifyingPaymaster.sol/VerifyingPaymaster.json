{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_verifyingSigner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "unstakeDelaySec",
          "type": "uint32"
        }
      ],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "uint48",
          "name": "validUntil",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "validAfter",
          "type": "uint48"
        }
      ],
      "name": "getHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "paymasterAndData",
          "type": "bytes"
        }
      ],
      "name": "parsePaymasterAndData",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "validUntil",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "validAfter",
          "type": "uint48"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPaymaster.PostOpMode",
          "name": "mode",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "actualGasCost",
          "type": "uint256"
        }
      ],
      "name": "postOp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "senderNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maxCost",
          "type": "uint256"
        }
      ],
      "name": "validatePaymasterUserOp",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "validationData",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifyingSigner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        }
      ],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1003:4851:19:-:0;;;1289:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1366:11;936:32:8;719:10:13;936:18:8;:32::i;:::-;-1:-1:-1;;;;;564:24:0;;;;;1389:34:19::1;;::::0;-1:-1:-1;1003:4851:19;;2433:187:8;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:8;;;-1:-1:-1;;;;;;2541:17:8;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:144:20:-;-1:-1:-1;;;;;102:31:20;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:430::-;261:6;269;322:2;310:9;301:7;297:23;293:32;290:52;;;338:1;335;328:12;290:52;370:9;364:16;389:44;427:5;389:44;:::i;:::-;502:2;487:18;;481:25;452:5;;-1:-1:-1;515:46:20;481:25;515:46;:::i;:::-;580:7;570:17;;;163:430;;;;;:::o;:::-;1003:4851:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100f35760003560e01c8063a9a234091161008a578063c399ec8811610059578063c399ec88146102c5578063d0e30db0146102da578063f2fde38b146102e2578063f465c77e1461030257600080fd5b8063a9a234091461023c578063b0d691fe1461025c578063bb9fe6bf14610290578063c23a5cea146102a557600080fd5b80638da5cb5b116100c65780638da5cb5b1461019357806394d4ad60146101b157806394e1fc19146101e15780639c90b4431461020f57600080fd5b80630396cb60146100f8578063205c28781461010d57806323d9ac9b1461012d578063715018a61461017e575b600080fd5b61010b610106366004610dca565b610330565b005b34801561011957600080fd5b5061010b610128366004610e0c565b6103bb565b34801561013957600080fd5b506101617f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018a57600080fd5b5061010b61042d565b34801561019f57600080fd5b506000546001600160a01b0316610161565b3480156101bd57600080fd5b506101d16101cc366004610e7a565b610441565b6040516101759493929190610ebc565b3480156101ed57600080fd5b506102016101fc366004610f3c565b61047e565b604051908152602001610175565b34801561021b57600080fd5b5061020161022a366004610f9a565b60016020526000908152604090205481565b34801561024857600080fd5b5061010b610257366004610fb7565b6104db565b34801561026857600080fd5b506101617f000000000000000000000000000000000000000000000000000000000000000081565b34801561029c57600080fd5b5061010b6104f5565b3480156102b157600080fd5b5061010b6102c0366004610f9a565b61056c565b3480156102d157600080fd5b506102016105f2565b61010b610682565b3480156102ee57600080fd5b5061010b6102fd366004610f9a565b6106e4565b34801561030e57600080fd5b5061032261031d366004611017565b610762565b6040516101759291906110ab565b610338610786565b604051621cb65b60e51b815263ffffffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630396cb609034906024016000604051808303818588803b15801561039f57600080fd5b505af11580156103b3573d6000803e3d6000fd5b505050505050565b6103c3610786565b60405163040b850f60e31b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b15801561039f57600080fd5b610435610786565b61043f60006107e0565b565b60008036816104546054601487896110cd565b81019061046191906110f7565b909450925061047385605481896110cd565b949793965094505050565b600061048984610830565b6001600160a01b038535166000908152600160209081526040918290205491516104bc939246923092899189910161112a565b6040516020818303038152906040528051906020012090509392505050565b6104e361086f565b6104ef848484846108df565b50505050565b6104fd610786565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561055857600080fd5b505af11580156104ef573d6000803e3d6000fd5b610574610786565b60405163611d2e7560e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea90602401600060405180830381600087803b1580156105d757600080fd5b505af11580156105eb573d6000803e3d6000fd5b5050505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610659573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067d919061117a565b905090565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b1580156105d757600080fd5b6106ec610786565b6001600160a01b0381166107565760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61075f816107e0565b50565b6060600061076e61086f565b610779858585610917565b915091505b935093915050565b6000546001600160a01b0316331461043f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161074d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060366000610843610120850185611193565b915091508360208184030360405194506020810185016040528085528082602087013750505050919050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461043f5760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b604482015260640161074d565b60405162461bcd60e51b815260206004820152600d60248201526c6d757374206f7665727269646560981b604482015260640161074d565b60606000808036816109306101cc6101208b018b611193565b9296509094509250905060408114806109495750604181145b6109bd576040805162461bcd60e51b81526020600482015260248101919091527f566572696679696e675061796d61737465723a20696e76616c6964207369676e60448201527f6174757265206c656e67746820696e207061796d6173746572416e6444617461606482015260840161074d565b6000610a206109cd8b878761047e565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b6001600160a01b038b35166000908152600160205260408120805492935090610a48836111da565b9190505550610a8d8184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610b1b92505050565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614610af057610ad160018686610b3f565b604051806020016040528060008152509096509650505050505061077e565b610afc60008686610b3f565b6040805160208101909152600081529b909a5098505050505050505050565b6000806000610b2a8585610b77565b91509150610b3781610bbc565b509392505050565b60008165ffffffffffff1660308465ffffffffffff16901b606086610b65576000610b68565b60015b60ff16901b1717949350505050565b6000808251604103610bad5760208301516040840151606085015160001a610ba187828585610d06565b94509450505050610bb5565b506000905060025b9250929050565b6000816004811115610bd057610bd0611201565b03610bd85750565b6001816004811115610bec57610bec611201565b03610c395760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161074d565b6002816004811115610c4d57610c4d611201565b03610c9a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161074d565b6003816004811115610cae57610cae611201565b0361075f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161074d565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610d3d5750600090506003610dc1565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610d91573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610dba57600060019250925050610dc1565b9150600090505b94509492505050565b600060208284031215610ddc57600080fd5b813563ffffffff81168114610df057600080fd5b9392505050565b6001600160a01b038116811461075f57600080fd5b60008060408385031215610e1f57600080fd5b8235610e2a81610df7565b946020939093013593505050565b60008083601f840112610e4a57600080fd5b50813567ffffffffffffffff811115610e6257600080fd5b602083019150836020828501011115610bb557600080fd5b60008060208385031215610e8d57600080fd5b823567ffffffffffffffff811115610ea457600080fd5b610eb085828601610e38565b90969095509350505050565b600065ffffffffffff808716835280861660208401525060606040830152826060830152828460808401376000608084840101526080601f19601f850116830101905095945050505050565b60006101608284031215610f1b57600080fd5b50919050565b803565ffffffffffff81168114610f3757600080fd5b919050565b600080600060608486031215610f5157600080fd5b833567ffffffffffffffff811115610f6857600080fd5b610f7486828701610f08565b935050610f8360208501610f21565b9150610f9160408501610f21565b90509250925092565b600060208284031215610fac57600080fd5b8135610df081610df7565b60008060008060608587031215610fcd57600080fd5b843560038110610fdc57600080fd5b9350602085013567ffffffffffffffff811115610ff857600080fd5b61100487828801610e38565b9598909750949560400135949350505050565b60008060006060848603121561102c57600080fd5b833567ffffffffffffffff81111561104357600080fd5b61104f86828701610f08565b9660208601359650604090950135949350505050565b6000815180845260005b8181101561108b5760208185018101518683018201520161106f565b506000602082860101526020601f19601f83011685010191505092915050565b6040815260006110be6040830185611065565b90508260208301529392505050565b600080858511156110dd57600080fd5b838611156110ea57600080fd5b5050820193919092039150565b6000806040838503121561110a57600080fd5b61111383610f21565b915061112160208401610f21565b90509250929050565b60c08152600061113d60c0830189611065565b6020830197909752506001600160a01b03949094166040850152606084019290925265ffffffffffff90811660808401521660a090910152919050565b60006020828403121561118c57600080fd5b5051919050565b6000808335601e198436030181126111aa57600080fd5b83018035915067ffffffffffffffff8211156111c557600080fd5b602001915036819003821315610bb557600080fd5b6000600182016111fa57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220fe976728876c106df4133917a4776b102e64a7049905ddbcd87a0c03ee9d413364736f6c63430008140033",
    "sourceMap": "1003:4851:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3094:141:0;;;;;;:::i;:::-;;:::i;:::-;;2721:149;;;;;;;;;;-1:-1:-1;2721:149:0;;;;;:::i;:::-;;:::i;1130:40:19:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;939:32:20;;;921:51;;909:2;894:18;1130:40:19;;;;;;;;1831:101:8;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:8;1273:6;-1:-1:-1;;;;;1273:6:8;1201:85;;4746:377:19;;;;;;;;;;-1:-1:-1;4746:377:19;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;2632:430::-;;;;;;;;;;-1:-1:-1;2632:430:19;;;;;:::i;:::-;;:::i;:::-;;;3335:25:20;;;3323:2;3308:18;2632:430:19;3189:177:20;1436:46:19;;;;;;;;;;-1:-1:-1;1436:46:19;;;;;:::i;:::-;;;;;;;;;;;;;;1143:186:0;;;;;;;;;;-1:-1:-1;1143:186:0;;;;;:::i;:::-;;:::i;471:39::-;;;;;;;;;;;;;;;3588:83;;;;;;;;;;;;;:::i;3890:133::-;;;;;;;;;;-1:-1:-1;3890:133:0;;;;;:::i;:::-;;:::i;3318:111::-;;;;;;;;;;;;;:::i;2474:105::-;;;:::i;2081:198:8:-;;;;;;;;;;-1:-1:-1;2081:198:8;;;;;:::i;:::-;;:::i;632:290:0:-;;;;;;;;;;-1:-1:-1;632:290:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3094:141::-;1094:13:8;:11;:13::i;:::-;3173:55:0::1;::::0;-1:-1:-1;;;3173:55:0;;6350:10:20;6338:23;;3173:55:0::1;::::0;::::1;6320:42:20::0;3173:10:0::1;-1:-1:-1::0;;;;;3173:19:0::1;::::0;::::1;::::0;3201:9:::1;::::0;6293:18:20;;3173:55:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;3094:141:::0;:::o;2721:149::-;1094:13:8;:11;:13::i;:::-;2817:46:0::1;::::0;-1:-1:-1;;;2817:46:0;;-1:-1:-1;;;;;6581:32:20;;;2817:46:0::1;::::0;::::1;6563:51:20::0;6630:18;;;6623:34;;;2817:10:0::1;:21;::::0;::::1;::::0;6536:18:20;;2817:46:0::1;;;;;;;;;;;;;;;;;::::0;::::1;1831:101:8::0;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;4746:377:19:-;4855:17;;4893:24;4855:17;4983:57;1280:2;1227;4983:16;;:57;:::i;:::-;4972:87;;;;;;;:::i;:::-;4933:126;;-1:-1:-1;4933:126:19;-1:-1:-1;5081:35:19;:16;1280:2;5081:16;;:35;:::i;:::-;4746:377;;;;-1:-1:-1;5069:47:19;-1:-1:-1;;;4746:377:19:o;2632:430::-;2763:7;2932:12;2937:6;2932:4;:12::i;:::-;-1:-1:-1;;;;;1877:20:7;;2976:31:19;;;;;:11;:31;;;;;;;;;;2904:141;;;;;2946:13;;2969:4;;3009:10;;3021;;2904:141;;:::i;:::-;;;;;;;;;;;;;2881:174;;;;;;2874:181;;2632:430;;;;;:::o;1143:186:0:-;1251:24;:22;:24::i;:::-;1285:37;1293:4;1299:7;;1308:13;1285:7;:37::i;:::-;1143:186;;;;:::o;3588:83::-;1094:13:8;:11;:13::i;:::-;3640:10:0::1;-1:-1:-1::0;;;;;3640:22:0::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;3890:133:::0;1094:13:8;:11;:13::i;:::-;3975:41:0::1;::::0;-1:-1:-1;;;3975:41:0;;-1:-1:-1;;;;;939:32:20;;;3975:41:0::1;::::0;::::1;921:51:20::0;3975:10:0::1;:24;::::0;::::1;::::0;894:18:20;;3975:41:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3890:133:::0;:::o;3318:111::-;3387:35;;-1:-1:-1;;;3387:35:0;;3416:4;3387:35;;;921:51:20;3361:7:0;;3387:10;-1:-1:-1;;;;;3387:20:0;;;;894:18:20;;3387:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3380:42;;3318:111;:::o;2474:105::-;2518:54;;-1:-1:-1;;;2518:54:0;;2566:4;2518:54;;;921:51:20;2518:10:0;-1:-1:-1;;;;;2518:20:0;;;;2547:9;;894:18:20;;2518:54:0;;;;;;;;;;;;;;;;;;;2081:198:8;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:8;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:8;;8534:2:20;2161:73:8::1;::::0;::::1;8516:21:20::0;8573:2;8553:18;;;8546:30;8612:34;8592:18;;;8585:62;-1:-1:-1;;;8663:18:20;;;8656:36;8709:19;;2161:73:8::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;632:290:0:-;764:20;786:22;821:24;:22;:24::i;:::-;862:53;887:6;895:10;907:7;862:24;:53::i;:::-;855:60;;;;632:290;;;;;;;:::o;1359:130:8:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:8;719:10:13;1422:23:8;1414:68;;;;-1:-1:-1;;;1414:68:8;;8941:2:20;1414:68:8;;;8923:21:20;;;8960:18;;;8953:30;9019:34;8999:18;;;8992:62;9071:18;;1414:68:8;8739:356:20;2433:187:8;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:8;;;-1:-1:-1;;;;;;2541:17:8;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1489:729:19:-;1557:16;1654:18;;1675:23;;;;:6;:23;:::i;:::-;1654:44;;;;1985:6;2041:2;2035:3;2023:10;2019:20;2015:29;2070:4;2064:11;2057:18;;2119:2;2114:3;2110:12;2105:3;2101:22;2095:4;2088:36;2149:3;2144;2137:16;2198:3;2193;2188:2;2183:3;2179:12;2166:36;;;1960:252;;1489:729;;;:::o;4087:135:0:-;4156:10;-1:-1:-1;;;;;4178:10:0;4156:33;;4148:67;;;;-1:-1:-1;;;4148:67:0;;9828:2:20;4148:67:0;;;9810:21:20;9867:2;9847:18;;;9840:30;-1:-1:-1;;;9886:18:20;;;9879:51;9947:18;;4148:67:0;9626:345:20;2089:285:0;2344:23;;-1:-1:-1;;;2344:23:0;;10178:2:20;2344:23:0;;;10160:21:20;10217:2;10197:18;;;10190:30;-1:-1:-1;;;10236:18:20;;;10229:43;10289:18;;2344:23:0;9976:337:20;3402:1338:19;3567:20;3589:22;;;3694:24;3589:22;3734:46;3756:23;;;;:6;:23;:::i;3734:46::-;3655:125;;-1:-1:-1;3655:125:19;;-1:-1:-1;3655:125:19;-1:-1:-1;3655:125:19;-1:-1:-1;4034:2:19;4014:22;;;:48;;-1:-1:-1;4060:2:19;4040:22;;4014:48;3993:159;;;;;-1:-1:-1;;;3993:159:19;;10520:2:20;3993:159:19;;;10502:21:20;10539:18;;;10532:30;;;;10598:34;10578:18;;;10571:62;10669:34;10649:18;;;10642:62;10721:19;;3993:159:19;10318:428:20;3993:159:19;4162:12;4177:69;4206:39;4214:6;4222:10;4234;4206:7;:39::i;:::-;7455:58:15;;11230:66:20;7455:58:15;;;11218:79:20;11313:12;;;11306:28;;;7325:7:15;;11350:12:20;;7455:58:15;;;;;;;;;;;;7445:69;;;;;;7438:76;;7256:265;;;;4177:69:19;-1:-1:-1;;;;;1877:20:7;;4256:31:19;;;;;:11;:31;;;;;:33;;4162:84;;-1:-1:-1;4256:31:19;:33;;;:::i;:::-;;;;;;4397:30;4411:4;4417:9;;4397:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4397:13:19;;-1:-1:-1;;;4397:30:19:i;:::-;-1:-1:-1;;;;;4378:49:19;:15;-1:-1:-1;;;;;4378:49:19;;4374:142;;4455:49;4475:4;4481:10;4493;4455:19;:49::i;:::-;4443:62;;;;;;;;;;;;;;;;;;;;;;;;4374:142;4682:50;4702:5;4709:10;4721;4682:19;:50::i;:::-;4670:63;;;;;;;;;-1:-1:-1;4670:63:19;;;;;-1:-1:-1;3402:1338:19;-1:-1:-1;;;;;;;;;3402:1338:19:o;3661:227:15:-;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;-1:-1:-1;3872:9:15;3661:227;-1:-1:-1;;;3661:227:15:o;5594:258:19:-;5728:7;5834:10;5826:19;;5821:2;5806:10;5798:19;;:25;;5793:2;5766:14;:22;;5787:1;5766:22;;;5783:1;5766:22;5758:31;;:37;;:65;:87;;5594:258;-1:-1:-1;;;;5594:258:19:o;2145:730:15:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:15;;-1:-1:-1;2822:35:15;2259:610;2145:730;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:15;;11707:2:20;788:34:15;;;11689:21:20;11746:2;11726:18;;;11719:30;11785:26;11765:18;;;11758:54;11829:18;;788:34:15;11505:348:20;730:345:15;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:15;;12060:2:20;903:41:15;;;12042:21:20;12099:2;12079:18;;;12072:30;12138:33;12118:18;;;12111:61;12189:18;;903:41:15;11858:355:20;839:236:15;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:15;;12420:2:20;1020:44:15;;;12402:21:20;12459:2;12439:18;;;12432:30;12498:34;12478:18;;;12471:62;-1:-1:-1;;;12549:18:20;;;12542:32;12591:19;;1020:44:15;12218:398:20;5069:1494:15;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:15;;-1:-1:-1;6221:30:15;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;12848:25:20;;;12921:4;12909:17;;12889:18;;;12882:45;;;;12943:18;;;12936:34;;;12986:18;;;12979:34;;;6374:24:15;;12820:19:20;;6374:24:15;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:15;;-1:-1:-1;;6374:24:15;;;-1:-1:-1;;;;;;;6412:20:15;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:15;;-1:-1:-1;5069:1494:15;;;;;;;;:::o;14:276:20:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:10;223:5;219:22;212:5;209:33;199:61;;256:1;253;246:12;199:61;279:5;14:276;-1:-1:-1;;;14:276:20:o;295:139::-;-1:-1:-1;;;;;378:31:20;;368:42;;358:70;;424:1;421;414:12;439:331;515:6;523;576:2;564:9;555:7;551:23;547:32;544:52;;;592:1;589;582:12;544:52;631:9;618:23;650:39;683:5;650:39;:::i;:::-;708:5;760:2;745:18;;;;732:32;;-1:-1:-1;;;439:331:20:o;983:347::-;1034:8;1044:6;1098:3;1091:4;1083:6;1079:17;1075:27;1065:55;;1116:1;1113;1106:12;1065:55;-1:-1:-1;1139:20:20;;1182:18;1171:30;;1168:50;;;1214:1;1211;1204:12;1168:50;1251:4;1243:6;1239:17;1227:29;;1303:3;1296:4;1287:6;1279;1275:19;1271:30;1268:39;1265:59;;;1320:1;1317;1310:12;1335:409;1405:6;1413;1466:2;1454:9;1445:7;1441:23;1437:32;1434:52;;;1482:1;1479;1472:12;1434:52;1522:9;1509:23;1555:18;1547:6;1544:30;1541:50;;;1587:1;1584;1577:12;1541:50;1626:58;1676:7;1667:6;1656:9;1652:22;1626:58;:::i;:::-;1703:8;;1600:84;;-1:-1:-1;1335:409:20;-1:-1:-1;;;;1335:409:20:o;1749:580::-;1921:4;1950:14;2003:2;1995:6;1991:15;1980:9;1973:34;2055:2;2047:6;2043:15;2038:2;2027:9;2023:18;2016:43;;2095:2;2090;2079:9;2075:18;2068:30;2134:6;2129:2;2118:9;2114:18;2107:34;2192:6;2184;2178:3;2167:9;2163:19;2150:49;2249:1;2243:3;2234:6;2223:9;2219:22;2215:32;2208:43;2319:3;2312:2;2308:7;2303:2;2295:6;2291:15;2287:29;2276:9;2272:45;2268:55;2260:63;;1749:580;;;;;;;:::o;2334:162::-;2400:5;2445:3;2436:6;2431:3;2427:16;2423:26;2420:46;;;2462:1;2459;2452:12;2420:46;-1:-1:-1;2484:6:20;2334:162;-1:-1:-1;2334:162:20:o;2501:167::-;2568:20;;2628:14;2617:26;;2607:37;;2597:65;;2658:1;2655;2648:12;2597:65;2501:167;;;:::o;2673:511::-;2780:6;2788;2796;2849:2;2837:9;2828:7;2824:23;2820:32;2817:52;;;2865:1;2862;2855:12;2817:52;2905:9;2892:23;2938:18;2930:6;2927:30;2924:50;;;2970:1;2967;2960:12;2924:50;2993:73;3058:7;3049:6;3038:9;3034:22;2993:73;:::i;:::-;2983:83;;;3085:37;3118:2;3107:9;3103:18;3085:37;:::i;:::-;3075:47;;3141:37;3174:2;3163:9;3159:18;3141:37;:::i;:::-;3131:47;;2673:511;;;;;:::o;3371:255::-;3430:6;3483:2;3471:9;3462:7;3458:23;3454:32;3451:52;;;3499:1;3496;3489:12;3451:52;3538:9;3525:23;3557:39;3590:5;3557:39;:::i;3813:635::-;3915:6;3923;3931;3939;3992:2;3980:9;3971:7;3967:23;3963:32;3960:52;;;4008:1;4005;3998:12;3960:52;4047:9;4034:23;4086:1;4079:5;4076:12;4066:40;;4102:1;4099;4092:12;4066:40;4125:5;-1:-1:-1;4181:2:20;4166:18;;4153:32;4208:18;4197:30;;4194:50;;;4240:1;4237;4230:12;4194:50;4279:58;4329:7;4320:6;4309:9;4305:22;4279:58;:::i;:::-;3813:635;;4356:8;;-1:-1:-1;4253:84:20;;4438:2;4423:18;4410:32;;3813:635;-1:-1:-1;;;;3813:635:20:o;4948:503::-;5057:6;5065;5073;5126:2;5114:9;5105:7;5101:23;5097:32;5094:52;;;5142:1;5139;5132:12;5094:52;5182:9;5169:23;5215:18;5207:6;5204:30;5201:50;;;5247:1;5244;5237:12;5201:50;5270:73;5335:7;5326:6;5315:9;5311:22;5270:73;:::i;:::-;5260:83;5390:2;5375:18;;5362:32;;-1:-1:-1;5441:2:20;5426:18;;;5413:32;;4948:503;-1:-1:-1;;;;4948:503:20:o;5456:422::-;5497:3;5535:5;5529:12;5562:6;5557:3;5550:19;5587:1;5597:162;5611:6;5608:1;5605:13;5597:162;;;5673:4;5729:13;;;5725:22;;5719:29;5701:11;;;5697:20;;5690:59;5626:12;5597:162;;;5601:3;5804:1;5797:4;5788:6;5783:3;5779:16;5775:27;5768:38;5867:4;5860:2;5856:7;5851:2;5843:6;5839:15;5835:29;5830:3;5826:39;5822:50;5815:57;;;5456:422;;;;:::o;5883:288::-;6058:2;6047:9;6040:21;6021:4;6078:44;6118:2;6107:9;6103:18;6095:6;6078:44;:::i;:::-;6070:52;;6158:6;6153:2;6142:9;6138:18;6131:34;5883:288;;;;;:::o;6668:331::-;6773:9;6784;6826:8;6814:10;6811:24;6808:44;;;6848:1;6845;6838:12;6808:44;6877:6;6867:8;6864:20;6861:40;;;6897:1;6894;6887:12;6861:40;-1:-1:-1;;6923:23:20;;;6968:25;;;;;-1:-1:-1;6668:331:20:o;7004:256::-;7070:6;7078;7131:2;7119:9;7110:7;7106:23;7102:32;7099:52;;;7147:1;7144;7137:12;7099:52;7170:28;7188:9;7170:28;:::i;:::-;7160:38;;7217:37;7250:2;7239:9;7235:18;7217:37;:::i;:::-;7207:47;;7004:256;;;;;:::o;7265:649::-;7548:3;7537:9;7530:22;7511:4;7569:45;7609:3;7598:9;7594:19;7586:6;7569:45;:::i;:::-;7645:2;7630:18;;7623:34;;;;-1:-1:-1;;;;;;7693:32:20;;;;7688:2;7673:18;;7666:60;7757:2;7742:18;;7735:34;;;;7788:14;7839:15;;;7833:3;7818:19;;7811:44;7892:15;7713:3;7871:19;;;7864:44;7561:53;7265:649;-1:-1:-1;7265:649:20:o;8143:184::-;8213:6;8266:2;8254:9;8245:7;8241:23;8237:32;8234:52;;;8282:1;8279;8272:12;8234:52;-1:-1:-1;8305:16:20;;8143:184;-1:-1:-1;8143:184:20:o;9100:521::-;9177:4;9183:6;9243:11;9230:25;9337:2;9333:7;9322:8;9306:14;9302:29;9298:43;9278:18;9274:68;9264:96;;9356:1;9353;9346:12;9264:96;9383:33;;9435:20;;;-1:-1:-1;9478:18:20;9467:30;;9464:50;;;9510:1;9507;9500:12;9464:50;9543:4;9531:17;;-1:-1:-1;9574:14:20;9570:27;;;9560:38;;9557:58;;;9611:1;9608;9601:12;10751:232;10790:3;10811:17;;;10808:140;;10870:10;10865:3;10861:20;10858:1;10851:31;10905:4;10902:1;10895:15;10933:4;10930:1;10923:15;10808:140;-1:-1:-1;10975:1:20;10964:13;;10751:232::o;11373:127::-;11434:10;11429:3;11425:20;11422:1;11415:31;11465:4;11462:1;11455:15;11489:4;11486:1;11479:15",
    "linkReferences": {},
    "immutableReferences": {
      "13": [
        {
          "start": 622,
          "length": 32
        },
        {
          "start": 850,
          "length": 32
        },
        {
          "start": 1001,
          "length": 32
        },
        {
          "start": 1279,
          "length": 32
        },
        {
          "start": 1427,
          "length": 32
        },
        {
          "start": 1546,
          "length": 32
        },
        {
          "start": 1687,
          "length": 32
        },
        {
          "start": 2170,
          "length": 32
        }
      ],
      "3824": [
        {
          "start": 319,
          "length": 32
        },
        {
          "start": 2712,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addStake(uint32)": "0396cb60",
    "deposit()": "d0e30db0",
    "entryPoint()": "b0d691fe",
    "getDeposit()": "c399ec88",
    "getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint48,uint48)": "94e1fc19",
    "owner()": "8da5cb5b",
    "parsePaymasterAndData(bytes)": "94d4ad60",
    "postOp(uint8,bytes,uint256)": "a9a23409",
    "renounceOwnership()": "715018a6",
    "senderNonce(address)": "9c90b443",
    "transferOwnership(address)": "f2fde38b",
    "unlockStake()": "bb9fe6bf",
    "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "f465c77e",
    "verifyingSigner()": "23d9ac9b",
    "withdrawStake(address)": "c23a5cea",
    "withdrawTo(address,uint256)": "205c2878"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_verifyingSigner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"}],\"name\":\"getHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"}],\"name\":\"parsePaymasterAndData\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"senderNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyingSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- the unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp      zero length to signify postOp is not required.\",\"validationData\":\"signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"add a deposit for this paymaster, used for paying for transaction fees\"},\"getDeposit()\":{\"notice\":\"return current paymaster's deposit on the entryPoint.\"},\"getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint48,uint48)\":{\"notice\":\"return the hash we're going to sign off-chain (and validate on-chain) this method is called by the off-chain service, to sign the request. it is called on-chain from the validatePaymasterUserOp, to validate the signature. note that this signature covers all fields of the UserOperation, except the \\\"paymasterAndData\\\", which will carry the signature itself.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"unlockStake()\":{\"notice\":\"unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw value from the deposit\"}},\"notice\":\"A sample paymaster that uses external service to decide whether to pay for the UserOp. The paymaster trusts an external signer to sign the transaction. The calling user must pass the UserOp to that external signer first, which performs whatever off-chain verification before signing the UserOp. Note that this signature is NOT a replacement for the account-specific signature: - the paymaster checks a signature to agree to PAY for GAS. - the account checks a signature to prove identity and account ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/VerifyingPaymaster.sol\":\"VerifyingPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@eth-infinitism/contracts/=lib/eth-infinitism/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-infinitism/=lib/eth-infinitism/contracts/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eth-infinitism/contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x27f658d545b5f26c2e09a7ac4fba72f9975433839d10225a520e557540b84443\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://426f0c6565ae612d34ae184fb1582e6fc360abf79450975c1c2dd439184094a0\",\"dweb:/ipfs/QmZMeMosC1P6Z5BQyT6iGFQrY6ui5ART65ycVWmXFnDpoq\"]},\"lib/eth-infinitism/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"lib/eth-infinitism/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"lib/eth-infinitism/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"lib/eth-infinitism/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"lib/eth-infinitism/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8\",\"dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia\"]},\"lib/eth-infinitism/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"lib/eth-infinitism/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"src/VerifyingPaymaster.sol\":{\"keccak256\":\"0xe882c5047777d7cd30c23414683c02494b5a9526403ebd941c84e7f36553ac90\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://997cb6a49a398a949e62aade415dbb609dd15ab928249f83ec7cfaceff1481f2\",\"dweb:/ipfs/QmPGyKt4dNsYhVDHxLgeAFzC7UQf44P7GpqXJzHvTCaY2V\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_verifyingSigner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "unstakeDelaySec",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "addStake"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint48",
              "name": "validUntil",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "validAfter",
              "type": "uint48"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "parsePaymasterAndData",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "validUntil",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "validAfter",
              "type": "uint48"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IPaymaster.PostOpMode",
              "name": "mode",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "actualGasCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postOp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "senderNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockStake"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "maxCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validatePaymasterUserOp",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyingSigner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawStake"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStake(uint32)": {
            "params": {
              "unstakeDelaySec": "- the unstake delay for this paymaster. Can only be increased."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "postOp(uint8,bytes,uint256)": {
            "params": {
              "actualGasCost": "- actual gas used so far (without this postOp call).",
              "context": "- the context value returned by validatePaymasterUserOp",
              "mode": "enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "params": {
              "maxCost": "the maximum cost of this transaction (based on maximum gas and gas price from userOp)",
              "userOp": "the user operation",
              "userOpHash": "hash of the user's request data."
            },
            "returns": {
              "context": "value to send to a postOp      zero length to signify postOp is not required.",
              "validationData": "signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \"authorizer\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly."
            }
          },
          "withdrawStake(address)": {
            "params": {
              "withdrawAddress": "the address to send withdrawn value."
            }
          },
          "withdrawTo(address,uint256)": {
            "params": {
              "amount": "to withdraw",
              "withdrawAddress": "target to send to"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addStake(uint32)": {
            "notice": "add stake for this paymaster. This method can also carry eth value to add to the current stake."
          },
          "deposit()": {
            "notice": "add a deposit for this paymaster, used for paying for transaction fees"
          },
          "getDeposit()": {
            "notice": "return current paymaster's deposit on the entryPoint."
          },
          "getHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint48,uint48)": {
            "notice": "return the hash we're going to sign off-chain (and validate on-chain) this method is called by the off-chain service, to sign the request. it is called on-chain from the validatePaymasterUserOp, to validate the signature. note that this signature covers all fields of the UserOperation, except the \"paymasterAndData\", which will carry the signature itself."
          },
          "postOp(uint8,bytes,uint256)": {
            "notice": "post-operation handler. Must verify sender is the entryPoint"
          },
          "unlockStake()": {
            "notice": "unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "notice": "payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."
          },
          "withdrawStake(address)": {
            "notice": "withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"
          },
          "withdrawTo(address,uint256)": {
            "notice": "withdraw value from the deposit"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/",
        ":@eth-infinitism/contracts/=lib/eth-infinitism/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-infinitism/=lib/eth-infinitism/contracts/",
        ":forge-std/=lib/forge-std/src/",
        ":foundry-devops/=lib/foundry-devops/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/VerifyingPaymaster.sol": "VerifyingPaymaster"
      },
      "libraries": {}
    },
    "sources": {
      "lib/eth-infinitism/contracts/core/BasePaymaster.sol": {
        "keccak256": "0x27f658d545b5f26c2e09a7ac4fba72f9975433839d10225a520e557540b84443",
        "urls": [
          "bzz-raw://426f0c6565ae612d34ae184fb1582e6fc360abf79450975c1c2dd439184094a0",
          "dweb:/ipfs/QmZMeMosC1P6Z5BQyT6iGFQrY6ui5ART65ycVWmXFnDpoq"
        ],
        "license": "GPL-3.0"
      },
      "lib/eth-infinitism/contracts/core/Helpers.sol": {
        "keccak256": "0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a",
        "urls": [
          "bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746",
          "dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU"
        ],
        "license": "GPL-3.0"
      },
      "lib/eth-infinitism/contracts/interfaces/IAggregator.sol": {
        "keccak256": "0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a",
        "urls": [
          "bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b",
          "dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP"
        ],
        "license": "GPL-3.0"
      },
      "lib/eth-infinitism/contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8",
        "urls": [
          "bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf",
          "dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd"
        ],
        "license": "GPL-3.0"
      },
      "lib/eth-infinitism/contracts/interfaces/INonceManager.sol": {
        "keccak256": "0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12",
        "urls": [
          "bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2",
          "dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b"
        ],
        "license": "GPL-3.0"
      },
      "lib/eth-infinitism/contracts/interfaces/IPaymaster.sol": {
        "keccak256": "0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456",
        "urls": [
          "bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8",
          "dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia"
        ],
        "license": "GPL-3.0"
      },
      "lib/eth-infinitism/contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f",
        "urls": [
          "bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3",
          "dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/eth-infinitism/contracts/interfaces/UserOperation.sol": {
        "keccak256": "0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c",
        "urls": [
          "bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c",
          "dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN"
        ],
        "license": "GPL-3.0"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "src/VerifyingPaymaster.sol": {
        "keccak256": "0xe882c5047777d7cd30c23414683c02494b5a9526403ebd941c84e7f36553ac90",
        "urls": [
          "bzz-raw://997cb6a49a398a949e62aade415dbb609dd15ab928249f83ec7cfaceff1481f2",
          "dweb:/ipfs/QmPGyKt4dNsYhVDHxLgeAFzC7UQf44P7GpqXJzHvTCaY2V"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/VerifyingPaymaster.sol",
    "id": 4060,
    "exportedSymbols": {
      "BasePaymaster": [
        219
      ],
      "ECDSA": [
        2452
      ],
      "IEntryPoint": [
        698
      ],
      "Math": [
        3317
      ],
      "Strings": [
        2091
      ],
      "UserOperation": [
        886
      ],
      "UserOperationLib": [
        1056
      ],
      "VerifyingPaymaster": [
        4059
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:5819:19",
    "nodes": [
      {
        "id": 3803,
        "nodeType": "PragmaDirective",
        "src": "36:24:19",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 3805,
        "nodeType": "ImportDirective",
        "src": "62:85:19",
        "nodes": [],
        "absolutePath": "lib/eth-infinitism/contracts/interfaces/UserOperation.sol",
        "file": "@eth-infinitism/contracts/interfaces/UserOperation.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4060,
        "sourceUnit": 1057,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3804,
              "name": "UserOperation",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 886,
              "src": "70:13:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3807,
        "nodeType": "ImportDirective",
        "src": "148:81:19",
        "nodes": [],
        "absolutePath": "lib/eth-infinitism/contracts/interfaces/IEntryPoint.sol",
        "file": "@eth-infinitism/contracts/interfaces/IEntryPoint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4060,
        "sourceUnit": 699,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3806,
              "name": "IEntryPoint",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 698,
              "src": "156:11:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3809,
        "nodeType": "ImportDirective",
        "src": "230:79:19",
        "nodes": [],
        "absolutePath": "lib/eth-infinitism/contracts/core/BasePaymaster.sol",
        "file": "@eth-infinitism/contracts/core/BasePaymaster.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4060,
        "sourceUnit": 220,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3808,
              "name": "BasePaymaster",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 219,
              "src": "238:13:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3810,
        "nodeType": "ImportDirective",
        "src": "310:62:19",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4060,
        "sourceUnit": 2453,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3812,
        "nodeType": "ImportDirective",
        "src": "373:88:19",
        "nodes": [],
        "absolutePath": "lib/eth-infinitism/contracts/interfaces/UserOperation.sol",
        "file": "@eth-infinitism/contracts/interfaces/UserOperation.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4060,
        "sourceUnit": 1057,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3811,
              "name": "UserOperationLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1056,
              "src": "381:16:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4059,
        "nodeType": "ContractDefinition",
        "src": "1003:4851:19",
        "nodes": [
          {
            "id": 3818,
            "nodeType": "UsingForDirective",
            "src": "1054:24:19",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 3816,
              "name": "ECDSA",
              "nameLocations": [
                "1060:5:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2452,
              "src": "1060:5:19"
            },
            "typeName": {
              "id": 3817,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1070:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "id": 3822,
            "nodeType": "UsingForDirective",
            "src": "1083:41:19",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 3819,
              "name": "UserOperationLib",
              "nameLocations": [
                "1089:16:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1056,
              "src": "1089:16:19"
            },
            "typeName": {
              "id": 3821,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3820,
                "name": "UserOperation",
                "nameLocations": [
                  "1110:13:19"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 886,
                "src": "1110:13:19"
              },
              "referencedDeclaration": 886,
              "src": "1110:13:19",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UserOperation_$886_storage_ptr",
                "typeString": "struct UserOperation"
              }
            }
          },
          {
            "id": 3824,
            "nodeType": "VariableDeclaration",
            "src": "1130:40:19",
            "nodes": [],
            "constant": false,
            "functionSelector": "23d9ac9b",
            "mutability": "immutable",
            "name": "verifyingSigner",
            "nameLocation": "1155:15:19",
            "scope": 4059,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3823,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1130:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3827,
            "nodeType": "VariableDeclaration",
            "src": "1177:52:19",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "VALID_TIMESTAMP_OFFSET",
            "nameLocation": "1202:22:19",
            "scope": 4059,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3825,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1177:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3230",
              "id": 3826,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1227:2:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20_by_1",
                "typeString": "int_const 20"
              },
              "value": "20"
            },
            "visibility": "private"
          },
          {
            "id": 3830,
            "nodeType": "VariableDeclaration",
            "src": "1236:46:19",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SIGNATURE_OFFSET",
            "nameLocation": "1261:16:19",
            "scope": 4059,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3828,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1236:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3834",
              "id": 3829,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1280:2:19",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_84_by_1",
                "typeString": "int_const 84"
              },
              "value": "84"
            },
            "visibility": "private"
          },
          {
            "id": 3846,
            "nodeType": "FunctionDefinition",
            "src": "1289:141:19",
            "nodes": [],
            "body": {
              "id": 3845,
              "nodeType": "Block",
              "src": "1379:51:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 3843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3841,
                      "name": "verifyingSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3824,
                      "src": "1389:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3842,
                      "name": "_verifyingSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3835,
                      "src": "1407:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1389:34:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3844,
                  "nodeType": "ExpressionStatement",
                  "src": "1389:34:19"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3838,
                    "name": "_entryPoint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3833,
                    "src": "1366:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$698",
                      "typeString": "contract IEntryPoint"
                    }
                  }
                ],
                "id": 3839,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3837,
                  "name": "BasePaymaster",
                  "nameLocations": [
                    "1352:13:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 219,
                  "src": "1352:13:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "1352:26:19"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3833,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "1313:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3846,
                  "src": "1301:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$698",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 3832,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3831,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "1301:11:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 698,
                      "src": "1301:11:19"
                    },
                    "referencedDeclaration": 698,
                    "src": "1301:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$698",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3835,
                  "mutability": "mutable",
                  "name": "_verifyingSigner",
                  "nameLocation": "1334:16:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3846,
                  "src": "1326:24:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1326:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1300:51:19"
            },
            "returnParameters": {
              "id": 3840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1379:0:19"
            },
            "scope": 4059,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3850,
            "nodeType": "VariableDeclaration",
            "src": "1436:46:19",
            "nodes": [],
            "constant": false,
            "functionSelector": "9c90b443",
            "mutability": "mutable",
            "name": "senderNonce",
            "nameLocation": "1471:11:19",
            "scope": 4059,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3849,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3847,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1444:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1436:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3848,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1455:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 3865,
            "nodeType": "FunctionDefinition",
            "src": "1489:729:19",
            "nodes": [],
            "body": {
              "id": 3864,
              "nodeType": "Block",
              "src": "1575:643:19",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3859
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3859,
                      "mutability": "mutable",
                      "name": "pnd",
                      "nameLocation": "1669:3:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 3864,
                      "src": "1654:18:19",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3858,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1654:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3862,
                  "initialValue": {
                    "expression": {
                      "id": 3860,
                      "name": "userOp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3853,
                      "src": "1675:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserOperation_$886_calldata_ptr",
                        "typeString": "struct UserOperation calldata"
                      }
                    },
                    "id": 3861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1682:16:19",
                    "memberName": "paymasterAndData",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 883,
                    "src": "1675:23:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1654:44:19"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1960:252:19",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1974:17:19",
                        "value": {
                          "name": "userOp",
                          "nodeType": "YulIdentifier",
                          "src": "1985:6:19"
                        },
                        "variables": [
                          {
                            "name": "ofs",
                            "nodeType": "YulTypedName",
                            "src": "1978:3:19",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2004:40:19",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pnd.offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "2023:10:19"
                                },
                                {
                                  "name": "ofs",
                                  "nodeType": "YulIdentifier",
                                  "src": "2035:3:19"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "2019:3:19"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2019:20:19"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2041:2:19",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "2015:3:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2015:29:19"
                        },
                        "variables": [
                          {
                            "name": "len",
                            "nodeType": "YulTypedName",
                            "src": "2008:3:19",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2057:18:19",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2070:4:19",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2064:5:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2064:11:19"
                        },
                        "variableNames": [
                          {
                            "name": "ret",
                            "nodeType": "YulIdentifier",
                            "src": "2057:3:19"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2095:4:19",
                              "type": "",
                              "value": "0x40"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "2105:3:19"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "len",
                                      "nodeType": "YulIdentifier",
                                      "src": "2114:3:19"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2119:2:19",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2110:3:19"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2110:12:19"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2101:3:19"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2101:22:19"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2088:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2088:36:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2088:36:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "2144:3:19"
                            },
                            {
                              "name": "len",
                              "nodeType": "YulIdentifier",
                              "src": "2149:3:19"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2137:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2137:16:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2137:16:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "2183:3:19"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2188:2:19",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2179:3:19"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2179:12:19"
                            },
                            {
                              "name": "ofs",
                              "nodeType": "YulIdentifier",
                              "src": "2193:3:19"
                            },
                            {
                              "name": "len",
                              "nodeType": "YulIdentifier",
                              "src": "2198:3:19"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "2166:12:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2166:36:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2166:36:19"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 3859,
                      "isOffset": true,
                      "isSlot": false,
                      "src": "2023:10:19",
                      "suffix": "offset",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3856,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2057:3:19",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3856,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2105:3:19",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3856,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2144:3:19",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3856,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2183:3:19",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3853,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1985:6:19",
                      "valueSize": 1
                    }
                  ],
                  "id": 3863,
                  "nodeType": "InlineAssembly",
                  "src": "1951:261:19"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pack",
            "nameLocation": "1498:4:19",
            "parameters": {
              "id": 3854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3853,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "1526:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3865,
                  "src": "1503:29:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$886_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 3852,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3851,
                      "name": "UserOperation",
                      "nameLocations": [
                        "1503:13:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 886,
                      "src": "1503:13:19"
                    },
                    "referencedDeclaration": 886,
                    "src": "1503:13:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$886_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1502:31:19"
            },
            "returnParameters": {
              "id": 3857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3856,
                  "mutability": "mutable",
                  "name": "ret",
                  "nameLocation": "1570:3:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3865,
                  "src": "1557:16:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3855,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1557:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1556:18:19"
            },
            "scope": 4059,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 3901,
            "nodeType": "FunctionDefinition",
            "src": "2632:430:19",
            "nodes": [],
            "body": {
              "id": 3900,
              "nodeType": "Block",
              "src": "2776:286:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 3882,
                                "name": "userOp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3869,
                                "src": "2937:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserOperation_$886_calldata_ptr",
                                  "typeString": "struct UserOperation calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_UserOperation_$886_calldata_ptr",
                                  "typeString": "struct UserOperation calldata"
                                }
                              ],
                              "id": 3881,
                              "name": "pack",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3865,
                              "src": "2932:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_UserOperation_$886_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (struct UserOperation calldata) pure returns (bytes memory)"
                              }
                            },
                            "id": 3883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2932:12:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 3884,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2946:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2952:7:19",
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "2946:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 3888,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2969:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VerifyingPaymaster_$4059",
                                  "typeString": "contract VerifyingPaymaster"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_VerifyingPaymaster_$4059",
                                  "typeString": "contract VerifyingPaymaster"
                                }
                              ],
                              "id": 3887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2961:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3886,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2961:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2961:13:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 3890,
                              "name": "senderNonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3850,
                              "src": "2976:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3894,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 3891,
                                  "name": "userOp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3869,
                                  "src": "2988:6:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserOperation_$886_calldata_ptr",
                                    "typeString": "struct UserOperation calldata"
                                  }
                                },
                                "id": 3892,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2995:9:19",
                                "memberName": "getSender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 908,
                                "src": "2988:16:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_struct$_UserOperation_$886_calldata_ptr_$returns$_t_address_$attached_to$_t_struct$_UserOperation_$886_calldata_ptr_$",
                                  "typeString": "function (struct UserOperation calldata) pure returns (address)"
                                }
                              },
                              "id": 3893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2988:18:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2976:31:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 3895,
                            "name": "validUntil",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3871,
                            "src": "3009:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          {
                            "id": 3896,
                            "name": "validAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3873,
                            "src": "3021:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          ],
                          "expression": {
                            "id": 3879,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2904:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2908:6:19",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2904:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2904:141:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3878,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2881:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2881:174:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 3877,
                  "id": 3899,
                  "nodeType": "Return",
                  "src": "2874:181:19"
                }
              ]
            },
            "documentation": {
              "id": 3866,
              "nodeType": "StructuredDocumentation",
              "src": "2224:403:19",
              "text": " return the hash we're going to sign off-chain (and validate on-chain)\n this method is called by the off-chain service, to sign the request.\n it is called on-chain from the validatePaymasterUserOp, to validate the signature.\n note that this signature covers all fields of the UserOperation, except the \"paymasterAndData\",\n which will carry the signature itself."
            },
            "functionSelector": "94e1fc19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHash",
            "nameLocation": "2641:7:19",
            "parameters": {
              "id": 3874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3869,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "2672:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3901,
                  "src": "2649:29:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$886_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 3868,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3867,
                      "name": "UserOperation",
                      "nameLocations": [
                        "2649:13:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 886,
                      "src": "2649:13:19"
                    },
                    "referencedDeclaration": 886,
                    "src": "2649:13:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$886_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3871,
                  "mutability": "mutable",
                  "name": "validUntil",
                  "nameLocation": "2687:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3901,
                  "src": "2680:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 3870,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "2680:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3873,
                  "mutability": "mutable",
                  "name": "validAfter",
                  "nameLocation": "2706:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3901,
                  "src": "2699:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 3872,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "2699:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2648:69:19"
            },
            "returnParameters": {
              "id": 3877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3876,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3901,
                  "src": "2763:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3875,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2763:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2762:9:19"
            },
            "scope": 4059,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3988,
            "nodeType": "FunctionDefinition",
            "src": "3402:1338:19",
            "nodes": [],
            "body": {
              "id": 3987,
              "nodeType": "Block",
              "src": "3617:1123:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 3917,
                        "name": "requiredPreFund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3909,
                        "src": "3628:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 3918,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3627:17:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3919,
                  "nodeType": "ExpressionStatement",
                  "src": "3627:17:19"
                },
                {
                  "assignments": [
                    3921,
                    3923,
                    3925
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3921,
                      "mutability": "mutable",
                      "name": "validUntil",
                      "nameLocation": "3663:10:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 3987,
                      "src": "3656:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 3920,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "3656:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3923,
                      "mutability": "mutable",
                      "name": "validAfter",
                      "nameLocation": "3682:10:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 3987,
                      "src": "3675:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 3922,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "3675:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3925,
                      "mutability": "mutable",
                      "name": "signature",
                      "nameLocation": "3709:9:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 3987,
                      "src": "3694:24:19",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 3924,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3694:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3930,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3927,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3905,
                          "src": "3756:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$886_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 3928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3763:16:19",
                        "memberName": "paymasterAndData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 883,
                        "src": "3756:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 3926,
                      "name": "parsePaymasterAndData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4023,
                      "src": "3734:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_uint48_$_t_uint48_$_t_bytes_calldata_ptr_$",
                        "typeString": "function (bytes calldata) pure returns (uint48,uint48,bytes calldata)"
                      }
                    },
                    "id": 3929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3734:46:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint48_$_t_uint48_$_t_bytes_calldata_ptr_$",
                      "typeString": "tuple(uint48,uint48,bytes calldata)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3655:125:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3932,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3925,
                              "src": "4014:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "id": 3933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4024:6:19",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4014:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "3634",
                            "id": 3934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4034:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_64_by_1",
                              "typeString": "int_const 64"
                            },
                            "value": "64"
                          },
                          "src": "4014:22:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3936,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3925,
                              "src": "4040:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "id": 3937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4050:6:19",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4040:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "3635",
                            "id": 3938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4060:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_65_by_1",
                              "typeString": "int_const 65"
                            },
                            "value": "65"
                          },
                          "src": "4040:22:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4014:48:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566572696679696e675061796d61737465723a20696e76616c6964207369676e6174757265206c656e67746820696e207061796d6173746572416e6444617461",
                        "id": 3941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4076:66:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7",
                          "typeString": "literal_string \"VerifyingPaymaster: invalid signature length in paymasterAndData\""
                        },
                        "value": "VerifyingPaymaster: invalid signature length in paymasterAndData"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0ccd72718b49b9af08aac30156bc47d10e177349cbe5dac0a36b471195929a7",
                          "typeString": "literal_string \"VerifyingPaymaster: invalid signature length in paymasterAndData\""
                        }
                      ],
                      "id": 3931,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3993:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3993:159:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3943,
                  "nodeType": "ExpressionStatement",
                  "src": "3993:159:19"
                },
                {
                  "assignments": [
                    3945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3945,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "4170:4:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 3987,
                      "src": "4162:12:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3944,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4162:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3954,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3949,
                            "name": "userOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3905,
                            "src": "4214:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$886_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          },
                          {
                            "id": 3950,
                            "name": "validUntil",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3921,
                            "src": "4222:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          {
                            "id": 3951,
                            "name": "validAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3923,
                            "src": "4234:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_UserOperation_$886_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            },
                            {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          ],
                          "id": 3948,
                          "name": "getHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3901,
                          "src": "4206:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_UserOperation_$886_calldata_ptr_$_t_uint48_$_t_uint48_$returns$_t_bytes32_$",
                            "typeString": "function (struct UserOperation calldata,uint48,uint48) view returns (bytes32)"
                          }
                        },
                        "id": 3952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4206:39:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 3946,
                        "name": "ECDSA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2452,
                        "src": "4177:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSA_$2452_$",
                          "typeString": "type(library ECDSA)"
                        }
                      },
                      "id": 3947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4183:22:19",
                      "memberName": "toEthSignedMessageHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2409,
                      "src": "4177:28:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 3953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4177:69:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4162:84:19"
                },
                {
                  "expression": {
                    "id": 3960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4256:33:19",
                    "subExpression": {
                      "baseExpression": {
                        "id": 3955,
                        "name": "senderNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3850,
                        "src": "4256:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3959,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 3956,
                            "name": "userOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3905,
                            "src": "4268:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$886_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          },
                          "id": 3957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4275:9:19",
                          "memberName": "getSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 908,
                          "src": "4268:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_UserOperation_$886_calldata_ptr_$returns$_t_address_$attached_to$_t_struct$_UserOperation_$886_calldata_ptr_$",
                            "typeString": "function (struct UserOperation calldata) pure returns (address)"
                          }
                        },
                        "id": 3958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4268:18:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4256:31:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3961,
                  "nodeType": "ExpressionStatement",
                  "src": "4256:33:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3962,
                      "name": "verifyingSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3824,
                      "src": "4378:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 3965,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3945,
                          "src": "4411:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 3966,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3925,
                          "src": "4417:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "id": 3963,
                          "name": "ECDSA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2452,
                          "src": "4397:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ECDSA_$2452_$",
                            "typeString": "type(library ECDSA)"
                          }
                        },
                        "id": 3964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4403:7:19",
                        "memberName": "recover",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2218,
                        "src": "4397:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (bytes32,bytes memory) pure returns (address)"
                        }
                      },
                      "id": 3967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4397:30:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4378:49:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3978,
                  "nodeType": "IfStatement",
                  "src": "4374:142:19",
                  "trueBody": {
                    "id": 3977,
                    "nodeType": "Block",
                    "src": "4429:87:19",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "",
                              "id": 3969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4451:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "74727565",
                                  "id": 3971,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4475:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "id": 3972,
                                  "name": "validUntil",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3921,
                                  "src": "4481:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                },
                                {
                                  "id": 3973,
                                  "name": "validAfter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3923,
                                  "src": "4493:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  },
                                  {
                                    "typeIdentifier": "t_uint48",
                                    "typeString": "uint48"
                                  }
                                ],
                                "id": 3970,
                                "name": "_packValidationData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4058,
                                "src": "4455:19:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint48_$_t_uint48_$returns$_t_uint256_$",
                                  "typeString": "function (bool,uint48,uint48) pure returns (uint256)"
                                }
                              },
                              "id": 3974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4455:49:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3975,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4450:55:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_uint256_$",
                            "typeString": "tuple(literal_string \"\",uint256)"
                          }
                        },
                        "functionReturnParameters": 3916,
                        "id": 3976,
                        "nodeType": "Return",
                        "src": "4443:62:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "",
                        "id": 3979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4678:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "66616c7365",
                            "id": 3981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4702:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "id": 3982,
                            "name": "validUntil",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3921,
                            "src": "4709:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          },
                          {
                            "id": 3983,
                            "name": "validAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3923,
                            "src": "4721:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            },
                            {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          ],
                          "id": 3980,
                          "name": "_packValidationData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4058,
                          "src": "4682:19:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint48_$_t_uint48_$returns$_t_uint256_$",
                            "typeString": "function (bool,uint48,uint48) pure returns (uint256)"
                          }
                        },
                        "id": 3984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4682:50:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 3985,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4677:56:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_uint256_$",
                      "typeString": "tuple(literal_string \"\",uint256)"
                    }
                  },
                  "functionReturnParameters": 3916,
                  "id": 3986,
                  "nodeType": "Return",
                  "src": "4670:63:19"
                }
              ]
            },
            "baseFunctions": [
              64
            ],
            "documentation": {
              "id": 3902,
              "nodeType": "StructuredDocumentation",
              "src": "3068:329:19",
              "text": " verify our external signer signed this request.\n the \"paymasterAndData\" is expected to be the paymaster and a signature over the entire request params\n paymasterAndData[:20] : address(this)\n paymasterAndData[20:84] : abi.encode(validUntil, validAfter)\n paymasterAndData[84:] : signature"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validatePaymasterUserOp",
            "nameLocation": "3411:24:19",
            "overrides": {
              "id": 3911,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3541:8:19"
            },
            "parameters": {
              "id": 3910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3905,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "3459:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3988,
                  "src": "3436:29:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$886_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 3904,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3903,
                      "name": "UserOperation",
                      "nameLocations": [
                        "3436:13:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 886,
                      "src": "3436:13:19"
                    },
                    "referencedDeclaration": 886,
                    "src": "3436:13:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$886_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3907,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3988,
                  "src": "3467:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3906,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3467:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3909,
                  "mutability": "mutable",
                  "name": "requiredPreFund",
                  "nameLocation": "3499:15:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3988,
                  "src": "3491:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3491:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3435:80:19"
            },
            "returnParameters": {
              "id": 3916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3913,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "3580:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3988,
                  "src": "3567:20:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3912,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3567:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3915,
                  "mutability": "mutable",
                  "name": "validationData",
                  "nameLocation": "3597:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3988,
                  "src": "3589:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3914,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3589:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3566:46:19"
            },
            "scope": 4059,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4023,
            "nodeType": "FunctionDefinition",
            "src": "4746:377:19",
            "nodes": [],
            "body": {
              "id": 4022,
              "nodeType": "Block",
              "src": "4923:200:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 4014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 3999,
                          "name": "validUntil",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3993,
                          "src": "4934:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        {
                          "id": 4000,
                          "name": "validAfter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3995,
                          "src": "4946:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "id": 4001,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4933:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint48_$_t_uint48_$",
                        "typeString": "tuple(uint48,uint48)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 4004,
                            "name": "paymasterAndData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3990,
                            "src": "4983:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "endExpression": {
                            "id": 4006,
                            "name": "SIGNATURE_OFFSET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3830,
                            "src": "5023:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexRangeAccess",
                          "src": "4983:57:19",
                          "startExpression": {
                            "id": 4005,
                            "name": "VALID_TIMESTAMP_OFFSET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3827,
                            "src": "5000:22:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 4009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5043:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint48_$",
                                "typeString": "type(uint48)"
                              },
                              "typeName": {
                                "id": 4008,
                                "name": "uint48",
                                "nodeType": "ElementaryTypeName",
                                "src": "5043:6:19",
                                "typeDescriptions": {}
                              }
                            },
                            {
                              "id": 4011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5051:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint48_$",
                                "typeString": "type(uint48)"
                              },
                              "typeName": {
                                "id": 4010,
                                "name": "uint48",
                                "nodeType": "ElementaryTypeName",
                                "src": "5051:6:19",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 4012,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5042:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_type$_t_uint48_$_$_t_type$_t_uint48_$_$",
                            "typeString": "tuple(type(uint48),type(uint48))"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_type$_t_uint48_$_$_t_type$_t_uint48_$_$",
                            "typeString": "tuple(type(uint48),type(uint48))"
                          }
                        ],
                        "expression": {
                          "id": 4002,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "4972:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 4003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4976:6:19",
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "4972:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4972:87:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint48_$_t_uint48_$",
                        "typeString": "tuple(uint48,uint48)"
                      }
                    },
                    "src": "4933:126:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4015,
                  "nodeType": "ExpressionStatement",
                  "src": "4933:126:19"
                },
                {
                  "expression": {
                    "id": 4020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4016,
                      "name": "signature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3997,
                      "src": "5069:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 4017,
                        "name": "paymasterAndData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3990,
                        "src": "5081:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 4019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexRangeAccess",
                      "src": "5081:35:19",
                      "startExpression": {
                        "id": 4018,
                        "name": "SIGNATURE_OFFSET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3830,
                        "src": "5098:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr_slice",
                        "typeString": "bytes calldata slice"
                      }
                    },
                    "src": "5069:47:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "id": 4021,
                  "nodeType": "ExpressionStatement",
                  "src": "5069:47:19"
                }
              ]
            },
            "functionSelector": "94d4ad60",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "parsePaymasterAndData",
            "nameLocation": "4755:21:19",
            "parameters": {
              "id": 3991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3990,
                  "mutability": "mutable",
                  "name": "paymasterAndData",
                  "nameLocation": "4792:16:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 4023,
                  "src": "4777:31:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3989,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4777:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4776:33:19"
            },
            "returnParameters": {
              "id": 3998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3993,
                  "mutability": "mutable",
                  "name": "validUntil",
                  "nameLocation": "4862:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 4023,
                  "src": "4855:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 3992,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "4855:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3995,
                  "mutability": "mutable",
                  "name": "validAfter",
                  "nameLocation": "4881:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 4023,
                  "src": "4874:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 3994,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "4874:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3997,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "4908:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 4023,
                  "src": "4893:24:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3996,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4893:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4854:64:19"
            },
            "scope": 4059,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4058,
            "nodeType": "FunctionDefinition",
            "src": "5594:258:19",
            "nodes": [],
            "body": {
              "id": 4057,
              "nodeType": "Block",
              "src": "5741:111:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "condition": {
                                "id": 4037,
                                "name": "sigCheckFailed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4026,
                                "src": "5766:14:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "hexValue": "30",
                                "id": 4039,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5787:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "id": 4040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "5766:22:19",
                              "trueExpression": {
                                "hexValue": "31",
                                "id": 4038,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5783:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 4036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5758:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 4035,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5758:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5758:31:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<<",
                        "rightExpression": {
                          "hexValue": "3936",
                          "id": 4042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5793:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_96_by_1",
                            "typeString": "int_const 96"
                          },
                          "value": "96"
                        },
                        "src": "5758:37:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "|",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 4046,
                              "name": "validUntil",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4028,
                              "src": "5806:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "id": 4045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5798:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 4044,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5798:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5798:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<<",
                        "rightExpression": {
                          "hexValue": "3438",
                          "id": 4048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5821:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_48_by_1",
                            "typeString": "int_const 48"
                          },
                          "value": "48"
                        },
                        "src": "5798:25:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5758:65:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "|",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 4053,
                          "name": "validAfter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4030,
                          "src": "5834:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        ],
                        "id": 4052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5826:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 4051,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5826:7:19",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5826:19:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5758:87:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4034,
                  "id": 4056,
                  "nodeType": "Return",
                  "src": "5751:94:19"
                }
              ]
            },
            "documentation": {
              "id": 4024,
              "nodeType": "StructuredDocumentation",
              "src": "5129:460:19",
              "text": " @notice Packs the validation data into a single uint256\n @dev Packs a boolean and two uint48 in a single uint256.\n @param sigCheckFailed Boolean representing whether or not the signature check failed\n @param validUntil Unix timestamp of the last valid block for this operation\n @param validAfter Unix timestamp of the first valid block for this operation\n @return A packed uint256 containing the validation data"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_packValidationData",
            "nameLocation": "5603:19:19",
            "parameters": {
              "id": 4031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4026,
                  "mutability": "mutable",
                  "name": "sigCheckFailed",
                  "nameLocation": "5628:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 4058,
                  "src": "5623:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4025,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5623:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4028,
                  "mutability": "mutable",
                  "name": "validUntil",
                  "nameLocation": "5651:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 4058,
                  "src": "5644:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 4027,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "5644:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4030,
                  "mutability": "mutable",
                  "name": "validAfter",
                  "nameLocation": "5670:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 4058,
                  "src": "5663:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 4029,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "5663:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5622:59:19"
            },
            "returnParameters": {
              "id": 4034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4033,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4058,
                  "src": "5728:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5728:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5727:9:19"
            },
            "scope": 4059,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3814,
              "name": "BasePaymaster",
              "nameLocations": [
                "1034:13:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 219,
              "src": "1034:13:19"
            },
            "id": 3815,
            "nodeType": "InheritanceSpecifier",
            "src": "1034:13:19"
          }
        ],
        "canonicalName": "VerifyingPaymaster",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3813,
          "nodeType": "StructuredDocumentation",
          "src": "462:539:19",
          "text": " A sample paymaster that uses external service to decide whether to pay for the UserOp.\n The paymaster trusts an external signer to sign the transaction.\n The calling user must pass the UserOp to that external signer first, which performs\n whatever off-chain verification before signing the UserOp.\n Note that this signature is NOT a replacement for the account-specific signature:\n - the paymaster checks a signature to agree to PAY for GAS.\n - the account checks a signature to prove identity and account ownership."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4059,
          219,
          1169,
          1916,
          752
        ],
        "name": "VerifyingPaymaster",
        "nameLocation": "1012:18:19",
        "scope": 4060,
        "usedErrors": [],
        "usedEvents": [
          1070
        ]
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 19
}