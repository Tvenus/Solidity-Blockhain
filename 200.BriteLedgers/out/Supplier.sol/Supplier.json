{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "rawMaterialAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "supplier",
          "type": "address"
        }
      ],
      "name": "RawMaterialCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_description",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_transporterAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_manufacturerAddr",
          "type": "address"
        }
      ],
      "name": "createRawMaterialPackage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPackages",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNoOfPackagesOfSupplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "supplierRawMaterials",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50611748806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806306db8324146100515780630a421f0f14610081578063c22470ea14610096578063fc7e01f3146100b4575b600080fd5b61006461005f36600461036b565b6100c9565b6040516001600160a01b0390911681526020015b60405180910390f35b610089610101565b6040516100789190610395565b33600090815260208190526040902054604051908152602001610078565b6100c76100c23660046103e2565b6101e6565b005b600060205281600052604060002081815481106100e557600080fd5b6000918252602090912001546001600160a01b03169150829050565b336000908152602081905260408120546060918167ffffffffffffffff81111561012d5761012d610428565b604051908082528060200260200182016040528015610156578160200160208202803683370190505b50905060005b828110156101df573360009081526020819052604090208054829081106101855761018561043e565b9060005260206000200160009054906101000a90046001600160a01b03168282815181106101b5576101b561043e565b6001600160a01b0390921660209283029190910190910152806101d781610454565b91505061015c565b5092915050565b60405133606081901b6bffffffffffffffffffffffff1916602083015242603483015260009160029060540160408051601f198184030181529082905261022c9161047b565b602060405180830381855afa158015610249573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061026c91906104aa565b60601c8686868660405161027f90610342565b6001600160a01b0396871681529486166020860152604085019390935260608401919091528316608083015290911660a082015260c001604051809103906000f0801580156102d2573d6000803e3d6000fd5b5033600081815260208181526040808320805460018101825590845291832090910180546001600160a01b0319166001600160a01b038616908117909155905193945091927fc79cf8ddd8acb3b33a3e6376598d00dc00be90fd673c705fbc18a78321558e9f9190a35050505050565b61124f806104c483390190565b80356001600160a01b038116811461036657600080fd5b919050565b6000806040838503121561037e57600080fd5b6103878361034f565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b818110156103d65783516001600160a01b0316835292840192918401916001016103b1565b50909695505050505050565b600080600080608085870312156103f857600080fd5b843593506020850135925061040f6040860161034f565b915061041d6060860161034f565b905092959194509250565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161047457634e487b7160e01b600052601160045260246000fd5b5060010190565b6000825160005b8181101561049c5760208186018101518583015201610482565b506000920191825250919050565b6000602082840312156104bc57600080fd5b505191905056fe608060405234801561001057600080fd5b5060405161124f38038061124f83398101604081905261002f91610123565b600080546001600160a01b03199081166001600160a01b0389811691821784556001805484168a8316179055600288905560038790556004805484168783161790556005805490931690851617909155600680546001600160a81b031916909117905560405182906100a0906100fa565b6001600160a01b039091168152602001604051809103906000f0801580156100cc573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169190911790555061018995505050505050565b610dc88061048783390190565b80516001600160a01b038116811461011e57600080fd5b919050565b60008060008060008060c0878903121561013c57600080fd5b61014587610107565b955061015360208801610107565b9450604087015193506060870151925061016f60808801610107565b915061017d60a08801610107565b90509295509295509295565b6102ef806101986000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806352b9996814610051578063638e9a3d146100665780636b099dca146100795780638072352014610094575b600080fd5b61006461005f366004610273565b6100ef565b005b610064610074366004610273565b6101a1565b61008161024d565b6040519081526020015b60405180910390f35b600154600254600354600654600454600554600854604080516001600160a01b0398891681526020810197909752860194909452918516606085015284166080840152831660a08301529190911660c082015260e00161008b565b6005546001600160a01b0382811691161461010957600080fd5b6001600654600160a01b900460ff166002811115610129576101296102a3565b1461013357600080fd5b6006805460ff60a01b1916600160a11b1790556005546004546001805460408051928352600260208401526001600160a01b039485169493841693909116917f7e89c4b1a4e2b51aae84eb1f90e8a34cb792ece5ac5cb63db4830c891220b28d91015b60405180910390a450565b6004546001600160a01b038281169116146101bb57600080fd5b6000600654600160a01b900460ff1660028111156101db576101db6102a3565b146101e557600080fd5b6006805460ff60a01b1916600160a01b179055600554600454600180546040805183815260208101939093526001600160a01b039485169493841693909116917f7e89c4b1a4e2b51aae84eb1f90e8a34cb792ece5ac5cb63db4830c891220b28d9101610196565b600654600090600160a01b900460ff16600281111561026e5761026e6102a3565b905090565b60006020828403121561028557600080fd5b81356001600160a01b038116811461029c57600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212206ffc57ce2ca22c01b7a51fbfd56e7ae636b7dc2875cdc4a49f35bcd2352f6b0264736f6c63430008140033608060405234801561001057600080fd5b50604051610dc8380380610dc883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610d35806100936000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b77bf6001161005b578063b77bf600146100f1578063c202fc2414610108578063c362eb7f1461011d578063daa105601461012557600080fd5b806327506f531461008257806333ea3dc8146100a0578063b4a99a4e146100c6575b600080fd5b61008a610138565b604051610097919061086c565b60405180910390f35b6100b36100ae366004610937565b610384565b6040516100979796959493929190610950565b6000546100d9906001600160a01b031681565b6040516001600160a01b039091168152602001610097565b6100fa60015481565b604051908152602001610097565b61011b610116366004610a6f565b61054e565b005b6001546100fa565b6100b3610133366004610937565b6106cb565b6060600060015467ffffffffffffffff811115610157576101576109cc565b6040519080825280602002602001820160405280156101bd57816020015b6040805160e0810182526000808252602080830182905292820181905260608083018290526080830181905260a083015260c082015282526000199092019101816101755790505b50905060005b60015481101561037e57600081815260026020818152604092839020835160e0810185528154815260018201546001600160a01b039081169382019390935292810154909116928201929092526003820154606082015260048201805491929160808401919061023290610b06565b80601f016020809104026020016040519081016040528092919081815260200182805461025e90610b06565b80156102ab5780601f10610280576101008083540402835291602001916102ab565b820191906000526020600020905b81548152906001019060200180831161028e57829003601f168201915b505050505081526020016005820180546102c490610b06565b80601f01602080910402602001604051908101604052809291908181526020018280546102f090610b06565b801561033d5780601f106103125761010080835404028352916020019161033d565b820191906000526020600020905b81548152906001019060200180831161032057829003601f168201915b5050505050815260200160068201548152505082828151811061036257610362610b3a565b60200260200101819052508061037790610b66565b90506101c3565b50919050565b6000818152600260208181526040808420815160e0810183528154815260018201546001600160a01b03908116948201949094529381015490921690830152600381015460608381019190915260048201805485948594859493849386938493909290916080840191906103f790610b06565b80601f016020809104026020016040519081016040528092919081815260200182805461042390610b06565b80156104705780601f1061044557610100808354040283529160200191610470565b820191906000526020600020905b81548152906001019060200180831161045357829003601f168201915b5050505050815260200160058201805461048990610b06565b80601f01602080910402602001604051908101604052809291908181526020018280546104b590610b06565b80156105025780601f106104d757610100808354040283529160200191610502565b820191906000526020600020905b8154815290600101906020018083116104e557829003601f168201915b50505091835250506006919091015460209182015281519082015160408301516060840151608085015160a086015160c090960151949f939e50919c509a509850919650945092505050565b60015442901580610581575083600260006001805461056d9190610b7f565b815260200190815260200160002060000154145b156106a9576040805160e0810182528881526001600160a01b038089166020808401918252898316848601908152606085018a8152608086018a815260a087018a905260c087018990526001805460009081526002958690529890982087518155945197850180549887166001600160a01b0319998a16179055915192840180549390951692909616919091179092559251600384015551909190600482019061062b9082610be7565b5060a082015160058201906106409082610be7565b5060c091909101516006909101556001805490600061065e83610b66565b91905055507f6ed33735d35afab24c9e528c8acb867ca8006c27e3369ba46090b6005244130c87878787878760405161069c96959493929190610ca7565b60405180910390a16106c2565b6040516347bc253b60e01b815260040160405180910390fd5b50505050505050565b60026020819052600091825260409091208054600182015492820154600383015460048401805493956001600160a01b039081169593169391929161070f90610b06565b80601f016020809104026020016040519081016040528092919081815260200182805461073b90610b06565b80156107885780601f1061075d57610100808354040283529160200191610788565b820191906000526020600020905b81548152906001019060200180831161076b57829003601f168201915b50505050509080600501805461079d90610b06565b80601f01602080910402602001604051908101604052809291908181526020018280546107c990610b06565b80156108165780601f106107eb57610100808354040283529160200191610816565b820191906000526020600020905b8154815290600101906020018083116107f957829003601f168201915b5050505050908060060154905087565b6000815180845260005b8181101561084c57602081850181015186830182015201610830565b506000602082860101526020601f19601f83011685010191505092915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561092957888303603f19018552815180518452878101516001600160a01b03908116898601528782015116878501526060808201519085015260808082015160e082870181905291906108ec83880182610826565b9250505060a080830151868303828801526109078382610826565b60c0948501519790940196909652505094870194925090860190600101610893565b509098975050505050505050565b60006020828403121561094957600080fd5b5035919050565b8781526001600160a01b038781166020830152861660408201526060810185905260e06080820181905260009061098990830186610826565b82810360a084015261099b8186610826565b9150508260c083015298975050505050505050565b80356001600160a01b03811681146109c757600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126109f357600080fd5b813567ffffffffffffffff80821115610a0e57610a0e6109cc565b604051601f8301601f19908116603f01168101908282118183101715610a3657610a366109cc565b81604052838152866020858801011115610a4f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c08789031215610a8857600080fd5b86359550610a98602088016109b0565b9450610aa6604088016109b0565b935060608701359250608087013567ffffffffffffffff80821115610aca57600080fd5b610ad68a838b016109e2565b935060a0890135915080821115610aec57600080fd5b50610af989828a016109e2565b9150509295509295509295565b600181811c90821680610b1a57607f821691505b60208210810361037e57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610b7857610b78610b50565b5060010190565b81810381811115610b9257610b92610b50565b92915050565b601f821115610be257600081815260208120601f850160051c81016020861015610bbf5750805b601f850160051c820191505b81811015610bde57828155600101610bcb565b5050505b505050565b815167ffffffffffffffff811115610c0157610c016109cc565b610c1581610c0f8454610b06565b84610b98565b602080601f831160018114610c4a5760008415610c325750858301515b600019600386901b1c1916600185901b178555610bde565b600085815260208120601f198616915b82811015610c7957888601518255948401946001909101908401610c5a565b5085821015610c975787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8681526001600160a01b038681166020830152851660408201526060810184905260c060808201819052600090610ce090830185610826565b82810360a0840152610cf28185610826565b999850505050505050505056fea2646970667358221220c31c1d8a9069df752989fa59dbdb9080412a40e4a8c5c8f202364ec6b625563164736f6c63430008140033a2646970667358221220c42fb693321332a049828b64c6408162a1276add69da5b106fbc314cb580e03f64736f6c63430008140033",
    "sourceMap": "465:2916:8:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806306db8324146100515780630a421f0f14610081578063c22470ea14610096578063fc7e01f3146100b4575b600080fd5b61006461005f36600461036b565b6100c9565b6040516001600160a01b0390911681526020015b60405180910390f35b610089610101565b6040516100789190610395565b33600090815260208190526040902054604051908152602001610078565b6100c76100c23660046103e2565b6101e6565b005b600060205281600052604060002081815481106100e557600080fd5b6000918252602090912001546001600160a01b03169150829050565b336000908152602081905260408120546060918167ffffffffffffffff81111561012d5761012d610428565b604051908082528060200260200182016040528015610156578160200160208202803683370190505b50905060005b828110156101df573360009081526020819052604090208054829081106101855761018561043e565b9060005260206000200160009054906101000a90046001600160a01b03168282815181106101b5576101b561043e565b6001600160a01b0390921660209283029190910190910152806101d781610454565b91505061015c565b5092915050565b60405133606081901b6bffffffffffffffffffffffff1916602083015242603483015260009160029060540160408051601f198184030181529082905261022c9161047b565b602060405180830381855afa158015610249573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061026c91906104aa565b60601c8686868660405161027f90610342565b6001600160a01b0396871681529486166020860152604085019390935260608401919091528316608083015290911660a082015260c001604051809103906000f0801580156102d2573d6000803e3d6000fd5b5033600081815260208181526040808320805460018101825590845291832090910180546001600160a01b0319166001600160a01b038616908117909155905193945091927fc79cf8ddd8acb3b33a3e6376598d00dc00be90fd673c705fbc18a78321558e9f9190a35050505050565b61124f806104c483390190565b80356001600160a01b038116811461036657600080fd5b919050565b6000806040838503121561037e57600080fd5b6103878361034f565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b818110156103d65783516001600160a01b0316835292840192918401916001016103b1565b50909695505050505050565b600080600080608085870312156103f857600080fd5b843593506020850135925061040f6040860161034f565b915061041d6060860161034f565b905092959194509250565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161047457634e487b7160e01b600052601160045260246000fd5b5060010190565b6000825160005b8181101561049c5760208186018101518583015201610482565b506000920191825250919050565b6000602082840312156104bc57600080fd5b505191905056fe608060405234801561001057600080fd5b5060405161124f38038061124f83398101604081905261002f91610123565b600080546001600160a01b03199081166001600160a01b0389811691821784556001805484168a8316179055600288905560038790556004805484168783161790556005805490931690851617909155600680546001600160a81b031916909117905560405182906100a0906100fa565b6001600160a01b039091168152602001604051809103906000f0801580156100cc573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169190911790555061018995505050505050565b610dc88061048783390190565b80516001600160a01b038116811461011e57600080fd5b919050565b60008060008060008060c0878903121561013c57600080fd5b61014587610107565b955061015360208801610107565b9450604087015193506060870151925061016f60808801610107565b915061017d60a08801610107565b90509295509295509295565b6102ef806101986000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806352b9996814610051578063638e9a3d146100665780636b099dca146100795780638072352014610094575b600080fd5b61006461005f366004610273565b6100ef565b005b610064610074366004610273565b6101a1565b61008161024d565b6040519081526020015b60405180910390f35b600154600254600354600654600454600554600854604080516001600160a01b0398891681526020810197909752860194909452918516606085015284166080840152831660a08301529190911660c082015260e00161008b565b6005546001600160a01b0382811691161461010957600080fd5b6001600654600160a01b900460ff166002811115610129576101296102a3565b1461013357600080fd5b6006805460ff60a01b1916600160a11b1790556005546004546001805460408051928352600260208401526001600160a01b039485169493841693909116917f7e89c4b1a4e2b51aae84eb1f90e8a34cb792ece5ac5cb63db4830c891220b28d91015b60405180910390a450565b6004546001600160a01b038281169116146101bb57600080fd5b6000600654600160a01b900460ff1660028111156101db576101db6102a3565b146101e557600080fd5b6006805460ff60a01b1916600160a01b179055600554600454600180546040805183815260208101939093526001600160a01b039485169493841693909116917f7e89c4b1a4e2b51aae84eb1f90e8a34cb792ece5ac5cb63db4830c891220b28d9101610196565b600654600090600160a01b900460ff16600281111561026e5761026e6102a3565b905090565b60006020828403121561028557600080fd5b81356001600160a01b038116811461029c57600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212206ffc57ce2ca22c01b7a51fbfd56e7ae636b7dc2875cdc4a49f35bcd2352f6b0264736f6c63430008140033608060405234801561001057600080fd5b50604051610dc8380380610dc883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610d35806100936000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b77bf6001161005b578063b77bf600146100f1578063c202fc2414610108578063c362eb7f1461011d578063daa105601461012557600080fd5b806327506f531461008257806333ea3dc8146100a0578063b4a99a4e146100c6575b600080fd5b61008a610138565b604051610097919061086c565b60405180910390f35b6100b36100ae366004610937565b610384565b6040516100979796959493929190610950565b6000546100d9906001600160a01b031681565b6040516001600160a01b039091168152602001610097565b6100fa60015481565b604051908152602001610097565b61011b610116366004610a6f565b61054e565b005b6001546100fa565b6100b3610133366004610937565b6106cb565b6060600060015467ffffffffffffffff811115610157576101576109cc565b6040519080825280602002602001820160405280156101bd57816020015b6040805160e0810182526000808252602080830182905292820181905260608083018290526080830181905260a083015260c082015282526000199092019101816101755790505b50905060005b60015481101561037e57600081815260026020818152604092839020835160e0810185528154815260018201546001600160a01b039081169382019390935292810154909116928201929092526003820154606082015260048201805491929160808401919061023290610b06565b80601f016020809104026020016040519081016040528092919081815260200182805461025e90610b06565b80156102ab5780601f10610280576101008083540402835291602001916102ab565b820191906000526020600020905b81548152906001019060200180831161028e57829003601f168201915b505050505081526020016005820180546102c490610b06565b80601f01602080910402602001604051908101604052809291908181526020018280546102f090610b06565b801561033d5780601f106103125761010080835404028352916020019161033d565b820191906000526020600020905b81548152906001019060200180831161032057829003601f168201915b5050505050815260200160068201548152505082828151811061036257610362610b3a565b60200260200101819052508061037790610b66565b90506101c3565b50919050565b6000818152600260208181526040808420815160e0810183528154815260018201546001600160a01b03908116948201949094529381015490921690830152600381015460608381019190915260048201805485948594859493849386938493909290916080840191906103f790610b06565b80601f016020809104026020016040519081016040528092919081815260200182805461042390610b06565b80156104705780601f1061044557610100808354040283529160200191610470565b820191906000526020600020905b81548152906001019060200180831161045357829003601f168201915b5050505050815260200160058201805461048990610b06565b80601f01602080910402602001604051908101604052809291908181526020018280546104b590610b06565b80156105025780601f106104d757610100808354040283529160200191610502565b820191906000526020600020905b8154815290600101906020018083116104e557829003601f168201915b50505091835250506006919091015460209182015281519082015160408301516060840151608085015160a086015160c090960151949f939e50919c509a509850919650945092505050565b60015442901580610581575083600260006001805461056d9190610b7f565b815260200190815260200160002060000154145b156106a9576040805160e0810182528881526001600160a01b038089166020808401918252898316848601908152606085018a8152608086018a815260a087018a905260c087018990526001805460009081526002958690529890982087518155945197850180549887166001600160a01b0319998a16179055915192840180549390951692909616919091179092559251600384015551909190600482019061062b9082610be7565b5060a082015160058201906106409082610be7565b5060c091909101516006909101556001805490600061065e83610b66565b91905055507f6ed33735d35afab24c9e528c8acb867ca8006c27e3369ba46090b6005244130c87878787878760405161069c96959493929190610ca7565b60405180910390a16106c2565b6040516347bc253b60e01b815260040160405180910390fd5b50505050505050565b60026020819052600091825260409091208054600182015492820154600383015460048401805493956001600160a01b039081169593169391929161070f90610b06565b80601f016020809104026020016040519081016040528092919081815260200182805461073b90610b06565b80156107885780601f1061075d57610100808354040283529160200191610788565b820191906000526020600020905b81548152906001019060200180831161076b57829003601f168201915b50505050509080600501805461079d90610b06565b80601f01602080910402602001604051908101604052809291908181526020018280546107c990610b06565b80156108165780601f106107eb57610100808354040283529160200191610816565b820191906000526020600020905b8154815290600101906020018083116107f957829003601f168201915b5050505050908060060154905087565b6000815180845260005b8181101561084c57602081850181015186830182015201610830565b506000602082860101526020601f19601f83011685010191505092915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561092957888303603f19018552815180518452878101516001600160a01b03908116898601528782015116878501526060808201519085015260808082015160e082870181905291906108ec83880182610826565b9250505060a080830151868303828801526109078382610826565b60c0948501519790940196909652505094870194925090860190600101610893565b509098975050505050505050565b60006020828403121561094957600080fd5b5035919050565b8781526001600160a01b038781166020830152861660408201526060810185905260e06080820181905260009061098990830186610826565b82810360a084015261099b8186610826565b9150508260c083015298975050505050505050565b80356001600160a01b03811681146109c757600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126109f357600080fd5b813567ffffffffffffffff80821115610a0e57610a0e6109cc565b604051601f8301601f19908116603f01168101908282118183101715610a3657610a366109cc565b81604052838152866020858801011115610a4f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c08789031215610a8857600080fd5b86359550610a98602088016109b0565b9450610aa6604088016109b0565b935060608701359250608087013567ffffffffffffffff80821115610aca57600080fd5b610ad68a838b016109e2565b935060a0890135915080821115610aec57600080fd5b50610af989828a016109e2565b9150509295509295509295565b600181811c90821680610b1a57607f821691505b60208210810361037e57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610b7857610b78610b50565b5060010190565b81810381811115610b9257610b92610b50565b92915050565b601f821115610be257600081815260208120601f850160051c81016020861015610bbf5750805b601f850160051c820191505b81811015610bde57828155600101610bcb565b5050505b505050565b815167ffffffffffffffff811115610c0157610c016109cc565b610c1581610c0f8454610b06565b84610b98565b602080601f831160018114610c4a5760008415610c325750858301515b600019600386901b1c1916600185901b178555610bde565b600085815260208120601f198616915b82811015610c7957888601518255948401946001909101908401610c5a565b5085821015610c975787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8681526001600160a01b038681166020830152851660408201526060810184905260c060808201819052600090610ce090830185610826565b82810360a0840152610cf28185610826565b999850505050505050505056fea2646970667358221220c31c1d8a9069df752989fa59dbdb9080412a40e4a8c5c8f202364ec6b625563164736f6c63430008140033a2646970667358221220c42fb693321332a049828b64c6408162a1276add69da5b106fbc314cb580e03f64736f6c63430008140033",
    "sourceMap": "465:2916:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:57;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;615:32:12;;;597:51;;585:2;570:18;544:57:8;;;;;;;;2641:333;;;:::i;:::-;;;;;;;:::i;2144:130::-;2249:10;2202:7;2228:32;;;;;;;;;;:39;2144:130;;1468:25:12;;;1456:2;1441:18;2144:130:8;1322:177:12;1260:596:8;;;;;;:::i;:::-;;:::i;:::-;;544:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;544:57:8;;-1:-1:-1;544:57:8;;-1:-1:-1;544:57:8:o;2641:333::-;2751:10;2716:11;2730:32;;;;;;;;;;:39;2688:16;;2730:39;2807:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2807:18:8;;2779:46;;2840:9;2835:108;2859:3;2855:1;:7;2835:108;;;2918:10;2897:20;:32;;;;;;;;;;:35;;2930:1;;2897:35;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2897:35:8;2883:8;2892:1;2883:11;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2883:49:8;;;:11;;;;;;;;;;;:49;2864:3;;;;:::i;:::-;;;;2835:108;;;-1:-1:-1;2959:8:8;2641:333;-1:-1:-1;;2641:333:8:o;1260:596::-;1545:44;;1498:10;2584:2:12;2580:15;;;-1:-1:-1;;2576:53:12;1545:44:8;;;2564:66:12;1573:15:8;2646:12:12;;;2639:28;-1:-1:-1;;1538:52:8;;2683:12:12;;1545:44:8;;;-1:-1:-1;;1545:44:8;;;;;;;;;;1538:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1522:70;;1606:12;1632:9;1655:16;1685:17;1469:243;;;;;:::i;:::-;-1:-1:-1;;;;;3655:15:12;;;3637:34;;3707:15;;;3702:2;3687:18;;3680:43;3754:2;3739:18;;3732:34;;;;3797:2;3782:18;;3775:34;;;;3846:15;;3840:3;3825:19;;3818:44;3899:15;;;3617:3;3878:19;;3871:44;3586:3;3571:19;1469:243:8;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1744:10:8;1723:20;:32;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1723:59:8;-1:-1:-1;;;;;1723:59:8;;;;;;;;1797:52;;1723:59;;-1:-1:-1;1744:10:8;;1797:52;;1723:20;1797:52;1433:423;1260:596;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:173:12:-;82:20;;-1:-1:-1;;;;;131:31:12;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:12:o;659:658::-;830:2;882:21;;;952:13;;855:18;;;974:22;;;801:4;;830:2;1053:15;;;;1027:2;1012:18;;;801:4;1096:195;1110:6;1107:1;1104:13;1096:195;;;1175:13;;-1:-1:-1;;;;;1171:39:12;1159:52;;1266:15;;;;1231:12;;;;1207:1;1125:9;1096:195;;;-1:-1:-1;1308:3:12;;659:658;-1:-1:-1;;;;;;659:658:12:o;1504:397::-;1590:6;1598;1606;1614;1667:3;1655:9;1646:7;1642:23;1638:33;1635:53;;;1684:1;1681;1674:12;1635:53;1720:9;1707:23;1697:33;;1777:2;1766:9;1762:18;1749:32;1739:42;;1800:38;1834:2;1823:9;1819:18;1800:38;:::i;:::-;1790:48;;1857:38;1891:2;1880:9;1876:18;1857:38;:::i;:::-;1847:48;;1504:397;;;;;;;:::o;1906:127::-;1967:10;1962:3;1958:20;1955:1;1948:31;1998:4;1995:1;1988:15;2022:4;2019:1;2012:15;2038:127;2099:10;2094:3;2090:20;2087:1;2080:31;2130:4;2127:1;2120:15;2154:4;2151:1;2144:15;2170:232;2209:3;2230:17;;;2227:140;;2289:10;2284:3;2280:20;2277:1;2270:31;2324:4;2321:1;2314:15;2352:4;2349:1;2342:15;2227:140;-1:-1:-1;2394:1:12;2383:13;;2170:232::o;2706:412::-;2835:3;2873:6;2867:13;2898:1;2908:129;2922:6;2919:1;2916:13;2908:129;;;3020:4;3004:14;;;3000:25;;2994:32;2981:11;;;2974:53;2937:12;2908:129;;;-1:-1:-1;3092:1:12;3056:16;;3081:13;;;-1:-1:-1;3056:16:12;2706:412;-1:-1:-1;2706:412:12:o;3123:184::-;3193:6;3246:2;3234:9;3225:7;3221:23;3217:32;3214:52;;;3262:1;3259;3252:12;3214:52;-1:-1:-1;3285:16:12;;3123:184;-1:-1:-1;3123:184:12:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "createRawMaterialPackage(bytes32,uint256,address,address)": "fc7e01f3",
    "getAllPackages()": "0a421f0f",
    "getNoOfPackagesOfSupplier()": "c22470ea",
    "supplierRawMaterials(address,uint256)": "06db8324"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rawMaterialAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"supplier\",\"type\":\"address\"}],\"name\":\"RawMaterialCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_description\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_transporterAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_manufacturerAddr\",\"type\":\"address\"}],\"name\":\"createRawMaterialPackage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPackages\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNoOfPackagesOfSupplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"supplierRawMaterials\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Tinotenda Joe\",\"details\":\"Following is just a simple explanation, consider implementing more complex logic in accordance with your needs.\",\"kind\":\"dev\",\"methods\":{\"createRawMaterialPackage(bytes32,uint256,address,address)\":{\"details\":\"Ensure the proper access controls and error handling (if needed), add events to capture the important state changes TODO: Require checks can be added for inputs\",\"params\":{\"_description\":\"the description of the raw material\",\"_manufacturerAddr\":\"the address of the manufacturer\",\"_quantity\":\"the quantity of the raw material\",\"_transporterAddr\":\"the address of the transporter\"}},\"getAllPackages()\":{\"details\":\"Access controls can be added here to restrict this sensitive information TODO: Access Controls using OpenZeppelin's AccessControl.sol TODO: Consider returning more detailed information about each package\",\"returns\":{\"_0\":\"an array of addresses of the packages of the supplier\"}},\"getNoOfPackagesOfSupplier()\":{\"details\":\"This can be used to quickly check how many packages a supplier has TODO: Consider returning more detailed information about each package\",\"returns\":{\"_0\":\"the number of packages of the supplier\"}}},\"title\":\"Supplier Contract for Supply Chain Protocol\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createRawMaterialPackage(bytes32,uint256,address,address)\":{\"notice\":\"Create a new raw material package\"},\"getAllPackages()\":{\"notice\":\"Get all packages of a supplier\"},\"getNoOfPackagesOfSupplier()\":{\"notice\":\"Get the number of packages of a supplier\"}},\"notice\":\"This contract serves as a decentralized platform for suppliers to manage their raw materials in a supply chain protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/LedgerContracts/Supplier.sol\":\"Supplier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@eth-infinitism/contracts/=lib/eth-infinitism/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"src/LedgerContracts/RawMaterial.sol\":{\"keccak256\":\"0xeab476d44255895983b574b4504b4d1ba0b6ed26756c3c47551e4cbe0c00ae34\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://312f416038cc3a0540bed5ca8d4560d3c6395bca7e64ea09267d2e4020dbfb39\",\"dweb:/ipfs/QmRSBdVeg7s8EvZqHeX2yLgm2dmzaAahsxnnD9idGA782t\"]},\"src/LedgerContracts/Supplier.sol\":{\"keccak256\":\"0x175a8489f754492f5a09c1138c4982c98242fc9b932e0cc4994a3f1e9128f224\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://1a04441e2b8ea92e0af29b69ffc8d03998b2431279acc80c8bde3ae2e10bd778\",\"dweb:/ipfs/QmRY44PZGEi1eqg5DJ6VfAF4MgJ8BwAjxdjiRbbkkvNWnx\"]},\"src/LedgerContracts/Transactions.sol\":{\"keccak256\":\"0x5b420d340acbfc9c3fd24d562604a87e8b5617058a3468f44c5776fee002a16f\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://055a6a3796b210943d143875390086ef79dd442a9110616838028565a8535b38\",\"dweb:/ipfs/QmaFxjYyqpXHr34EBmBSFFnLu89QgmEtrKRRLTCtvwKJmP\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "rawMaterialAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "supplier",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RawMaterialCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_description",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "_quantity",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_transporterAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_manufacturerAddr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createRawMaterialPackage"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllPackages",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getNoOfPackagesOfSupplier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supplierRawMaterials",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "createRawMaterialPackage(bytes32,uint256,address,address)": {
            "details": "Ensure the proper access controls and error handling (if needed), add events to capture the important state changes TODO: Require checks can be added for inputs",
            "params": {
              "_description": "the description of the raw material",
              "_manufacturerAddr": "the address of the manufacturer",
              "_quantity": "the quantity of the raw material",
              "_transporterAddr": "the address of the transporter"
            }
          },
          "getAllPackages()": {
            "details": "Access controls can be added here to restrict this sensitive information TODO: Access Controls using OpenZeppelin's AccessControl.sol TODO: Consider returning more detailed information about each package",
            "returns": {
              "_0": "an array of addresses of the packages of the supplier"
            }
          },
          "getNoOfPackagesOfSupplier()": {
            "details": "This can be used to quickly check how many packages a supplier has TODO: Consider returning more detailed information about each package",
            "returns": {
              "_0": "the number of packages of the supplier"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "createRawMaterialPackage(bytes32,uint256,address,address)": {
            "notice": "Create a new raw material package"
          },
          "getAllPackages()": {
            "notice": "Get all packages of a supplier"
          },
          "getNoOfPackagesOfSupplier()": {
            "notice": "Get the number of packages of a supplier"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/",
        ":@eth-infinitism/contracts/=lib/eth-infinitism/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":foundry-devops/=lib/foundry-devops/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/LedgerContracts/Supplier.sol": "Supplier"
      },
      "libraries": {}
    },
    "sources": {
      "src/LedgerContracts/RawMaterial.sol": {
        "keccak256": "0xeab476d44255895983b574b4504b4d1ba0b6ed26756c3c47551e4cbe0c00ae34",
        "urls": [
          "bzz-raw://312f416038cc3a0540bed5ca8d4560d3c6395bca7e64ea09267d2e4020dbfb39",
          "dweb:/ipfs/QmRSBdVeg7s8EvZqHeX2yLgm2dmzaAahsxnnD9idGA782t"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "src/LedgerContracts/Supplier.sol": {
        "keccak256": "0x175a8489f754492f5a09c1138c4982c98242fc9b932e0cc4994a3f1e9128f224",
        "urls": [
          "bzz-raw://1a04441e2b8ea92e0af29b69ffc8d03998b2431279acc80c8bde3ae2e10bd778",
          "dweb:/ipfs/QmRY44PZGEi1eqg5DJ6VfAF4MgJ8BwAjxdjiRbbkkvNWnx"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "src/LedgerContracts/Transactions.sol": {
        "keccak256": "0x5b420d340acbfc9c3fd24d562604a87e8b5617058a3468f44c5776fee002a16f",
        "urls": [
          "bzz-raw://055a6a3796b210943d143875390086ef79dd442a9110616838028565a8535b38",
          "dweb:/ipfs/QmaFxjYyqpXHr34EBmBSFFnLu89QgmEtrKRRLTCtvwKJmP"
        ],
        "license": "SEE LICENSE IN LICENSE"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/LedgerContracts/Supplier.sol",
    "id": 2264,
    "exportedSymbols": {
      "RawMaterial": [
        2119
      ],
      "Supplier": [
        2263
      ]
    },
    "nodeType": "SourceUnit",
    "src": "51:3331:8",
    "nodes": [
      {
        "id": 2121,
        "nodeType": "PragmaDirective",
        "src": "51:24:8",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 2123,
        "nodeType": "ImportDirective",
        "src": "77:46:8",
        "nodes": [],
        "absolutePath": "src/LedgerContracts/RawMaterial.sol",
        "file": "./RawMaterial.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2264,
        "sourceUnit": 2120,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2122,
              "name": "RawMaterial",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2119,
              "src": "85:11:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2263,
        "nodeType": "ContractDefinition",
        "src": "465:2916:8",
        "nodes": [
          {
            "id": 2129,
            "nodeType": "VariableDeclaration",
            "src": "544:57:8",
            "nodes": [],
            "constant": false,
            "functionSelector": "06db8324",
            "mutability": "mutable",
            "name": "supplierRawMaterials",
            "nameLocation": "581:20:8",
            "scope": 2263,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 2128,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2125,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "552:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "544:29:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 2126,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "563:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 2127,
                "nodeType": "ArrayTypeName",
                "src": "563:9:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 2135,
            "nodeType": "EventDefinition",
            "src": "608:87:8",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "c79cf8ddd8acb3b33a3e6376598d00dc00be90fd673c705fbc18a78321558e9f",
            "name": "RawMaterialCreated",
            "nameLocation": "614:18:8",
            "parameters": {
              "id": 2134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2131,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "rawMaterialAddress",
                  "nameLocation": "649:18:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2135,
                  "src": "633:34:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "633:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2133,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "supplier",
                  "nameLocation": "685:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2135,
                  "src": "669:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "632:62:8"
            }
          },
          {
            "id": 2197,
            "nodeType": "FunctionDefinition",
            "src": "1260:596:8",
            "nodes": [],
            "body": {
              "id": 2196,
              "nodeType": "Block",
              "src": "1433:423:8",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2149
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2149,
                      "mutability": "mutable",
                      "name": "rawMaterial",
                      "nameLocation": "1455:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2196,
                      "src": "1443:23:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RawMaterial_$2119",
                        "typeString": "contract RawMaterial"
                      },
                      "typeName": {
                        "id": 2148,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2147,
                          "name": "RawMaterial",
                          "nameLocations": [
                            "1443:11:8"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2119,
                          "src": "1443:11:8"
                        },
                        "referencedDeclaration": 2119,
                        "src": "1443:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RawMaterial_$2119",
                          "typeString": "contract RawMaterial"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2175,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2153,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1498:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1502:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1498:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 2162,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "1562:3:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 2163,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "1566:6:8",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "1562:10:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 2164,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "1573:5:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 2165,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "1579:9:8",
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "1573:15:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2160,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "1545:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 2161,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "1549:12:8",
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "1545:16:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 2166,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1545:44:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 2159,
                                  "name": "sha256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -22,
                                  "src": "1538:6:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 2167,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1538:52:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 2158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1530:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes20_$",
                                "typeString": "type(bytes20)"
                              },
                              "typeName": {
                                "id": 2157,
                                "name": "bytes20",
                                "nodeType": "ElementaryTypeName",
                                "src": "1530:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1530:61:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes20",
                              "typeString": "bytes20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes20",
                              "typeString": "bytes20"
                            }
                          ],
                          "id": 2156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1522:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2155,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1522:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1522:70:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2170,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2138,
                        "src": "1606:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2171,
                        "name": "_quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2140,
                        "src": "1632:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2172,
                        "name": "_transporterAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2142,
                        "src": "1655:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2173,
                        "name": "_manufacturerAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2144,
                        "src": "1685:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1469:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$returns$_t_contract$_RawMaterial_$2119_$",
                        "typeString": "function (address,address,bytes32,uint256,address,address) returns (contract RawMaterial)"
                      },
                      "typeName": {
                        "id": 2151,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2150,
                          "name": "RawMaterial",
                          "nameLocations": [
                            "1473:11:8"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2119,
                          "src": "1473:11:8"
                        },
                        "referencedDeclaration": 2119,
                        "src": "1473:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RawMaterial_$2119",
                          "typeString": "contract RawMaterial"
                        }
                      }
                    },
                    "id": 2174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1469:243:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RawMaterial_$2119",
                      "typeString": "contract RawMaterial"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1443:269:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2183,
                            "name": "rawMaterial",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2149,
                            "src": "1769:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RawMaterial_$2119",
                              "typeString": "contract RawMaterial"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RawMaterial_$2119",
                              "typeString": "contract RawMaterial"
                            }
                          ],
                          "id": 2182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1761:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2181,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1761:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1761:20:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 2176,
                          "name": "supplierRawMaterials",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2129,
                          "src": "1723:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 2179,
                        "indexExpression": {
                          "expression": {
                            "id": 2177,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1744:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1748:6:8",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1744:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1723:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1756:4:8",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1723:37:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 2185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1723:59:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2186,
                  "nodeType": "ExpressionStatement",
                  "src": "1723:59:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2190,
                            "name": "rawMaterial",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2149,
                            "src": "1824:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RawMaterial_$2119",
                              "typeString": "contract RawMaterial"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RawMaterial_$2119",
                              "typeString": "contract RawMaterial"
                            }
                          ],
                          "id": 2189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1816:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2188,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1816:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1816:20:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2192,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1838:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1842:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1838:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2187,
                      "name": "RawMaterialCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2135,
                      "src": "1797:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 2194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1797:52:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2195,
                  "nodeType": "EmitStatement",
                  "src": "1792:57:8"
                }
              ]
            },
            "documentation": {
              "id": 2136,
              "nodeType": "StructuredDocumentation",
              "src": "769:486:8",
              "text": " @notice Create a new raw material package\n @param _description the description of the raw material\n @param _quantity the quantity of the raw material\n @param _transporterAddr the address of the transporter\n @param _manufacturerAddr the address of the manufacturer\n @dev Ensure the proper access controls and error handling (if needed), add events to capture the important state changes\n TODO: Require checks can be added for inputs"
            },
            "functionSelector": "fc7e01f3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRawMaterialPackage",
            "nameLocation": "1269:24:8",
            "parameters": {
              "id": 2145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2138,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "1311:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2197,
                  "src": "1303:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2137,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1303:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2140,
                  "mutability": "mutable",
                  "name": "_quantity",
                  "nameLocation": "1341:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2197,
                  "src": "1333:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1333:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2142,
                  "mutability": "mutable",
                  "name": "_transporterAddr",
                  "nameLocation": "1368:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2197,
                  "src": "1360:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2144,
                  "mutability": "mutable",
                  "name": "_manufacturerAddr",
                  "nameLocation": "1402:17:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2197,
                  "src": "1394:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1394:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1293:132:8"
            },
            "returnParameters": {
              "id": 2146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1433:0:8"
            },
            "scope": 2263,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2210,
            "nodeType": "FunctionDefinition",
            "src": "2144:130:8",
            "nodes": [],
            "body": {
              "id": 2209,
              "nodeType": "Block",
              "src": "2211:63:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 2203,
                        "name": "supplierRawMaterials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2129,
                        "src": "2228:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                          "typeString": "mapping(address => address[] storage ref)"
                        }
                      },
                      "id": 2206,
                      "indexExpression": {
                        "expression": {
                          "id": 2204,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2249:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2253:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2249:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2228:32:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 2207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2261:6:8",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2228:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2202,
                  "id": 2208,
                  "nodeType": "Return",
                  "src": "2221:46:8"
                }
              ]
            },
            "documentation": {
              "id": 2198,
              "nodeType": "StructuredDocumentation",
              "src": "1862:277:8",
              "text": " @notice Get the number of packages of a supplier\n @return the number of packages of the supplier\n @dev This can be used to quickly check how many packages a supplier has\n TODO: Consider returning more detailed information about each package"
            },
            "functionSelector": "c22470ea",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNoOfPackagesOfSupplier",
            "nameLocation": "2153:25:8",
            "parameters": {
              "id": 2199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2178:2:8"
            },
            "returnParameters": {
              "id": 2202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2201,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2210,
                  "src": "2202:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2202:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2201:9:8"
            },
            "scope": 2263,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2262,
            "nodeType": "FunctionDefinition",
            "src": "2641:333:8",
            "nodes": [],
            "body": {
              "id": 2261,
              "nodeType": "Block",
              "src": "2706:268:8",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2218,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "2724:3:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2261,
                      "src": "2716:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2217,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2716:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2224,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 2219,
                        "name": "supplierRawMaterials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2129,
                        "src": "2730:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                          "typeString": "mapping(address => address[] storage ref)"
                        }
                      },
                      "id": 2222,
                      "indexExpression": {
                        "expression": {
                          "id": 2220,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2751:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2755:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2751:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2730:32:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 2223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2763:6:8",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2730:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2716:53:8"
                },
                {
                  "assignments": [
                    2229
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2229,
                      "mutability": "mutable",
                      "name": "packages",
                      "nameLocation": "2796:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2261,
                      "src": "2779:25:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2227,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2779:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2228,
                        "nodeType": "ArrayTypeName",
                        "src": "2779:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2235,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2233,
                        "name": "len",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2218,
                        "src": "2821:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2807:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2230,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2811:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2231,
                        "nodeType": "ArrayTypeName",
                        "src": "2811:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 2234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2807:18:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2779:46:8"
                },
                {
                  "body": {
                    "id": 2257,
                    "nodeType": "Block",
                    "src": "2869:74:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 2255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2246,
                              "name": "packages",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2229,
                              "src": "2883:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2248,
                            "indexExpression": {
                              "id": 2247,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2237,
                              "src": "2892:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2883:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2249,
                                "name": "supplierRawMaterials",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2129,
                                "src": "2897:20:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 2252,
                              "indexExpression": {
                                "expression": {
                                  "id": 2250,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2918:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2922:6:8",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2918:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2897:32:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2254,
                            "indexExpression": {
                              "id": 2253,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2237,
                              "src": "2930:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2897:35:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2883:49:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2256,
                        "nodeType": "ExpressionStatement",
                        "src": "2883:49:8"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2240,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2237,
                      "src": "2855:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2241,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2218,
                      "src": "2859:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2855:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2258,
                  "initializationExpression": {
                    "assignments": [
                      2237
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2237,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2848:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2258,
                        "src": "2840:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2236,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2840:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2239,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2852:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2840:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2864:3:8",
                      "subExpression": {
                        "id": 2243,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2237,
                        "src": "2864:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2245,
                    "nodeType": "ExpressionStatement",
                    "src": "2864:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "2835:108:8"
                },
                {
                  "expression": {
                    "id": 2259,
                    "name": "packages",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2229,
                    "src": "2959:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 2216,
                  "id": 2260,
                  "nodeType": "Return",
                  "src": "2952:15:8"
                }
              ]
            },
            "documentation": {
              "id": 2211,
              "nodeType": "StructuredDocumentation",
              "src": "2280:356:8",
              "text": " @notice Get all packages of a supplier\n @return an array of addresses of the packages of the supplier\n @dev Access controls can be added here to restrict this sensitive information\n TODO: Access Controls using OpenZeppelin's AccessControl.sol\n TODO: Consider returning more detailed information about each package"
            },
            "functionSelector": "0a421f0f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllPackages",
            "nameLocation": "2650:14:8",
            "parameters": {
              "id": 2212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2664:2:8"
            },
            "returnParameters": {
              "id": 2216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2215,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2262,
                  "src": "2688:16:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2213,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2688:7:8",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2214,
                    "nodeType": "ArrayTypeName",
                    "src": "2688:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2687:18:8"
            },
            "scope": 2263,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Supplier",
        "contractDependencies": [
          2119
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2124,
          "nodeType": "StructuredDocumentation",
          "src": "125:338:8",
          "text": " @title Supplier Contract for Supply Chain Protocol\n @author Tinotenda Joe\n @notice This contract serves as a decentralized platform for suppliers to manage their raw materials in a supply chain protocol.\n @dev Following is just a simple explanation, consider implementing more complex logic in accordance with your needs."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2263
        ],
        "name": "Supplier",
        "nameLocation": "474:8:8",
        "scope": 2264,
        "usedErrors": [],
        "usedEvents": [
          2135
        ]
      }
    ],
    "license": "SEE LICENSE IN LICENSE"
  },
  "id": 8
}