{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "available",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "purchase",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405267016345785d8a000060015534801561001c57600080fd5b506101ea8061002c6000396000f3fe60806040526004361061003f5760003560e01c80634f64b2be1461004457806396e494e81461009757806398d5fdca146100c7578063efef39a1146100e5575b600080fd5b34801561005057600080fd5b5061007a61005f36600461019b565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a357600080fd5b506100b76100b236600461019b565b6100fa565b604051901515815260200161008e565b3480156100d357600080fd5b5060015460405190815260200161008e565b6100f86100f336600461019b565b610126565b005b6000818152602081905260408120546001600160a01b031661011e57506001919050565b506000919050565b600154341461017b5760405162461bcd60e51b815260206004820152601860248201527f54686973204e465420636f73747320302e312065746865720000000000000000604482015260640160405180910390fd5b600090815260208190526040902080546001600160a01b03191633179055565b6000602082840312156101ad57600080fd5b503591905056fea2646970667358221220f251127761c82dfb9248d0ef9d0eb69e0c549bbcbf341471880b16e03318f1e764736f6c63430008140033",
    "sourceMap": "76:1159:13:-:0;;;298:9;279:28;;76:1159;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061003f5760003560e01c80634f64b2be1461004457806396e494e81461009757806398d5fdca146100c7578063efef39a1146100e5575b600080fd5b34801561005057600080fd5b5061007a61005f36600461019b565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a357600080fd5b506100b76100b236600461019b565b6100fa565b604051901515815260200161008e565b3480156100d357600080fd5b5060015460405190815260200161008e565b6100f86100f336600461019b565b610126565b005b6000818152602081905260408120546001600160a01b031661011e57506001919050565b506000919050565b600154341461017b5760405162461bcd60e51b815260206004820152601860248201527f54686973204e465420636f73747320302e312065746865720000000000000000604482015260640160405180910390fd5b600090815260208190526040902080546001600160a01b03191633179055565b6000602082840312156101ad57600080fd5b503591905056fea2646970667358221220f251127761c82dfb9248d0ef9d0eb69e0c549bbcbf341471880b16e03318f1e764736f6c63430008140033",
    "sourceMap": "76:1159:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;177:41;;;;;;;;;;-1:-1:-1;177:41:13;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;177:41:13;;;;;;-1:-1:-1;;;;;363:32:18;;;345:51;;333:2;318:18;177:41:13;;;;;;;;927:306;;;;;;;;;;-1:-1:-1;927:306:13;;;;;:::i;:::-;;:::i;:::-;;;572:14:18;;565:22;547:41;;535:2;520:18;927:306:13;407:187:18;699:84:13;;;;;;;;;;-1:-1:-1;768:8:13;;699:84;;745:25:18;;;733:2;718:18;699:84:13;599:177:18;473:167:13;;;;;;:::i;:::-;;:::i;:::-;;927:306;987:4;1137:16;;;;;;;;;;;-1:-1:-1;;;;;1137:16:13;1133:72;;-1:-1:-1;1190:4:13;;927:306;-1:-1:-1;927:306:13:o;1133:72::-;-1:-1:-1;1221:5:13;;927:306;-1:-1:-1;927:306:13:o;473:167::-;557:8;;544:9;:21;536:58;;;;-1:-1:-1;;;536:58:13;;983:2:18;536:58:13;;;965:21:18;1022:2;1002:18;;;995:30;1061:26;1041:18;;;1034:54;1105:18;;536:58:13;;;;;;;;604:6;:16;;;;;;;;;;:29;;-1:-1:-1;;;;;;604:29:13;623:10;604:29;;;473:167::o;14:180:18:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:18;;14:180;-1:-1:-1;14:180:18:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "available(uint256)": "96e494e8",
    "getPrice()": "98d5fdca",
    "purchase(uint256)": "efef39a1",
    "tokens(uint256)": "4f64b2be"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"available\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"available(uint256)\":{\"details\":\"available() checks whether the given tokenId has already been sold or not\",\"params\":{\"_tokenId\":\"- the tokenId to check for\"}},\"getPrice()\":{\"details\":\"getPrice() returns the price of one NFT\"},\"purchase(uint256)\":{\"details\":\"purchase() accepts ETH and marks the owner of the given tokenId as the caller address\",\"params\":{\"_tokenId\":\"- the fake NFT token Id to purchase\"}}},\"stateVariables\":{\"nftPrice\":{\"details\":\"Set the purchase price for each Fake NFT\"},\"tokens\":{\"details\":\"Maintain a mapping of Fake TokenID to Owner addresses\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/CryptoDevs/FakeNFTMarketplace.sol\":\"FakeNFTMarketplace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"src/CryptoDevs/FakeNFTMarketplace.sol\":{\"keccak256\":\"0xf506add1a8d29c671de884630014b3514de2940eafc2a7c6c5da6e2d3f8b7635\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://083919a7ad11c0bc141af0eae7a3e99754fefacb6607531bb7c1a72d17446a3c\",\"dweb:/ipfs/QmT8dvEhQVKPUnYAbKWYXvrK6T5k5HYyN7Xp1Msjp1rjJ6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "available",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "purchase"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokens",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "available(uint256)": {
            "details": "available() checks whether the given tokenId has already been sold or not",
            "params": {
              "_tokenId": "- the tokenId to check for"
            }
          },
          "getPrice()": {
            "details": "getPrice() returns the price of one NFT"
          },
          "purchase(uint256)": {
            "details": "purchase() accepts ETH and marks the owner of the given tokenId as the caller address",
            "params": {
              "_tokenId": "- the fake NFT token Id to purchase"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":foundry-devops/=lib/foundry-devops/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/CryptoDevs/FakeNFTMarketplace.sol": "FakeNFTMarketplace"
      },
      "libraries": {}
    },
    "sources": {
      "src/CryptoDevs/FakeNFTMarketplace.sol": {
        "keccak256": "0xf506add1a8d29c671de884630014b3514de2940eafc2a7c6c5da6e2d3f8b7635",
        "urls": [
          "bzz-raw://083919a7ad11c0bc141af0eae7a3e99754fefacb6607531bb7c1a72d17446a3c",
          "dweb:/ipfs/QmT8dvEhQVKPUnYAbKWYXvrK6T5k5HYyN7Xp1Msjp1rjJ6"
        ],
        "license": "SEE LICENSE IN LICENSE"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/CryptoDevs/FakeNFTMarketplace.sol",
    "id": 3080,
    "exportedSymbols": {
      "FakeNFTMarketplace": [
        3079
      ]
    },
    "nodeType": "SourceUnit",
    "src": "51:1185:13",
    "nodes": [
      {
        "id": 3015,
        "nodeType": "PragmaDirective",
        "src": "51:23:13",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 3079,
        "nodeType": "ContractDefinition",
        "src": "76:1159:13",
        "nodes": [
          {
            "id": 3020,
            "nodeType": "VariableDeclaration",
            "src": "177:41:13",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 3016,
              "nodeType": "StructuredDocumentation",
              "src": "110:62:13",
              "text": "@dev Maintain a mapping of Fake TokenID to Owner addresses"
            },
            "functionSelector": "4f64b2be",
            "mutability": "mutable",
            "name": "tokens",
            "nameLocation": "212:6:13",
            "scope": 3079,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 3019,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3017,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "185:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "177:27:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3018,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "196:7:13",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 3024,
            "nodeType": "VariableDeclaration",
            "src": "279:28:13",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 3021,
              "nodeType": "StructuredDocumentation",
              "src": "225:49:13",
              "text": "@dev Set the purchase price for each Fake NFT"
            },
            "mutability": "mutable",
            "name": "nftPrice",
            "nameLocation": "287:8:13",
            "scope": 3079,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3022,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "279:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e31",
              "id": 3023,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "298:9:13",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.1"
            },
            "visibility": "internal"
          },
          {
            "id": 3046,
            "nodeType": "FunctionDefinition",
            "src": "473:167:13",
            "nodes": [],
            "body": {
              "id": 3045,
              "nodeType": "Block",
              "src": "526:114:13",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3031,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "544:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "548:5:13",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "544:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3033,
                          "name": "nftPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3024,
                          "src": "557:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "544:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973204e465420636f73747320302e31206574686572",
                        "id": 3035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "567:26:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b96bf0c97db7fd4d4b32d315914de7cbb1c64f5a5c7ed519ca4a35c2e86e302e",
                          "typeString": "literal_string \"This NFT costs 0.1 ether\""
                        },
                        "value": "This NFT costs 0.1 ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b96bf0c97db7fd4d4b32d315914de7cbb1c64f5a5c7ed519ca4a35c2e86e302e",
                          "typeString": "literal_string \"This NFT costs 0.1 ether\""
                        }
                      ],
                      "id": 3030,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "536:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "536:58:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3037,
                  "nodeType": "ExpressionStatement",
                  "src": "536:58:13"
                },
                {
                  "expression": {
                    "id": 3043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3038,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3020,
                        "src": "604:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 3040,
                      "indexExpression": {
                        "id": 3039,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3027,
                        "src": "611:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "604:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3041,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "623:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "627:6:13",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "623:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "604:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3044,
                  "nodeType": "ExpressionStatement",
                  "src": "604:29:13"
                }
              ]
            },
            "documentation": {
              "id": 3025,
              "nodeType": "StructuredDocumentation",
              "src": "314:154:13",
              "text": "@dev purchase() accepts ETH and marks the owner of the given tokenId as the caller address\n @param _tokenId - the fake NFT token Id to purchase"
            },
            "functionSelector": "efef39a1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchase",
            "nameLocation": "482:8:13",
            "parameters": {
              "id": 3028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3027,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "499:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3046,
                  "src": "491:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "490:18:13"
            },
            "returnParameters": {
              "id": 3029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "526:0:13"
            },
            "scope": 3079,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3055,
            "nodeType": "FunctionDefinition",
            "src": "699:84:13",
            "nodes": [],
            "body": {
              "id": 3054,
              "nodeType": "Block",
              "src": "751:32:13",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 3052,
                    "name": "nftPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3024,
                    "src": "768:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3051,
                  "id": 3053,
                  "nodeType": "Return",
                  "src": "761:15:13"
                }
              ]
            },
            "documentation": {
              "id": 3047,
              "nodeType": "StructuredDocumentation",
              "src": "646:48:13",
              "text": "@dev getPrice() returns the price of one NFT"
            },
            "functionSelector": "98d5fdca",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "708:8:13",
            "parameters": {
              "id": 3048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "716:2:13"
            },
            "returnParameters": {
              "id": 3051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3050,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3055,
                  "src": "742:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "742:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "741:9:13"
            },
            "scope": 3079,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3078,
            "nodeType": "FunctionDefinition",
            "src": "927:306:13",
            "nodes": [],
            "body": {
              "id": 3077,
              "nodeType": "Block",
              "src": "993:240:13",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3063,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3020,
                        "src": "1137:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 3065,
                      "indexExpression": {
                        "id": 3064,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3058,
                        "src": "1144:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1137:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 3068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1165:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 3067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1157:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3066,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1157:7:13",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1157:10:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1137:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3074,
                  "nodeType": "IfStatement",
                  "src": "1133:72:13",
                  "trueBody": {
                    "id": 3073,
                    "nodeType": "Block",
                    "src": "1169:36:13",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 3071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1190:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 3062,
                        "id": 3072,
                        "nodeType": "Return",
                        "src": "1183:11:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 3075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1221:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 3062,
                  "id": 3076,
                  "nodeType": "Return",
                  "src": "1214:12:13"
                }
              ]
            },
            "documentation": {
              "id": 3056,
              "nodeType": "StructuredDocumentation",
              "src": "789:133:13",
              "text": "@dev available() checks whether the given tokenId has already been sold or not\n @param _tokenId - the tokenId to check for"
            },
            "functionSelector": "96e494e8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "available",
            "nameLocation": "936:9:13",
            "parameters": {
              "id": 3059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3058,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "954:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3078,
                  "src": "946:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "946:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "945:18:13"
            },
            "returnParameters": {
              "id": 3062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3061,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3078,
                  "src": "987:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3060,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "986:6:13"
            },
            "scope": 3079,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "FakeNFTMarketplace",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3079
        ],
        "name": "FakeNFTMarketplace",
        "nameLocation": "85:18:13",
        "scope": 3080,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "SEE LICENSE IN LICENSE"
  },
  "id": 13
}