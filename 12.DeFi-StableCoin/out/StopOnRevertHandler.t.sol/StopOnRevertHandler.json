{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract DSCEngine",
          "name": "_dscEngine",
          "type": "address"
        },
        {
          "internalType": "contract DecentralizedStableCoin",
          "name": "_dsc",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_DEPOSIT_SIZE",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "btcUsdPriceFeed",
      "outputs": [
        {
          "internalType": "contract MockV3Aggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountDsc",
          "type": "uint256"
        }
      ],
      "name": "burnDsc",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dsc",
      "outputs": [
        {
          "internalType": "contract DecentralizedStableCoin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dscEngine",
      "outputs": [
        {
          "internalType": "contract DSCEngine",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethUsdPriceFeed",
      "outputs": [
        {
          "internalType": "contract MockV3Aggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "collateralSeed",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userToBeLiquidated",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "debtToCover",
          "type": "uint256"
        }
      ],
      "name": "liquidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "collateralSeed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountCollateral",
          "type": "uint256"
        }
      ],
      "name": "mintAndDepositCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "collateralSeed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountCollateral",
          "type": "uint256"
        }
      ],
      "name": "redeemCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountDsc",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferDsc",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint96",
          "name": "newPrice",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "collateralSeed",
          "type": "uint256"
        }
      ],
      "name": "updateCollateralPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wbtc",
      "outputs": [
        {
          "internalType": "contract ERC20Mock",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "contract ERC20Mock",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff1991821681179092556004805490911690911790553480156200002e57600080fd5b5060405162001c5438038062001c5483398101604081905262000051916200029f565b601b80546001600160a01b038085166001600160a01b03199283168117909355601c8054918516919092161790556040805163b58eb63f60e01b815290516000929163b58eb63f91600480830192869291908290030181865afa158015620000bd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000e7919081019062000306565b905080600081518110620000ff57620000ff620003d8565b6020026020010151601f60006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080600181518110620001435762000143620003d8565b60209081029190910181015181546001600160a01b0319166001600160a01b0391821617909155601b54601f54604051630e0456ed60e11b81529083166004820152911690631c08adda90602401602060405180830381865afa158015620001af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001d59190620003ee565b601d80546001600160a01b0319166001600160a01b03928316179055601b54602054604051630e0456ed60e11b81529083166004820152911690631c08adda90602401602060405180830381865afa15801562000236573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200025c9190620003ee565b601e80546001600160a01b0319166001600160a01b03929092169190911790555062000415915050565b6001600160a01b03811681146200029c57600080fd5b50565b60008060408385031215620002b357600080fd5b8251620002c08162000286565b6020840151909250620002d38162000286565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b8051620003018162000286565b919050565b600060208083850312156200031a57600080fd5b82516001600160401b03808211156200033257600080fd5b818501915085601f8301126200034757600080fd5b8151818111156200035c576200035c620002de565b8060051b604051601f19603f83011681018181108582111715620003845762000384620002de565b604052918252848201925083810185019188831115620003a357600080fd5b938501935b82851015620003cc57620003bc85620002f4565b84529385019392850192620003a8565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156200040157600080fd5b81516200040e8162000286565b9392505050565b61182f80620004256000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806379bd1eac116100c3578063ba414fa61161007c578063ba414fa6146102a5578063e20c9f71146102bd578063e8e527dc146102c5578063f6876608146102d8578063fa7626d4146102eb578063fbd0a1ee146102f857600080fd5b806379bd1eac1461024757806385226c811461025a5780638978a4c61461026f5780638d404e8214610282578063916a17c614610295578063b5508aa91461029d57600080fd5b80633fc8cef3116101155780633fc8cef3146101c057806342f6fb29146101d357806348c0ee2d146101e657806366d9a9a01461020c5780636f63eb5f146102215780637688232f1461023457600080fd5b806304d45c4f146101525780631ed7831c146101675780633cdc5389146101855780633e5e3c23146101b05780633f7286f4146101b8575b600080fd5b6101656101603660046113ef565b61030b565b005b61016f61041a565b60405161017c9190611411565b60405180910390f35b602054610198906001600160a01b031681565b6040516001600160a01b03909116815260200161017c565b61016f61047c565b61016f6104dc565b601f54610198906001600160a01b031681565b601d54610198906001600160a01b031681565b6101f46001600160601b0381565b6040516001600160601b03909116815260200161017c565b61021461053c565b60405161017c919061145e565b61016561022f3660046113ef565b61062b565b610165610242366004611529565b61086b565b610165610255366004611559565b6109d9565b610262610b63565b60405161017c91906115e1565b601c54610198906001600160a01b031681565b601e54610198906001600160a01b031681565b610214610c33565b610262610d19565b6102ad610de9565b604051901515815260200161017c565b61016f610f14565b601b54610198906001600160a01b031681565b6101656102e6366004611643565b610f74565b6000546102ad9060ff1681565b61016561030636600461165c565b611019565b600061031683611106565b601b546040516331e92b8360e01b81523360048201526001600160a01b038084166024830152929350600092909116906331e92b8390604401602060405180830381865afa15801561036c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103909190611694565b905061039e8360008361113c565b9250826000036103ae5750505050565b601b54604051639acd81b360e01b81526001600160a01b0384811660048301526024820186905290911690639acd81b390604401600060405180830381600087803b1580156103fc57600080fd5b505af1158015610410573d6000803e3d6000fd5b5050505050505050565b6060600d80548060200260200160405190810160405280929190818152602001828054801561047257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610454575b5050505050905090565b6060600f805480602002602001604051908101604052809291908181526020018280548015610472576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610454575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610472576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610454575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156106225760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561060a57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116105cc5790505b50505050508152505081526020019060010190610560565b50505050905090565b61063e8160016001600160601b0361113c565b9050600061064b83611106565b6040516303223eab60e11b8152336004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b15801561069a57600080fd5b505af11580156106ae573d6000803e3d6000fd5b50506040516340c10f1960e01b8152336004820152602481018590526001600160a01b03841692506340c10f199150604401600060405180830381600087803b1580156106fa57600080fd5b505af115801561070e573d6000803e3d6000fd5b5050601b5460405163095ea7b360e01b81526001600160a01b03918216600482015260248101869052908416925063095ea7b391506044016020604051808303816000875af1158015610765573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078991906116ad565b50601b5460405163297576c360e21b81526001600160a01b038381166004830152602482018590529091169063a5d5db0c90604401600060405180830381600087803b1580156107d857600080fd5b505af11580156107ec573d6000803e3d6000fd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561084e57600080fd5b505af1158015610862573d6000803e3d6000fd5b50505050505050565b6001600160a01b03811661087d575060015b601c546040516370a0823160e01b81523360048201526108f69184916000916001600160a01b0316906370a08231906024015b602060405180830381865afa1580156108cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f19190611694565b61113c565b60405163ca669fa760e01b8152336004820152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561094557600080fd5b505af1158015610959573d6000803e3d6000fd5b5050601c5460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201879052909116925063a9059cbb91506044016020604051808303816000875af11580156109b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d491906116ad565b505050565b601b54604080516311835cd960e31b815290516000926001600160a01b031691638c1ae6c89160048083019260209291908290030181865afa158015610a23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a479190611694565b601b54604051633f9af35f60e21b81526001600160a01b0386811660048301529293506000929091169063fe6bcd7c90602401602060405180830381865afa158015610a97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abb9190611694565b9050818110610acb575050505050565b610ade8360016001600160601b0361113c565b92506000610aeb86611106565b601b546040516326c0130360e01b81526001600160a01b0380841660048301528881166024830152604482018890529293509116906326c0130390606401600060405180830381600087803b158015610b4357600080fd5b505af1158015610b57573d6000803e3d6000fd5b50505050505050505050565b60606011805480602002602001604051908101604052809291908181526020016000905b82821015610622578382906000526020600020018054610ba6906116cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd2906116cf565b8015610c1f5780601f10610bf457610100808354040283529160200191610c1f565b820191906000526020600020905b815481529060010190602001808311610c0257829003601f168201915b505050505081526020019060010190610b87565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156106225760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610d0157602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610cc35790505b50505050508152505081526020019060010190610c57565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610622578382906000526020600020018054610d5c906116cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610d88906116cf565b8015610dd55780601f10610daa57610100808354040283529160200191610dd5565b820191906000526020600020905b815481529060010190602001808311610db857829003601f168201915b505050505081526020019060010190610d3d565b60008054610100900460ff1615610e095750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610f0f5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610e97917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611709565b60408051601f1981840301815290829052610eb19161173a565b6000604051808303816000865af19150503d8060008114610eee576040519150601f19603f3d011682016040523d82523d6000602084013e610ef3565b606091505b5091505080806020019051810190610f0b91906116ad565b9150505b919050565b6060600c805480602002602001604051908101604052809291908181526020018280548015610472576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610454575050505050905090565b601c546040516370a0823160e01b8152336004820152610fab9183916000916001600160a01b0316906370a08231906024016108b0565b905080600003610fb85750565b601b54604051631ed0ecc160e31b8152600481018390526001600160a01b039091169063f687660890602401600060405180830381600087803b158015610ffe57600080fd5b505af1158015611012573d6000803e3d6000fd5b5050505050565b6001600160601b038216600061102e83611106565b601b54604051630e0456ed60e11b81526001600160a01b03808416600483015292935060009290911690631c08adda90602401602060405180830381865afa15801561107e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a29190611756565b60405163543d106760e11b8152600481018590529091506001600160a01b0382169063a87a20ce90602401600060405180830381600087803b1580156110e757600080fd5b505af11580156110fb573d6000803e3d6000fd5b505050505050505050565b6000611113600283611773565b60000361112b575050601f546001600160a01b031690565b50506020546001600160a01b031690565b6000611149848484611180565b90506111796040518060400160405280600c81526020016b109bdd5b990814995cdd5b1d60a21b81525082611348565b9392505050565b6000818311156111fc5760405162461bcd60e51b815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000606482015260840160405180910390fd5b82841015801561120c5750818411155b15611218575082611179565b600061122484846117ab565b61122f9060016117c4565b90506003851115801561124157508481115b156112585761125085856117c4565b915050611179565b61126560036000196117ab565b851015801561127e575061127b856000196117ab565b81115b156112995761128f856000196117ab565b61125090846117ab565b828511156112ef5760006112ad84876117ab565b905060006112bb8383611773565b9050806000036112d057849350505050611179565b60016112dc82886117c4565b6112e691906117ab565b93505050611340565b8385101561134057600061130386866117ab565b905060006113118383611773565b90508060000361132657859350505050611179565b61133081866117ab565b61133b9060016117c4565b935050505b509392505050565b60006a636f6e736f6c652e6c6f676001600160a01b031683836040516024016113729291906117d7565b60408051601f198184030181529181526020820180516001600160e01b0316632d839cb360e21b179052516113a7919061173a565b600060405180830381855afa9150503d80600081146113e2576040519150601f19603f3d011682016040523d82523d6000602084013e6113e7565b606091505b505050505050565b6000806040838503121561140257600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156114525783516001600160a01b03168352928401929184019160010161142d565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561150257898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156114ed5783516001600160e01b0319168252928b019260019290920191908b01906114c3565b50978a01979550505091870191600101611486565b50919998505050505050505050565b6001600160a01b038116811461152657600080fd5b50565b6000806040838503121561153c57600080fd5b82359150602083013561154e81611511565b809150509250929050565b60008060006060848603121561156e57600080fd5b83359250602084013561158081611511565b929592945050506040919091013590565b60005b838110156115ac578181015183820152602001611594565b50506000910152565b600081518084526115cd816020860160208601611591565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561163657603f198886030184526116248583516115b5565b94509285019290850190600101611608565b5092979650505050505050565b60006020828403121561165557600080fd5b5035919050565b6000806040838503121561166f57600080fd5b82356001600160601b038116811461168657600080fd5b946020939093013593505050565b6000602082840312156116a657600080fd5b5051919050565b6000602082840312156116bf57600080fd5b8151801515811461117957600080fd5b600181811c908216806116e357607f821691505b60208210810361170357634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b031983168152815160009061172c816004850160208701611591565b919091016004019392505050565b6000825161174c818460208701611591565b9190910192915050565b60006020828403121561176857600080fd5b815161117981611511565b60008261179057634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b818103818111156117be576117be611795565b92915050565b808201808211156117be576117be611795565b6040815260006117ea60408301856115b5565b9050826020830152939250505056fea26469706673582212202d45d6894a88952c6bf1b0f0b56985a33286734777cdc45f1cd9964db2c7413e64736f6c63430008140033",
    "sourceMap": "616:3843:35:-:0;;;1572:26:1;;;1594:4;-1:-1:-1;;1572:26:1;;;;;;;;3161:44:5;;;;;;;;;;;1029:461:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1097:9;:22;;-1:-1:-1;;;;;1097:22:35;;;-1:-1:-1;;;;;;1097:22:35;;;;;;;;1123:3;:10;;;;;;;;;;;;1174:31;;;-1:-1:-1;;;1174:31:35;;;;1097:9;;:22;1174:29;;:31;;;;;1097:9;;1174:31;;;;;;;1097:22;1174:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1174:31:35;;;;;;;;;;;;:::i;:::-;1138:67;;1226:16;1243:1;1226:19;;;;;;;;:::i;:::-;;;;;;;1209:4;;:37;;;;;-1:-1:-1;;;;;1209:37:35;;;;;-1:-1:-1;;;;;1209:37:35;;;;;;1267:16;1284:1;1267:19;;;;;;;;:::i;:::-;;;;;;;;;;;;1250:37;;-1:-1:-1;;;;;;1250:37:35;-1:-1:-1;;;;;1250:37:35;;;;;;;1331:9;;1377:4;;1331:52;;-1:-1:-1;;;1331:52:35;;1377:4;;;1331:52;;;2323:51:45;1331:9:35;;;:37;;2296:18:45;;1331:52:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1292:15;:95;;-1:-1:-1;;;;;;1292:95:35;-1:-1:-1;;;;;1292:95:35;;;;;;1430:9;;1476:4;;1430:52;;-1:-1:-1;;;1430:52:35;;1476:4;;;1430:52;;;2323:51:45;1430:9:35;;;:37;;2296:18:45;;1430:52:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1391:15;:95;;-1:-1:-1;;;;;;1391:95:35;-1:-1:-1;;;;;1391:95:35;;;;;;;;;;-1:-1:-1;616:3843:35;;-1:-1:-1;;616:3843:35;14:142:45;-1:-1:-1;;;;;100:31:45;;90:42;;80:70;;146:1;143;136:12;80:70;14:142;:::o;161:459::-;292:6;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;401:9;395:16;420:42;456:5;420:42;:::i;:::-;531:2;516:18;;510:25;481:5;;-1:-1:-1;544:44:45;510:25;544:44;:::i;:::-;607:7;597:17;;;161:459;;;;;:::o;625:127::-;686:10;681:3;677:20;674:1;667:31;717:4;714:1;707:15;741:4;738:1;731:15;757:149;836:13;;858:42;836:13;858:42;:::i;:::-;757:149;;;:::o;911:1129::-;1006:6;1037:2;1080;1068:9;1059:7;1055:23;1051:32;1048:52;;;1096:1;1093;1086:12;1048:52;1123:16;;-1:-1:-1;;;;;1188:14:45;;;1185:34;;;1215:1;1212;1205:12;1185:34;1253:6;1242:9;1238:22;1228:32;;1298:7;1291:4;1287:2;1283:13;1279:27;1269:55;;1320:1;1317;1310:12;1269:55;1349:2;1343:9;1371:2;1367;1364:10;1361:36;;;1377:18;;:::i;:::-;1423:2;1420:1;1416:10;1455:2;1449:9;1518:2;1514:7;1509:2;1505;1501:11;1497:25;1489:6;1485:38;1573:6;1561:10;1558:22;1553:2;1541:10;1538:18;1535:46;1532:72;;;1584:18;;:::i;:::-;1620:2;1613:22;1670:18;;;1704:15;;;;-1:-1:-1;1746:11:45;;;1742:20;;;1774:19;;;1771:39;;;1806:1;1803;1796:12;1771:39;1830:11;;;;1850:159;1866:6;1861:3;1858:15;1850:159;;;1932:34;1962:3;1932:34;:::i;:::-;1920:47;;1883:12;;;;1987;;;;1850:159;;;2028:6;911:1129;-1:-1:-1;;;;;;;;911:1129:45:o;2045:127::-;2106:10;2101:3;2097:20;2094:1;2087:31;2137:4;2134:1;2127:15;2161:4;2158:1;2151:15;2385:262;2455:6;2508:2;2496:9;2487:7;2483:23;2479:32;2476:52;;;2524:1;2521;2514:12;2476:52;2556:9;2550:16;2575:42;2611:5;2575:42;:::i;:::-;2636:5;2385:262;-1:-1:-1;;;2385:262:45:o;:::-;616:3843:35;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "616:3843:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2065:446;;;;;;:::i;:::-;;:::i;:::-;;2161:134:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;922:21:35;;;;;-1:-1:-1;;;;;922:21:35;;;;;;-1:-1:-1;;;;;1113:32:45;;;1095:51;;1083:2;1068:18;922:21:35;930:222:45;2930:133:8;;;:::i;2631:141::-;;;:::i;898:21:35:-;;;;;-1:-1:-1;;;;;898:21:35;;;814:39;;;;;-1:-1:-1;;;;;814:39:35;;;967:58;;-1:-1:-1;;;;;967:58:35;;;;;-1:-1:-1;;;;;1553:39:45;;;1535:58;;1523:2;1508:18;967:58:35;1391:208:45;2447:178:8;;;:::i;:::-;;;;;;;:::i;1576:486:35:-;;;;;;:::i;:::-;;:::i;3580:230::-;;;;;;:::i;:::-;;:::i;2948:536::-;;;;;;:::i;:::-;;:::i;2301:140:8:-;;;:::i;:::-;;;;;;;:::i;777:34:35:-;;;;;-1:-1:-1;;;;;777:34:35;;;856:39;;;;;-1:-1:-1;;;;;856:39:35;;;2778:146:8;;;:::i;1866:141::-;;;:::i;1819:584:1:-;;;:::i;:::-;;;5765:14:45;;5758:22;5740:41;;5728:2;5713:18;1819:584:1;5600:187:45;2013:142:8;;;:::i;748:26:35:-;;;;;-1:-1:-1;;;;;748:26:35;;;2514:207;;;;;;:::i;:::-;;:::i;1572:26:1:-;;;;;;;;;3893:361:35;;;;;;:::i;:::-;;:::i;2065:446::-;2159:20;2182:38;2205:14;2182:22;:38::i;:::-;2248:9;;:79;;-1:-1:-1;;;2248:79:35;;2289:10;2248:79;;;6781:34:45;-1:-1:-1;;;;;6851:15:45;;;6831:18;;;6824:43;2159:61:35;;-1:-1:-1;2224:21:35;;2248:9;;;;:36;;6716:18:45;;2248:79:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2224:103;;2351:41;2357:16;2375:1;2378:13;2351:5;:41::i;:::-;2332:60;;2400:16;2420:1;2400:21;2396:43;;2428:7;;2065:446;;:::o;2396:43::-;2442:9;;:65;;-1:-1:-1;;;2442:65:35;;-1:-1:-1;;;;;7259:32:45;;;2442:65:35;;;7241:51:45;7308:18;;;7301:34;;;2442:9:35;;;;:26;;7214:18:45;;2442:65:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2155:356;;2065:446;;:::o;2161:134:8:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:8;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:8;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:8;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;1576:486:35:-;1722:44;1728:16;1746:1;-1:-1:-1;;;;;1722:5:35;:44::i;:::-;1703:63;;1770:20;1793:38;1816:14;1793:22;:38::i;:::-;1836:25;;-1:-1:-1;;;1836:25:35;;1850:10;1836:25;;;1095:51:45;1770:61:35;;-1:-1:-1;1836:13:35;;;;1068:18:45;;1836:25:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1865:45:35;;-1:-1:-1;;;1865:45:35;;1881:10;1865:45;;;7241:51:45;7308:18;;;7301:34;;;-1:-1:-1;;;;;1865:15:35;;;-1:-1:-1;1865:15:35;;-1:-1:-1;7214:18:45;;1865:45:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1941:9:35;;1914:56;;-1:-1:-1;;;1914:56:35;;-1:-1:-1;;;;;1941:9:35;;;1914:56;;;7241:51:45;7308:18;;;7301:34;;;1914:18:35;;;;-1:-1:-1;1914:18:35;;-1:-1:-1;7214:18:45;;1914:56:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1974:9:35;;:66;;-1:-1:-1;;;1974:66:35;;-1:-1:-1;;;;;7259:32:45;;;1974:66:35;;;7241:51:45;7308:18;;;7301:34;;;1974:9:35;;;;:27;;7214:18:45;;1974:66:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:28:2;309:37;;-1:-1:-1;;;;;2044:12:35;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1674:388;1576:486;;:::o;3580:230::-;-1:-1:-1;;;;;3647:16:35;;3643:47;;-1:-1:-1;3683:1:35;3643:47;3725:3;;:25;;-1:-1:-1;;;3725:25:35;;3739:10;3725:25;;;1095:51:45;3705:46:35;;3711:9;;3722:1;;-1:-1:-1;;;;;3725:3:35;;:13;;1068:18:45;;3725:25:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3705:5;:46::i;:::-;3755:20;;-1:-1:-1;;;3755:20:35;;3764:10;3755:20;;;1095:51:45;3693:58:35;;-1:-1:-1;3755:8:35;;;;1068:18:45;;3755:20:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3779:3:35;;:27;;-1:-1:-1;;;3779:27:35;;-1:-1:-1;;;;;7259:32:45;;;3779:27:35;;;7241:51:45;7308:18;;;7301:34;;;3779:3:35;;;;-1:-1:-1;3779:12:35;;-1:-1:-1;7214:18:45;;3779:27:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3580:230;;:::o;2948:536::-;3086:9;;:30;;;-1:-1:-1;;;3086:30:35;;;;3060:23;;-1:-1:-1;;;;;3086:9:35;;:28;;:30;;;;;;;;;;;;;;:9;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3147:9;;:52;;-1:-1:-1;;;3147:52:35;;-1:-1:-1;;;;;1113:32:45;;;3147:52:35;;;1095:51:45;3060:56:35;;-1:-1:-1;3120:24:35;;3147:9;;;;:25;;1068:18:45;;3147:52:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3120:79;;3227:15;3207:16;:35;3203:57;;3249:7;;2948:536;;;:::o;3203:57::-;3277:48;3283:11;3296:1;-1:-1:-1;;;;;3277:5:35;:48::i;:::-;3263:62;;3329:20;3352:38;3375:14;3352:22;:38::i;:::-;3394:9;;:86;;-1:-1:-1;;;3394:86:35;;-1:-1:-1;;;;;8094:15:45;;;3394:86:35;;;8076:34:45;8146:15;;;8126:18;;;8119:43;8178:18;;;8171:34;;;3329:61:35;;-1:-1:-1;3394:9:35;;;:19;;8011:18:45;;3394:86:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3056:428;;;2948:536;;;:::o;2301:140:8:-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:1;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:1;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;7241:51:45;;;-1:-1:-1;;;7308:18:45;;;7301:34;2196:43:1;;;;;;;;;7214:18:45;;;2196:43:1;;;-1:-1:-1;;1671:64:1;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:1;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:1:o;2013:142:8:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:8;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;2514:207:35:-;2620:3;;:25;;-1:-1:-1;;;2620:25:35;;2634:10;2620:25;;;1095:51:45;2600:46:35;;2606:9;;2617:1;;-1:-1:-1;;;;;2620:3:35;;:13;;1068:18:45;;2620:25:35;930:222:45;2600:46:35;2588:58;;2654:9;2667:1;2654:14;2650:36;;2514:207;:::o;2650:36::-;2689:9;;:28;;-1:-1:-1;;;2689:28:35;;;;;9707:25:45;;;-1:-1:-1;;;;;2689:9:35;;;;:17;;9680:18:45;;2689:28:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2514:207;:::o;3893:361::-;-1:-1:-1;;;;;4011:17:35;;3983:18;4056:38;4079:14;4056:22;:38::i;:::-;4148:9;;:58;;-1:-1:-1;;;4148:58:35;;-1:-1:-1;;;;;1113:32:45;;;4148:58:35;;;1095:51:45;4033:61:35;;-1:-1:-1;4098:26:35;;4148:9;;;;:37;;1068:18:45;;4148:58:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4215:35;;-1:-1:-1;;;4215:35:35;;;;;9707:25:45;;;4098:112:35;;-1:-1:-1;;;;;;4215:22:35;;;;;9680:18:45;;4215:35:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3979:275;;;3893:361;;:::o;4279:178::-;4362:9;4381:18;4398:1;4381:14;:18;:::i;:::-;4403:1;4381:23;4377:77;;-1:-1:-1;;4418:4:35;;-1:-1:-1;;;;;4418:4:35;;4279:178::o;4377:77::-;-1:-1:-1;;4445:4:35;;-1:-1:-1;;;;;4445:4:35;;4279:178::o;2815:190:13:-;2898:14;2933:19;2940:1;2943:3;2948;2933:6;:19::i;:::-;2924:28;;2962:36;;;;;;;;;;;;;;-1:-1:-1;;;2962:36:13;;;2991:6;2962:12;:36::i;:::-;2815:190;;;;;:::o;1546:1263::-;1630:14;1671:3;1664;:10;;1656:85;;;;-1:-1:-1;;;1656:85:13;;10595:2:45;1656:85:13;;;10577:21:45;10634:2;10614:18;;;10607:30;10673:34;10653:18;;;10646:62;10744:32;10724:18;;;10717:60;10794:19;;1656:85:13;;;;;;;;1975:3;1970:1;:8;;:20;;;;;1987:3;1982:1;:8;;1970:20;1966:34;;;-1:-1:-1;1999:1:13;1992:8;;1966:34;2011:12;2026:9;2032:3;2026;:9;:::i;:::-;:13;;2038:1;2026:13;:::i;:::-;2011:28;;2234:1;2229;:6;;:18;;;;;2246:1;2239:4;:8;2229:18;2225:38;;;2256:7;2262:1;2256:3;:7;:::i;:::-;2249:14;;;;;2225:38;2282:15;2296:1;-1:-1:-1;;2282:15:13;:::i;:::-;2277:1;:20;;:46;;;;-1:-1:-1;2308:15:13;2322:1;-1:-1:-1;;2308:15:13;:::i;:::-;2301:4;:22;2277:46;2273:82;;;2339:15;2353:1;-1:-1:-1;;2339:15:13;:::i;:::-;2332:23;;:3;:23;:::i;2273:82::-;2459:3;2455:1;:7;2451:352;;;2478:12;2493:7;2497:3;2493:1;:7;:::i;:::-;2478:22;-1:-1:-1;2514:11:13;2528;2535:4;2478:22;2528:11;:::i;:::-;2514:25;;2557:3;2564:1;2557:8;2553:24;;2574:3;2567:10;;;;;;;2553:24;2612:1;2600:9;2606:3;2600;:9;:::i;:::-;:13;;;;:::i;:::-;2591:22;;2464:160;;2451:352;;;2638:3;2634:1;:7;2630:173;;;2657:12;2672:7;2678:1;2672:3;:7;:::i;:::-;2657:22;-1:-1:-1;2693:11:13;2707;2714:4;2657:22;2707:11;:::i;:::-;2693:25;;2736:3;2743:1;2736:8;2732:24;;2753:3;2746:10;;;;;;;2732:24;2779:9;2785:3;2779;:9;:::i;:::-;:13;;2791:1;2779:13;:::i;:::-;2770:22;;2643:160;;2630:173;1646:1163;1546:1263;;;;;:::o;10096:207::-;10172:11;679:42;-1:-1:-1;;;;;10188:36:13;10272:2;10276;10225:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10225:54:13;;;;;;;;;;;;;;-1:-1:-1;;;;;10225:54:13;-1:-1:-1;;;10225:54:13;;;10188:92;;;10225:54;10188:92;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;10096:207:13:o;14:248:45:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:45;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:45:o;267:658::-;438:2;490:21;;;560:13;;463:18;;;582:22;;;409:4;;438:2;661:15;;;;635:2;620:18;;;409:4;704:195;718:6;715:1;712:13;704:195;;;783:13;;-1:-1:-1;;;;;779:39:45;767:52;;874:15;;;;839:12;;;;815:1;733:9;704:195;;;-1:-1:-1;916:3:45;;267:658;-1:-1:-1;;;;;;267:658:45:o;1604:1567::-;1806:4;1835:2;1875;1864:9;1860:18;1905:2;1894:9;1887:21;1928:6;1963;1957:13;1994:6;1986;1979:22;2020:2;2010:12;;2053:2;2042:9;2038:18;2031:25;;2115:2;2105:6;2102:1;2098:14;2087:9;2083:30;2079:39;2153:2;2145:6;2141:15;2174:1;2195;2205:937;2221:6;2216:3;2213:15;2205:937;;;2290:22;;;-1:-1:-1;;2286:36:45;2274:49;;2346:13;;2433:9;;-1:-1:-1;;;;;2429:35:45;2414:51;;2504:11;;2498:18;2536:15;;;2529:27;;;2617:19;;2386:15;;;2649:24;;;2739:21;;;;2784:1;;2707:2;2695:15;;;2798:236;2814:8;2809:3;2806:17;2798:236;;;2895:15;;-1:-1:-1;;;;;;2891:42:45;2877:57;;3003:17;;;;2842:1;2833:11;;;;;2960:14;;;;2798:236;;;-1:-1:-1;3120:12:45;;;;3057:5;-1:-1:-1;;;3085:15:45;;;;2247:1;2238:11;2205:937;;;-1:-1:-1;3159:6:45;;1604:1567;-1:-1:-1;;;;;;;;;1604:1567:45:o;3176:131::-;-1:-1:-1;;;;;3251:31:45;;3241:42;;3231:70;;3297:1;3294;3287:12;3231:70;3176:131;:::o;3312:315::-;3380:6;3388;3441:2;3429:9;3420:7;3416:23;3412:32;3409:52;;;3457:1;3454;3447:12;3409:52;3493:9;3480:23;3470:33;;3553:2;3542:9;3538:18;3525:32;3566:31;3591:5;3566:31;:::i;:::-;3616:5;3606:15;;;3312:315;;;;;:::o;3632:383::-;3709:6;3717;3725;3778:2;3766:9;3757:7;3753:23;3749:32;3746:52;;;3794:1;3791;3784:12;3746:52;3830:9;3817:23;3807:33;;3890:2;3879:9;3875:18;3862:32;3903:31;3928:5;3903:31;:::i;:::-;3632:383;;3953:5;;-1:-1:-1;;;4005:2:45;3990:18;;;;3977:32;;3632:383::o;4020:250::-;4105:1;4115:113;4129:6;4126:1;4123:13;4115:113;;;4205:11;;;4199:18;4186:11;;;4179:39;4151:2;4144:10;4115:113;;;-1:-1:-1;;4262:1:45;4244:16;;4237:27;4020:250::o;4275:271::-;4317:3;4355:5;4349:12;4382:6;4377:3;4370:19;4398:76;4467:6;4460:4;4455:3;4451:14;4444:4;4437:5;4433:16;4398:76;:::i;:::-;4528:2;4507:15;-1:-1:-1;;4503:29:45;4494:39;;;;4535:4;4490:50;;4275:271;-1:-1:-1;;4275:271:45:o;4551:803::-;4713:4;4742:2;4782;4771:9;4767:18;4812:2;4801:9;4794:21;4835:6;4870;4864:13;4901:6;4893;4886:22;4939:2;4928:9;4924:18;4917:25;;5001:2;4991:6;4988:1;4984:14;4973:9;4969:30;4965:39;4951:53;;5039:2;5031:6;5027:15;5060:1;5070:255;5084:6;5081:1;5078:13;5070:255;;;5177:2;5173:7;5161:9;5153:6;5149:22;5145:36;5140:3;5133:49;5205:40;5238:6;5229;5223:13;5205:40;:::i;:::-;5195:50;-1:-1:-1;5303:12:45;;;;5268:15;;;;5106:1;5099:9;5070:255;;;-1:-1:-1;5342:6:45;;4551:803;-1:-1:-1;;;;;;;4551:803:45:o;6019:180::-;6078:6;6131:2;6119:9;6110:7;6106:23;6102:32;6099:52;;;6147:1;6144;6137:12;6099:52;-1:-1:-1;6170:23:45;;6019:180;-1:-1:-1;6019:180:45:o;6204:360::-;6271:6;6279;6332:2;6320:9;6311:7;6307:23;6303:32;6300:52;;;6348:1;6345;6338:12;6300:52;6387:9;6374:23;-1:-1:-1;;;;;6430:5:45;6426:38;6419:5;6416:49;6406:77;;6479:1;6476;6469:12;6406:77;6502:5;6554:2;6539:18;;;;6526:32;;-1:-1:-1;;;6204:360:45:o;6878:184::-;6948:6;7001:2;6989:9;6980:7;6976:23;6972:32;6969:52;;;7017:1;7014;7007:12;6969:52;-1:-1:-1;7040:16:45;;6878:184;-1:-1:-1;6878:184:45:o;7554:277::-;7621:6;7674:2;7662:9;7653:7;7649:23;7645:32;7642:52;;;7690:1;7687;7680:12;7642:52;7722:9;7716:16;7775:5;7768:13;7761:21;7754:5;7751:32;7741:60;;7797:1;7794;7787:12;8216:380;8295:1;8291:12;;;;8338;;;8359:61;;8413:4;8405:6;8401:17;8391:27;;8359:61;8466:2;8458:6;8455:14;8435:18;8432:38;8429:161;;8512:10;8507:3;8503:20;8500:1;8493:31;8547:4;8544:1;8537:15;8575:4;8572:1;8565:15;8429:161;;8216:380;;;:::o;8880:384::-;-1:-1:-1;;;;;;9065:33:45;;9053:46;;9122:13;;9035:3;;9144:74;9122:13;9207:1;9198:11;;9191:4;9179:17;;9144:74;:::i;:::-;9238:16;;;;9256:1;9234:24;;8880:384;-1:-1:-1;;;8880:384:45:o;9269:287::-;9398:3;9436:6;9430:13;9452:66;9511:6;9506:3;9499:4;9491:6;9487:17;9452:66;:::i;:::-;9534:16;;;;;9269:287;-1:-1:-1;;9269:287:45:o;9743:251::-;9813:6;9866:2;9854:9;9845:7;9841:23;9837:32;9834:52;;;9882:1;9879;9872:12;9834:52;9914:9;9908:16;9933:31;9958:5;9933:31;:::i;10179:209::-;10211:1;10237;10227:132;;10281:10;10276:3;10272:20;10269:1;10262:31;10316:4;10313:1;10306:15;10344:4;10341:1;10334:15;10227:132;-1:-1:-1;10373:9:45;;10179:209::o;10824:127::-;10885:10;10880:3;10876:20;10873:1;10866:31;10916:4;10913:1;10906:15;10940:4;10937:1;10930:15;10956:128;11023:9;;;11044:11;;;11041:37;;;11058:18;;:::i;:::-;10956:128;;;;:::o;11089:125::-;11154:9;;;11175:10;;;11172:36;;;11188:18;;:::i;11219:291::-;11396:2;11385:9;11378:21;11359:4;11416:45;11457:2;11446:9;11442:18;11434:6;11416:45;:::i;:::-;11408:53;;11497:6;11492:2;11481:9;11477:18;11470:34;11219:291;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "MAX_DEPOSIT_SIZE()": "48c0ee2d",
    "btcUsdPriceFeed()": "8d404e82",
    "burnDsc(uint256)": "f6876608",
    "dsc()": "8978a4c6",
    "dscEngine()": "e8e527dc",
    "ethUsdPriceFeed()": "42f6fb29",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "liquidate(uint256,address,uint256)": "79bd1eac",
    "mintAndDepositCollateral(uint256,uint256)": "6f63eb5f",
    "redeemCollateral(uint256,uint256)": "04d45c4f",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "transferDsc(uint256,address)": "7688232f",
    "updateCollateralPrice(uint96,uint256)": "fbd0a1ee",
    "wbtc()": "3cdc5389",
    "weth()": "3fc8cef3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract DSCEngine\",\"name\":\"_dscEngine\",\"type\":\"address\"},{\"internalType\":\"contract DecentralizedStableCoin\",\"name\":\"_dsc\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_DEPOSIT_SIZE\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"btcUsdPriceFeed\",\"outputs\":[{\"internalType\":\"contract MockV3Aggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountDsc\",\"type\":\"uint256\"}],\"name\":\"burnDsc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dsc\",\"outputs\":[{\"internalType\":\"contract DecentralizedStableCoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dscEngine\",\"outputs\":[{\"internalType\":\"contract DSCEngine\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethUsdPriceFeed\",\"outputs\":[{\"internalType\":\"contract MockV3Aggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralSeed\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userToBeLiquidated\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralSeed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCollateral\",\"type\":\"uint256\"}],\"name\":\"mintAndDepositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralSeed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCollateral\",\"type\":\"uint256\"}],\"name\":\"redeemCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountDsc\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferDsc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"newPrice\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"collateralSeed\",\"type\":\"uint256\"}],\"name\":\"updateCollateralPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wbtc\",\"outputs\":[{\"internalType\":\"contract ERC20Mock\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract ERC20Mock\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/fuzz/failOnRevert/StopOnRevertHandler.t.sol\":\"StopOnRevertHandler\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5\",\"dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d\",\"dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2\",\"dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/mocks/ERC20Mock.sol\":{\"keccak256\":\"0xe9699faee2c27361e309a39856e3c79dc549095646d4747351d1491a9ab50490\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c35fcf64c2d71b0e865f5034bee84f79f2d29f0449578f69e59255220ad2ba27\",\"dweb:/ipfs/QmTayUzu1VQc6oAe195pqXrQ4GQ9WUg8a1eQ23eoo2mFby\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"src/DSCEngine.sol\":{\"keccak256\":\"0xd6e350825f5203667f2c5f0c0dfadc5459d30a023250c062f325f7bf0fb2da6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7922565614fddf43a5d953f5b1d967307b602c16ca9a0a28062661df4a738855\",\"dweb:/ipfs/QmPdsMJenShSoEaqrHEkWRG3ZsEaCa5Usuvxeu2Xop2Vnq\"]},\"src/DecentralizedStableCoin.sol\":{\"keccak256\":\"0x239f42b1ba0bf09f0888121845368ecf7744e0a1d519857fff14cc2d614499be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5c16a2da22e74a2adb037c7cd465f593ff8cf6b957232c5cdf4323380096ea4\",\"dweb:/ipfs/QmYsnBFpXPfFsD3fZCy2UJzMJkKfAf55xcgDUdN6TH1ACT\"]},\"src/libraries/OracleLib.sol\":{\"keccak256\":\"0xbd49744e8f632014affc6054e4773e4209a454769fa4255b7522fcf4e0c6c0df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2f7845a5640cbf3113d56c08a317a57f47221bb718ca3435aff028caf5c86ae\",\"dweb:/ipfs/QmNzCbDbwBpecVS1mEiPAoFb5ky4aUqWwHvF3k4QsxqqBZ\"]},\"test/fuzz/failOnRevert/StopOnRevertHandler.t.sol\":{\"keccak256\":\"0xe74ee0bfa551d3df82594fb745fa02ddd97106b89508fa869de4afa1280cba44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06da0ed03bbb81877f0e1f5da8f2b4e3a93941c94cee27e13737429b3e68de8e\",\"dweb:/ipfs/QmVKkj6MwfV8RiM4CWhKkBEU9z9pS9NsB7tjVroGWQjRWp\"]},\"test/mocks/MockV3Aggregator.sol\":{\"keccak256\":\"0xf5aeb38ff6e828fdf348fc48e1c224d4d40456a027ea8a8c73b387fd1c6fece8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c521efdee62df25368b477537d7b7481402a5b651fa37baaf4dcce7f0dca2d6a\",\"dweb:/ipfs/QmcPqKS4amddY7fjh3Wtw5zrNWUqEH7yS6MkdT9azcxss8\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract DSCEngine",
              "name": "_dscEngine",
              "type": "address"
            },
            {
              "internalType": "contract DecentralizedStableCoin",
              "name": "_dsc",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_DEPOSIT_SIZE",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "btcUsdPriceFeed",
          "outputs": [
            {
              "internalType": "contract MockV3Aggregator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountDsc",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnDsc"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dsc",
          "outputs": [
            {
              "internalType": "contract DecentralizedStableCoin",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dscEngine",
          "outputs": [
            {
              "internalType": "contract DSCEngine",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ethUsdPriceFeed",
          "outputs": [
            {
              "internalType": "contract MockV3Aggregator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "collateralSeed",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "userToBeLiquidated",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "debtToCover",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "liquidate"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "collateralSeed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountCollateral",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintAndDepositCollateral"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "collateralSeed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountCollateral",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeemCollateral"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountDsc",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferDsc"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "newPrice",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "collateralSeed",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCollateralPrice"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wbtc",
          "outputs": [
            {
              "internalType": "contract ERC20Mock",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "weth",
          "outputs": [
            {
              "internalType": "contract ERC20Mock",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":foundry-devops/=lib/foundry-devops/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/fuzz/failOnRevert/StopOnRevertHandler.t.sol": "StopOnRevertHandler"
      },
      "libraries": {}
    },
    "sources": {
      "lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
        "urls": [
          "bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
          "dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf",
        "urls": [
          "bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5",
          "dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86",
        "urls": [
          "bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d",
          "dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a",
        "urls": [
          "bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2",
          "dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/mocks/ERC20Mock.sol": {
        "keccak256": "0xe9699faee2c27361e309a39856e3c79dc549095646d4747351d1491a9ab50490",
        "urls": [
          "bzz-raw://c35fcf64c2d71b0e865f5034bee84f79f2d29f0449578f69e59255220ad2ba27",
          "dweb:/ipfs/QmTayUzu1VQc6oAe195pqXrQ4GQ9WUg8a1eQ23eoo2mFby"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc",
        "urls": [
          "bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010",
          "dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "keccak256": "0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b",
        "urls": [
          "bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f",
          "dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
        "urls": [
          "bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
          "dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
        ],
        "license": "MIT"
      },
      "src/DSCEngine.sol": {
        "keccak256": "0xd6e350825f5203667f2c5f0c0dfadc5459d30a023250c062f325f7bf0fb2da6c",
        "urls": [
          "bzz-raw://7922565614fddf43a5d953f5b1d967307b602c16ca9a0a28062661df4a738855",
          "dweb:/ipfs/QmPdsMJenShSoEaqrHEkWRG3ZsEaCa5Usuvxeu2Xop2Vnq"
        ],
        "license": "MIT"
      },
      "src/DecentralizedStableCoin.sol": {
        "keccak256": "0x239f42b1ba0bf09f0888121845368ecf7744e0a1d519857fff14cc2d614499be",
        "urls": [
          "bzz-raw://d5c16a2da22e74a2adb037c7cd465f593ff8cf6b957232c5cdf4323380096ea4",
          "dweb:/ipfs/QmYsnBFpXPfFsD3fZCy2UJzMJkKfAf55xcgDUdN6TH1ACT"
        ],
        "license": "MIT"
      },
      "src/libraries/OracleLib.sol": {
        "keccak256": "0xbd49744e8f632014affc6054e4773e4209a454769fa4255b7522fcf4e0c6c0df",
        "urls": [
          "bzz-raw://d2f7845a5640cbf3113d56c08a317a57f47221bb718ca3435aff028caf5c86ae",
          "dweb:/ipfs/QmNzCbDbwBpecVS1mEiPAoFb5ky4aUqWwHvF3k4QsxqqBZ"
        ],
        "license": "MIT"
      },
      "test/fuzz/failOnRevert/StopOnRevertHandler.t.sol": {
        "keccak256": "0xe74ee0bfa551d3df82594fb745fa02ddd97106b89508fa869de4afa1280cba44",
        "urls": [
          "bzz-raw://06da0ed03bbb81877f0e1f5da8f2b4e3a93941c94cee27e13737429b3e68de8e",
          "dweb:/ipfs/QmVKkj6MwfV8RiM4CWhKkBEU9z9pS9NsB7tjVroGWQjRWp"
        ],
        "license": "MIT"
      },
      "test/mocks/MockV3Aggregator.sol": {
        "keccak256": "0xf5aeb38ff6e828fdf348fc48e1c224d4d40456a027ea8a8c73b387fd1c6fece8",
        "urls": [
          "bzz-raw://c521efdee62df25368b477537d7b7481402a5b651fa37baaf4dcce7f0dca2d6a",
          "dweb:/ipfs/QmcPqKS4amddY7fjh3Wtw5zrNWUqEH7yS6MkdT9azcxss8"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/fuzz/failOnRevert/StopOnRevertHandler.t.sol",
    "id": 32871,
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "DSCEngine": [
        32240
      ],
      "DecentralizedStableCoin": [
        32342
      ],
      "ERC20Mock": [
        29610
      ],
      "EnumerableSet": [
        31033
      ],
      "MockV3Aggregator": [
        33703
      ],
      "StopOnRevertHandler": [
        32870
      ],
      "Test": [
        11554
      ],
      "console": [
        21124
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:4427:35",
    "nodes": [
      {
        "id": 32433,
        "nodeType": "PragmaDirective",
        "src": "33:24:35",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 32435,
        "nodeType": "ImportDirective",
        "src": "59:88:35",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32871,
        "sourceUnit": 31034,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32434,
              "name": "EnumerableSet",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31033,
              "src": "68:13:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32437,
        "nodeType": "ImportDirective",
        "src": "148:42:35",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32871,
        "sourceUnit": 11555,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32436,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11554,
              "src": "157:4:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32439,
        "nodeType": "ImportDirective",
        "src": "191:72:35",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/mocks/ERC20Mock.sol",
        "file": "@openzeppelin/contracts/mocks/ERC20Mock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32871,
        "sourceUnit": 29611,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32438,
              "name": "ERC20Mock",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29610,
              "src": "200:9:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32441,
        "nodeType": "ImportDirective",
        "src": "265:68:35",
        "nodes": [],
        "absolutePath": "test/mocks/MockV3Aggregator.sol",
        "file": "../../mocks/MockV3Aggregator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32871,
        "sourceUnit": 33704,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32440,
              "name": "MockV3Aggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33703,
              "src": "274:16:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32444,
        "nodeType": "ImportDirective",
        "src": "334:78:35",
        "nodes": [],
        "absolutePath": "src/DSCEngine.sol",
        "file": "../../../src/DSCEngine.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32871,
        "sourceUnit": 32241,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32442,
              "name": "DSCEngine",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32240,
              "src": "343:9:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 32443,
              "name": "AggregatorV3Interface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45,
              "src": "354:21:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32446,
        "nodeType": "ImportDirective",
        "src": "413:83:35",
        "nodes": [],
        "absolutePath": "src/DecentralizedStableCoin.sol",
        "file": "../../../src/DecentralizedStableCoin.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32871,
        "sourceUnit": 32343,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32445,
              "name": "DecentralizedStableCoin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32342,
              "src": "422:23:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32448,
        "nodeType": "ImportDirective",
        "src": "497:68:35",
        "nodes": [],
        "absolutePath": "test/mocks/MockV3Aggregator.sol",
        "file": "../../mocks/MockV3Aggregator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32871,
        "sourceUnit": 33704,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32447,
              "name": "MockV3Aggregator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33703,
              "src": "506:16:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32450,
        "nodeType": "ImportDirective",
        "src": "566:48:35",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32871,
        "sourceUnit": 21125,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32449,
              "name": "console",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 21124,
              "src": "575:7:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32870,
        "nodeType": "ContractDefinition",
        "src": "616:3843:35",
        "nodes": [
          {
            "id": 32456,
            "nodeType": "UsingForDirective",
            "src": "656:49:35",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 32453,
              "name": "EnumerableSet",
              "nameLocations": [
                "662:13:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31033,
              "src": "662:13:35"
            },
            "typeName": {
              "id": 32455,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32454,
                "name": "EnumerableSet.AddressSet",
                "nameLocations": [
                  "680:13:35",
                  "694:10:35"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30746,
                "src": "680:24:35"
              },
              "referencedDeclaration": 30746,
              "src": "680:24:35",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$30746_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "id": 32459,
            "nodeType": "VariableDeclaration",
            "src": "748:26:35",
            "nodes": [],
            "constant": false,
            "functionSelector": "e8e527dc",
            "mutability": "mutable",
            "name": "dscEngine",
            "nameLocation": "765:9:35",
            "scope": 32870,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DSCEngine_$32240",
              "typeString": "contract DSCEngine"
            },
            "typeName": {
              "id": 32458,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32457,
                "name": "DSCEngine",
                "nameLocations": [
                  "748:9:35"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 32240,
                "src": "748:9:35"
              },
              "referencedDeclaration": 32240,
              "src": "748:9:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DSCEngine_$32240",
                "typeString": "contract DSCEngine"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32462,
            "nodeType": "VariableDeclaration",
            "src": "777:34:35",
            "nodes": [],
            "constant": false,
            "functionSelector": "8978a4c6",
            "mutability": "mutable",
            "name": "dsc",
            "nameLocation": "808:3:35",
            "scope": 32870,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DecentralizedStableCoin_$32342",
              "typeString": "contract DecentralizedStableCoin"
            },
            "typeName": {
              "id": 32461,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32460,
                "name": "DecentralizedStableCoin",
                "nameLocations": [
                  "777:23:35"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 32342,
                "src": "777:23:35"
              },
              "referencedDeclaration": 32342,
              "src": "777:23:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DecentralizedStableCoin_$32342",
                "typeString": "contract DecentralizedStableCoin"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32465,
            "nodeType": "VariableDeclaration",
            "src": "814:39:35",
            "nodes": [],
            "constant": false,
            "functionSelector": "42f6fb29",
            "mutability": "mutable",
            "name": "ethUsdPriceFeed",
            "nameLocation": "838:15:35",
            "scope": 32870,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockV3Aggregator_$33703",
              "typeString": "contract MockV3Aggregator"
            },
            "typeName": {
              "id": 32464,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32463,
                "name": "MockV3Aggregator",
                "nameLocations": [
                  "814:16:35"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33703,
                "src": "814:16:35"
              },
              "referencedDeclaration": 33703,
              "src": "814:16:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockV3Aggregator_$33703",
                "typeString": "contract MockV3Aggregator"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32468,
            "nodeType": "VariableDeclaration",
            "src": "856:39:35",
            "nodes": [],
            "constant": false,
            "functionSelector": "8d404e82",
            "mutability": "mutable",
            "name": "btcUsdPriceFeed",
            "nameLocation": "880:15:35",
            "scope": 32870,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockV3Aggregator_$33703",
              "typeString": "contract MockV3Aggregator"
            },
            "typeName": {
              "id": 32467,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32466,
                "name": "MockV3Aggregator",
                "nameLocations": [
                  "856:16:35"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33703,
                "src": "856:16:35"
              },
              "referencedDeclaration": 33703,
              "src": "856:16:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockV3Aggregator_$33703",
                "typeString": "contract MockV3Aggregator"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32471,
            "nodeType": "VariableDeclaration",
            "src": "898:21:35",
            "nodes": [],
            "constant": false,
            "functionSelector": "3fc8cef3",
            "mutability": "mutable",
            "name": "weth",
            "nameLocation": "915:4:35",
            "scope": 32870,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mock_$29610",
              "typeString": "contract ERC20Mock"
            },
            "typeName": {
              "id": 32470,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32469,
                "name": "ERC20Mock",
                "nameLocations": [
                  "898:9:35"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29610,
                "src": "898:9:35"
              },
              "referencedDeclaration": 29610,
              "src": "898:9:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                "typeString": "contract ERC20Mock"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32474,
            "nodeType": "VariableDeclaration",
            "src": "922:21:35",
            "nodes": [],
            "constant": false,
            "functionSelector": "3cdc5389",
            "mutability": "mutable",
            "name": "wbtc",
            "nameLocation": "939:4:35",
            "scope": 32870,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mock_$29610",
              "typeString": "contract ERC20Mock"
            },
            "typeName": {
              "id": 32473,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32472,
                "name": "ERC20Mock",
                "nameLocations": [
                  "922:9:35"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29610,
                "src": "922:9:35"
              },
              "referencedDeclaration": 29610,
              "src": "922:9:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                "typeString": "contract ERC20Mock"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32481,
            "nodeType": "VariableDeclaration",
            "src": "967:58:35",
            "nodes": [],
            "constant": true,
            "functionSelector": "48c0ee2d",
            "mutability": "constant",
            "name": "MAX_DEPOSIT_SIZE",
            "nameLocation": "990:16:35",
            "scope": 32870,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint96",
              "typeString": "uint96"
            },
            "typeName": {
              "id": 32475,
              "name": "uint96",
              "nodeType": "ElementaryTypeName",
              "src": "967:6:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint96",
                "typeString": "uint96"
              }
            },
            "value": {
              "expression": {
                "arguments": [
                  {
                    "id": 32478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1014:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint96_$",
                      "typeString": "type(uint96)"
                    },
                    "typeName": {
                      "id": 32477,
                      "name": "uint96",
                      "nodeType": "ElementaryTypeName",
                      "src": "1014:6:35",
                      "typeDescriptions": {}
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_type$_t_uint96_$",
                      "typeString": "type(uint96)"
                    }
                  ],
                  "id": 32476,
                  "name": "type",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -27,
                  "src": "1009:4:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                    "typeString": "function () pure"
                  }
                },
                "id": 32479,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "functionCall",
                "lValueRequested": false,
                "nameLocations": [],
                "names": [],
                "nodeType": "FunctionCall",
                "src": "1009:12:35",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_meta_type_t_uint96",
                  "typeString": "type(uint96)"
                }
              },
              "id": 32480,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberLocation": "1022:3:35",
              "memberName": "max",
              "nodeType": "MemberAccess",
              "src": "1009:16:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint96",
                "typeString": "uint96"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32548,
            "nodeType": "FunctionDefinition",
            "src": "1029:461:35",
            "nodes": [],
            "body": {
              "id": 32547,
              "nodeType": "Block",
              "src": "1093:397:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32490,
                      "name": "dscEngine",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32459,
                      "src": "1097:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DSCEngine_$32240",
                        "typeString": "contract DSCEngine"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32491,
                      "name": "_dscEngine",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32484,
                      "src": "1109:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DSCEngine_$32240",
                        "typeString": "contract DSCEngine"
                      }
                    },
                    "src": "1097:22:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DSCEngine_$32240",
                      "typeString": "contract DSCEngine"
                    }
                  },
                  "id": 32493,
                  "nodeType": "ExpressionStatement",
                  "src": "1097:22:35"
                },
                {
                  "expression": {
                    "id": 32496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32494,
                      "name": "dsc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32462,
                      "src": "1123:3:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DecentralizedStableCoin_$32342",
                        "typeString": "contract DecentralizedStableCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32495,
                      "name": "_dsc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32487,
                      "src": "1129:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DecentralizedStableCoin_$32342",
                        "typeString": "contract DecentralizedStableCoin"
                      }
                    },
                    "src": "1123:10:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DecentralizedStableCoin_$32342",
                      "typeString": "contract DecentralizedStableCoin"
                    }
                  },
                  "id": 32497,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:10:35"
                },
                {
                  "assignments": [
                    32502
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32502,
                      "mutability": "mutable",
                      "name": "collateralTokens",
                      "nameLocation": "1155:16:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 32547,
                      "src": "1138:33:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 32500,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1138:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 32501,
                        "nodeType": "ArrayTypeName",
                        "src": "1138:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32506,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 32503,
                        "name": "dscEngine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32459,
                        "src": "1174:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DSCEngine_$32240",
                          "typeString": "contract DSCEngine"
                        }
                      },
                      "id": 32504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1184:19:35",
                      "memberName": "getCollateralTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32204,
                      "src": "1174:29:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 32505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1174:31:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1138:67:35"
                },
                {
                  "expression": {
                    "id": 32513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32507,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32471,
                      "src": "1209:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 32509,
                            "name": "collateralTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32502,
                            "src": "1226:16:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 32511,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 32510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1243:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1226:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 32508,
                        "name": "ERC20Mock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29610,
                        "src": "1216:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Mock_$29610_$",
                          "typeString": "type(contract ERC20Mock)"
                        }
                      },
                      "id": 32512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1216:30:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "1209:37:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                      "typeString": "contract ERC20Mock"
                    }
                  },
                  "id": 32514,
                  "nodeType": "ExpressionStatement",
                  "src": "1209:37:35"
                },
                {
                  "expression": {
                    "id": 32521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32515,
                      "name": "wbtc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32474,
                      "src": "1250:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 32517,
                            "name": "collateralTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32502,
                            "src": "1267:16:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 32519,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 32518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1284:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1267:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 32516,
                        "name": "ERC20Mock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29610,
                        "src": "1257:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Mock_$29610_$",
                          "typeString": "type(contract ERC20Mock)"
                        }
                      },
                      "id": 32520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1257:30:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "1250:37:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                      "typeString": "contract ERC20Mock"
                    }
                  },
                  "id": 32522,
                  "nodeType": "ExpressionStatement",
                  "src": "1250:37:35"
                },
                {
                  "expression": {
                    "id": 32533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32523,
                      "name": "ethUsdPriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32465,
                      "src": "1292:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockV3Aggregator_$33703",
                        "typeString": "contract MockV3Aggregator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 32529,
                                  "name": "weth",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32471,
                                  "src": "1377:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                                    "typeString": "contract ERC20Mock"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                                    "typeString": "contract ERC20Mock"
                                  }
                                ],
                                "id": 32528,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1369:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 32527,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1369:7:35",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 32530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1369:13:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 32525,
                              "name": "dscEngine",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32459,
                              "src": "1331:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DSCEngine_$32240",
                                "typeString": "contract DSCEngine"
                              }
                            },
                            "id": 32526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1341:27:35",
                            "memberName": "getCollateralTokenPriceFeed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32227,
                            "src": "1331:37:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view external returns (address)"
                            }
                          },
                          "id": 32531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1331:52:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 32524,
                        "name": "MockV3Aggregator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33703,
                        "src": "1310:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MockV3Aggregator_$33703_$",
                          "typeString": "type(contract MockV3Aggregator)"
                        }
                      },
                      "id": 32532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1310:77:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockV3Aggregator_$33703",
                        "typeString": "contract MockV3Aggregator"
                      }
                    },
                    "src": "1292:95:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockV3Aggregator_$33703",
                      "typeString": "contract MockV3Aggregator"
                    }
                  },
                  "id": 32534,
                  "nodeType": "ExpressionStatement",
                  "src": "1292:95:35"
                },
                {
                  "expression": {
                    "id": 32545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32535,
                      "name": "btcUsdPriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32468,
                      "src": "1391:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockV3Aggregator_$33703",
                        "typeString": "contract MockV3Aggregator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 32541,
                                  "name": "wbtc",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32474,
                                  "src": "1476:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                                    "typeString": "contract ERC20Mock"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                                    "typeString": "contract ERC20Mock"
                                  }
                                ],
                                "id": 32540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1468:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 32539,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1468:7:35",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 32542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1468:13:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 32537,
                              "name": "dscEngine",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32459,
                              "src": "1430:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DSCEngine_$32240",
                                "typeString": "contract DSCEngine"
                              }
                            },
                            "id": 32538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1440:27:35",
                            "memberName": "getCollateralTokenPriceFeed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32227,
                            "src": "1430:37:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view external returns (address)"
                            }
                          },
                          "id": 32543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1430:52:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 32536,
                        "name": "MockV3Aggregator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33703,
                        "src": "1409:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MockV3Aggregator_$33703_$",
                          "typeString": "type(contract MockV3Aggregator)"
                        }
                      },
                      "id": 32544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1409:77:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockV3Aggregator_$33703",
                        "typeString": "contract MockV3Aggregator"
                      }
                    },
                    "src": "1391:95:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockV3Aggregator_$33703",
                      "typeString": "contract MockV3Aggregator"
                    }
                  },
                  "id": 32546,
                  "nodeType": "ExpressionStatement",
                  "src": "1391:95:35"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 32488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32484,
                  "mutability": "mutable",
                  "name": "_dscEngine",
                  "nameLocation": "1051:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32548,
                  "src": "1041:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DSCEngine_$32240",
                    "typeString": "contract DSCEngine"
                  },
                  "typeName": {
                    "id": 32483,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32482,
                      "name": "DSCEngine",
                      "nameLocations": [
                        "1041:9:35"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32240,
                      "src": "1041:9:35"
                    },
                    "referencedDeclaration": 32240,
                    "src": "1041:9:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DSCEngine_$32240",
                      "typeString": "contract DSCEngine"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32487,
                  "mutability": "mutable",
                  "name": "_dsc",
                  "nameLocation": "1087:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32548,
                  "src": "1063:28:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DecentralizedStableCoin_$32342",
                    "typeString": "contract DecentralizedStableCoin"
                  },
                  "typeName": {
                    "id": 32486,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32485,
                      "name": "DecentralizedStableCoin",
                      "nameLocations": [
                        "1063:23:35"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32342,
                      "src": "1063:23:35"
                    },
                    "referencedDeclaration": 32342,
                    "src": "1063:23:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DecentralizedStableCoin_$32342",
                      "typeString": "contract DecentralizedStableCoin"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1040:52:35"
            },
            "returnParameters": {
              "id": 32489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1093:0:35"
            },
            "scope": 32870,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32611,
            "nodeType": "FunctionDefinition",
            "src": "1576:486:35",
            "nodes": [],
            "body": {
              "id": 32610,
              "nodeType": "Block",
              "src": "1674:388:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32555,
                      "name": "amountCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32552,
                      "src": "1703:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32557,
                          "name": "amountCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32552,
                          "src": "1728:16:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 32558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1746:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "id": 32559,
                          "name": "MAX_DEPOSIT_SIZE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32481,
                          "src": "1749:16:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        ],
                        "id": 32556,
                        "name": "bound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          10857,
                          11007
                        ],
                        "referencedDeclaration": 10857,
                        "src": "1722:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 32560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1722:44:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1703:63:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32562,
                  "nodeType": "ExpressionStatement",
                  "src": "1703:63:35"
                },
                {
                  "assignments": [
                    32565
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32565,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "1780:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 32610,
                      "src": "1770:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                        "typeString": "contract ERC20Mock"
                      },
                      "typeName": {
                        "id": 32564,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 32563,
                          "name": "ERC20Mock",
                          "nameLocations": [
                            "1770:9:35"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29610,
                          "src": "1770:9:35"
                        },
                        "referencedDeclaration": 29610,
                        "src": "1770:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32569,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 32567,
                        "name": "collateralSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32550,
                        "src": "1816:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32566,
                      "name": "_getCollateralFromSeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32869,
                      "src": "1793:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_contract$_ERC20Mock_$29610_$",
                        "typeString": "function (uint256) view returns (contract ERC20Mock)"
                      }
                    },
                    "id": 32568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1793:38:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                      "typeString": "contract ERC20Mock"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1770:61:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32573,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1850:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1854:6:35",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1850:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32570,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2396,
                        "src": "1836:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13060",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 32572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1839:10:35",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12678,
                      "src": "1836:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 32575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1836:25:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32576,
                  "nodeType": "ExpressionStatement",
                  "src": "1836:25:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32580,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1881:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1885:6:35",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1881:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32582,
                        "name": "amountCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32552,
                        "src": "1893:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 32577,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32565,
                        "src": "1865:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 32579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1876:4:35",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29564,
                      "src": "1865:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1865:45:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32584,
                  "nodeType": "ExpressionStatement",
                  "src": "1865:45:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32590,
                            "name": "dscEngine",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32459,
                            "src": "1941:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DSCEngine_$32240",
                              "typeString": "contract DSCEngine"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DSCEngine_$32240",
                              "typeString": "contract DSCEngine"
                            }
                          ],
                          "id": 32589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1933:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32588,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1933:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1933:18:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32592,
                        "name": "amountCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32552,
                        "src": "1953:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 32585,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32565,
                        "src": "1914:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 32587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1925:7:35",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29831,
                      "src": "1914:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 32593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1914:56:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32594,
                  "nodeType": "ExpressionStatement",
                  "src": "1914:56:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32600,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32565,
                            "src": "2010:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 32599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2002:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32598,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2002:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2002:19:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32602,
                        "name": "amountCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32552,
                        "src": "2023:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 32595,
                        "name": "dscEngine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32459,
                        "src": "1974:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DSCEngine_$32240",
                          "typeString": "contract DSCEngine"
                        }
                      },
                      "id": 32597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1984:17:35",
                      "memberName": "depositCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31789,
                      "src": "1974:27:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1974:66:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32604,
                  "nodeType": "ExpressionStatement",
                  "src": "1974:66:35"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 32605,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2396,
                        "src": "2044:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13060",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 32607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2047:9:35",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12695,
                      "src": "2044:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 32608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2044:14:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32609,
                  "nodeType": "ExpressionStatement",
                  "src": "2044:14:35"
                }
              ]
            },
            "functionSelector": "6f63eb5f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintAndDepositCollateral",
            "nameLocation": "1585:24:35",
            "parameters": {
              "id": 32553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32550,
                  "mutability": "mutable",
                  "name": "collateralSeed",
                  "nameLocation": "1621:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32611,
                  "src": "1613:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1613:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32552,
                  "mutability": "mutable",
                  "name": "amountCollateral",
                  "nameLocation": "1647:16:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32611,
                  "src": "1639:24:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1639:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1609:57:35"
            },
            "returnParameters": {
              "id": 32554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1674:0:35"
            },
            "scope": 32870,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32662,
            "nodeType": "FunctionDefinition",
            "src": "2065:446:35",
            "nodes": [],
            "body": {
              "id": 32661,
              "nodeType": "Block",
              "src": "2155:356:35",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32620,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "2169:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 32661,
                      "src": "2159:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                        "typeString": "contract ERC20Mock"
                      },
                      "typeName": {
                        "id": 32619,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 32618,
                          "name": "ERC20Mock",
                          "nameLocations": [
                            "2159:9:35"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29610,
                          "src": "2159:9:35"
                        },
                        "referencedDeclaration": 29610,
                        "src": "2159:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32624,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 32622,
                        "name": "collateralSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32613,
                        "src": "2205:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32621,
                      "name": "_getCollateralFromSeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32869,
                      "src": "2182:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_contract$_ERC20Mock_$29610_$",
                        "typeString": "function (uint256) view returns (contract ERC20Mock)"
                      }
                    },
                    "id": 32623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2182:38:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                      "typeString": "contract ERC20Mock"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2159:61:35"
                },
                {
                  "assignments": [
                    32626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32626,
                      "mutability": "mutable",
                      "name": "maxCollateral",
                      "nameLocation": "2232:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 32661,
                      "src": "2224:21:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32625,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2224:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32636,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32629,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2289:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2293:6:35",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2289:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32633,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32620,
                            "src": "2312:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 32632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2304:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32631,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2304:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2304:19:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32627,
                        "name": "dscEngine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32459,
                        "src": "2248:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DSCEngine_$32240",
                          "typeString": "contract DSCEngine"
                        }
                      },
                      "id": 32628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2258:26:35",
                      "memberName": "getCollateralBalanceOfUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32072,
                      "src": "2248:36:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 32635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2248:79:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2224:103:35"
                },
                {
                  "expression": {
                    "id": 32643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32637,
                      "name": "amountCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32615,
                      "src": "2332:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32639,
                          "name": "amountCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32615,
                          "src": "2357:16:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 32640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2375:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 32641,
                          "name": "maxCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32626,
                          "src": "2378:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 32638,
                        "name": "bound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          10857,
                          11007
                        ],
                        "referencedDeclaration": 10857,
                        "src": "2351:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 32642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2351:41:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2332:60:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32644,
                  "nodeType": "ExpressionStatement",
                  "src": "2332:60:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 32647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 32645,
                      "name": "amountCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32615,
                      "src": "2400:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 32646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2420:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2400:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32650,
                  "nodeType": "IfStatement",
                  "src": "2396:43:35",
                  "trueBody": {
                    "id": 32649,
                    "nodeType": "Block",
                    "src": "2423:16:35",
                    "statements": [
                      {
                        "functionReturnParameters": 32617,
                        "id": 32648,
                        "nodeType": "Return",
                        "src": "2428:7:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32656,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32620,
                            "src": "2477:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 32655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2469:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32654,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2469:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2469:19:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32658,
                        "name": "amountCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32615,
                        "src": "2490:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 32651,
                        "name": "dscEngine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32459,
                        "src": "2442:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DSCEngine_$32240",
                          "typeString": "contract DSCEngine"
                        }
                      },
                      "id": 32653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2452:16:35",
                      "memberName": "redeemCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31592,
                      "src": "2442:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2442:65:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32660,
                  "nodeType": "ExpressionStatement",
                  "src": "2442:65:35"
                }
              ]
            },
            "functionSelector": "04d45c4f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemCollateral",
            "nameLocation": "2074:16:35",
            "parameters": {
              "id": 32616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32613,
                  "mutability": "mutable",
                  "name": "collateralSeed",
                  "nameLocation": "2102:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32662,
                  "src": "2094:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32612,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2094:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32615,
                  "mutability": "mutable",
                  "name": "amountCollateral",
                  "nameLocation": "2128:16:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32662,
                  "src": "2120:24:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2120:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2090:57:35"
            },
            "returnParameters": {
              "id": 32617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2155:0:35"
            },
            "scope": 32870,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32692,
            "nodeType": "FunctionDefinition",
            "src": "2514:207:35",
            "nodes": [],
            "body": {
              "id": 32691,
              "nodeType": "Block",
              "src": "2557:164:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32667,
                      "name": "amountDsc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32664,
                      "src": "2588:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32669,
                          "name": "amountDsc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32664,
                          "src": "2606:9:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 32670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2617:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 32673,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2634:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 32674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2638:6:35",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2634:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 32671,
                              "name": "dsc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32462,
                              "src": "2620:3:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DecentralizedStableCoin_$32342",
                                "typeString": "contract DecentralizedStableCoin"
                              }
                            },
                            "id": 32672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2624:9:35",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29763,
                            "src": "2620:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 32675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2620:25:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 32668,
                        "name": "bound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          10857,
                          11007
                        ],
                        "referencedDeclaration": 10857,
                        "src": "2600:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 32676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2600:46:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2588:58:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32678,
                  "nodeType": "ExpressionStatement",
                  "src": "2588:58:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 32681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 32679,
                      "name": "amountDsc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32664,
                      "src": "2654:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 32680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2667:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2654:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32684,
                  "nodeType": "IfStatement",
                  "src": "2650:36:35",
                  "trueBody": {
                    "id": 32683,
                    "nodeType": "Block",
                    "src": "2670:16:35",
                    "statements": [
                      {
                        "functionReturnParameters": 32666,
                        "id": 32682,
                        "nodeType": "Return",
                        "src": "2675:7:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32688,
                        "name": "amountDsc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32664,
                        "src": "2707:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 32685,
                        "name": "dscEngine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32459,
                        "src": "2689:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DSCEngine_$32240",
                          "typeString": "contract DSCEngine"
                        }
                      },
                      "id": 32687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2699:7:35",
                      "memberName": "burnDsc",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31614,
                      "src": "2689:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 32689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2689:28:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32690,
                  "nodeType": "ExpressionStatement",
                  "src": "2689:28:35"
                }
              ]
            },
            "functionSelector": "f6876608",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnDsc",
            "nameLocation": "2523:7:35",
            "parameters": {
              "id": 32665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32664,
                  "mutability": "mutable",
                  "name": "amountDsc",
                  "nameLocation": "2539:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32692,
                  "src": "2531:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2531:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2530:19:35"
            },
            "returnParameters": {
              "id": 32666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2557:0:35"
            },
            "scope": 32870,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32754,
            "nodeType": "FunctionDefinition",
            "src": "2948:536:35",
            "nodes": [],
            "body": {
              "id": 32753,
              "nodeType": "Block",
              "src": "3056:428:35",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32702,
                      "mutability": "mutable",
                      "name": "minHealthFactor",
                      "nameLocation": "3068:15:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 32753,
                      "src": "3060:23:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32701,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3060:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32706,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 32703,
                        "name": "dscEngine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32459,
                        "src": "3086:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DSCEngine_$32240",
                          "typeString": "contract DSCEngine"
                        }
                      },
                      "id": 32704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3096:18:35",
                      "memberName": "getMinHealthFactor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32195,
                      "src": "3086:28:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$__$returns$_t_uint256_$",
                        "typeString": "function () pure external returns (uint256)"
                      }
                    },
                    "id": 32705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3086:30:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3060:56:35"
                },
                {
                  "assignments": [
                    32708
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32708,
                      "mutability": "mutable",
                      "name": "userHealthFactor",
                      "nameLocation": "3128:16:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 32753,
                      "src": "3120:24:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32707,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3120:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32713,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 32711,
                        "name": "userToBeLiquidated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32696,
                        "src": "3177:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32709,
                        "name": "dscEngine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32459,
                        "src": "3147:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DSCEngine_$32240",
                          "typeString": "contract DSCEngine"
                        }
                      },
                      "id": 32710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3157:15:35",
                      "memberName": "getHealthFactor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32239,
                      "src": "3147:25:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 32712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3147:52:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3120:79:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 32716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 32714,
                      "name": "userHealthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32708,
                      "src": "3207:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 32715,
                      "name": "minHealthFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32702,
                      "src": "3227:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3207:35:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32719,
                  "nodeType": "IfStatement",
                  "src": "3203:57:35",
                  "trueBody": {
                    "id": 32718,
                    "nodeType": "Block",
                    "src": "3244:16:35",
                    "statements": [
                      {
                        "functionReturnParameters": 32700,
                        "id": 32717,
                        "nodeType": "Return",
                        "src": "3249:7:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 32733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32720,
                      "name": "debtToCover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32698,
                      "src": "3263:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32722,
                          "name": "debtToCover",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32698,
                          "src": "3283:11:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 32723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3296:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 32728,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3312:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint96_$",
                                      "typeString": "type(uint96)"
                                    },
                                    "typeName": {
                                      "id": 32727,
                                      "name": "uint96",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3312:6:35",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint96_$",
                                      "typeString": "type(uint96)"
                                    }
                                  ],
                                  "id": 32726,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "3307:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 32729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3307:12:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint96",
                                  "typeString": "type(uint96)"
                                }
                              },
                              "id": 32730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3320:3:35",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "3307:16:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 32725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3299:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 32724,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3299:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3299:25:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 32721,
                        "name": "bound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          10857,
                          11007
                        ],
                        "referencedDeclaration": 10857,
                        "src": "3277:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 32732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3277:48:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3263:62:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32734,
                  "nodeType": "ExpressionStatement",
                  "src": "3263:62:35"
                },
                {
                  "assignments": [
                    32737
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32737,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "3339:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 32753,
                      "src": "3329:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                        "typeString": "contract ERC20Mock"
                      },
                      "typeName": {
                        "id": 32736,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 32735,
                          "name": "ERC20Mock",
                          "nameLocations": [
                            "3329:9:35"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29610,
                          "src": "3329:9:35"
                        },
                        "referencedDeclaration": 29610,
                        "src": "3329:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32741,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 32739,
                        "name": "collateralSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32694,
                        "src": "3375:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32738,
                      "name": "_getCollateralFromSeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32869,
                      "src": "3352:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_contract$_ERC20Mock_$29610_$",
                        "typeString": "function (uint256) view returns (contract ERC20Mock)"
                      }
                    },
                    "id": 32740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3352:38:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                      "typeString": "contract ERC20Mock"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3329:61:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32747,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32737,
                            "src": "3426:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 32746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3418:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32745,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3418:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3418:19:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32749,
                        "name": "userToBeLiquidated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32696,
                        "src": "3442:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32750,
                        "name": "debtToCover",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32698,
                        "src": "3465:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 32742,
                        "name": "dscEngine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32459,
                        "src": "3394:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DSCEngine_$32240",
                          "typeString": "contract DSCEngine"
                        }
                      },
                      "id": 32744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3404:9:35",
                      "memberName": "liquidate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31695,
                      "src": "3394:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 32751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3394:86:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32752,
                  "nodeType": "ExpressionStatement",
                  "src": "3394:86:35"
                }
              ]
            },
            "functionSelector": "79bd1eac",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidate",
            "nameLocation": "2957:9:35",
            "parameters": {
              "id": 32699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32694,
                  "mutability": "mutable",
                  "name": "collateralSeed",
                  "nameLocation": "2978:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32754,
                  "src": "2970:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2970:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32696,
                  "mutability": "mutable",
                  "name": "userToBeLiquidated",
                  "nameLocation": "3004:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32754,
                  "src": "2996:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32695,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2996:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32698,
                  "mutability": "mutable",
                  "name": "debtToCover",
                  "nameLocation": "3034:11:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32754,
                  "src": "3026:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3026:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2966:82:35"
            },
            "returnParameters": {
              "id": 32700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3056:0:35"
            },
            "scope": 32870,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32803,
            "nodeType": "FunctionDefinition",
            "src": "3580:230:35",
            "nodes": [],
            "body": {
              "id": 32802,
              "nodeType": "Block",
              "src": "3639:171:35",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 32766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 32761,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32758,
                      "src": "3647:2:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 32764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3661:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 32763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3653:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 32762,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3653:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 32765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3653:10:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3647:16:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32775,
                  "nodeType": "IfStatement",
                  "src": "3643:47:35",
                  "trueBody": {
                    "id": 32774,
                    "nodeType": "Block",
                    "src": "3665:25:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 32772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 32767,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32758,
                            "src": "3670:2:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 32770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3683:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 32769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3675:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 32768,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3675:7:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3675:10:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3670:15:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 32773,
                        "nodeType": "ExpressionStatement",
                        "src": "3670:15:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 32786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32776,
                      "name": "amountDsc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32756,
                      "src": "3693:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32778,
                          "name": "amountDsc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32756,
                          "src": "3711:9:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 32779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3722:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 32782,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3739:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 32783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3743:6:35",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3739:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 32780,
                              "name": "dsc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32462,
                              "src": "3725:3:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DecentralizedStableCoin_$32342",
                                "typeString": "contract DecentralizedStableCoin"
                              }
                            },
                            "id": 32781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3729:9:35",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29763,
                            "src": "3725:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 32784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3725:25:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 32777,
                        "name": "bound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          10857,
                          11007
                        ],
                        "referencedDeclaration": 10857,
                        "src": "3705:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 32785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3705:46:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3693:58:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32787,
                  "nodeType": "ExpressionStatement",
                  "src": "3693:58:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32791,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3764:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3768:6:35",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3764:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32788,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2396,
                        "src": "3755:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13060",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 32790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3758:5:35",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12673,
                      "src": "3755:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 32793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3755:20:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32794,
                  "nodeType": "ExpressionStatement",
                  "src": "3755:20:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32798,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32758,
                        "src": "3792:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32799,
                        "name": "amountDsc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32756,
                        "src": "3796:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 32795,
                        "name": "dsc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32462,
                        "src": "3779:3:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DecentralizedStableCoin_$32342",
                          "typeString": "contract DecentralizedStableCoin"
                        }
                      },
                      "id": 32797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3783:8:35",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29788,
                      "src": "3779:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 32800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3779:27:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 32801,
                  "nodeType": "ExpressionStatement",
                  "src": "3779:27:35"
                }
              ]
            },
            "functionSelector": "7688232f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferDsc",
            "nameLocation": "3589:11:35",
            "parameters": {
              "id": 32759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32756,
                  "mutability": "mutable",
                  "name": "amountDsc",
                  "nameLocation": "3609:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32803,
                  "src": "3601:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32755,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3601:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32758,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3628:2:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32803,
                  "src": "3620:10:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3620:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3600:31:35"
            },
            "returnParameters": {
              "id": 32760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3639:0:35"
            },
            "scope": 32870,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32847,
            "nodeType": "FunctionDefinition",
            "src": "3893:361:35",
            "nodes": [],
            "body": {
              "id": 32846,
              "nodeType": "Block",
              "src": "3979:275:35",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32811
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32811,
                      "mutability": "mutable",
                      "name": "intNewPrice",
                      "nameLocation": "3990:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 32846,
                      "src": "3983:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 32810,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3983:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32819,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32816,
                            "name": "newPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32805,
                            "src": "4019:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          ],
                          "id": 32815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4011:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 32814,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4011:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4011:17:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4004:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int256_$",
                        "typeString": "type(int256)"
                      },
                      "typeName": {
                        "id": 32812,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4004:6:35",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 32818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4004:25:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3983:46:35"
                },
                {
                  "assignments": [
                    32822
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32822,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "4043:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 32846,
                      "src": "4033:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                        "typeString": "contract ERC20Mock"
                      },
                      "typeName": {
                        "id": 32821,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 32820,
                          "name": "ERC20Mock",
                          "nameLocations": [
                            "4033:9:35"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29610,
                          "src": "4033:9:35"
                        },
                        "referencedDeclaration": 29610,
                        "src": "4033:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32826,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 32824,
                        "name": "collateralSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32807,
                        "src": "4079:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32823,
                      "name": "_getCollateralFromSeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32869,
                      "src": "4056:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_contract$_ERC20Mock_$29610_$",
                        "typeString": "function (uint256) view returns (contract ERC20Mock)"
                      }
                    },
                    "id": 32825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4056:38:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                      "typeString": "contract ERC20Mock"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4033:61:35"
                },
                {
                  "assignments": [
                    32829
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32829,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "4115:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 32846,
                      "src": "4098:26:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockV3Aggregator_$33703",
                        "typeString": "contract MockV3Aggregator"
                      },
                      "typeName": {
                        "id": 32828,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 32827,
                          "name": "MockV3Aggregator",
                          "nameLocations": [
                            "4098:16:35"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33703,
                          "src": "4098:16:35"
                        },
                        "referencedDeclaration": 33703,
                        "src": "4098:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockV3Aggregator_$33703",
                          "typeString": "contract MockV3Aggregator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32839,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 32835,
                                "name": "collateral",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32822,
                                "src": "4194:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                                  "typeString": "contract ERC20Mock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                                  "typeString": "contract ERC20Mock"
                                }
                              ],
                              "id": 32834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4186:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 32833,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4186:7:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 32836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4186:19:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 32831,
                            "name": "dscEngine",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32459,
                            "src": "4148:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DSCEngine_$32240",
                              "typeString": "contract DSCEngine"
                            }
                          },
                          "id": 32832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4158:27:35",
                          "memberName": "getCollateralTokenPriceFeed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32227,
                          "src": "4148:37:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                            "typeString": "function (address) view external returns (address)"
                          }
                        },
                        "id": 32837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4148:58:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 32830,
                      "name": "MockV3Aggregator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33703,
                      "src": "4127:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_MockV3Aggregator_$33703_$",
                        "typeString": "type(contract MockV3Aggregator)"
                      }
                    },
                    "id": 32838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4127:83:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockV3Aggregator_$33703",
                      "typeString": "contract MockV3Aggregator"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4098:112:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32843,
                        "name": "intNewPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32811,
                        "src": "4238:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 32840,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32829,
                        "src": "4215:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockV3Aggregator_$33703",
                          "typeString": "contract MockV3Aggregator"
                        }
                      },
                      "id": 32842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4225:12:35",
                      "memberName": "updateAnswer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33590,
                      "src": "4215:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_int256_$returns$__$",
                        "typeString": "function (int256) external"
                      }
                    },
                    "id": 32844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4215:35:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32845,
                  "nodeType": "ExpressionStatement",
                  "src": "4215:35:35"
                }
              ]
            },
            "functionSelector": "fbd0a1ee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateCollateralPrice",
            "nameLocation": "3902:21:35",
            "parameters": {
              "id": 32808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32805,
                  "mutability": "mutable",
                  "name": "newPrice",
                  "nameLocation": "3934:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32847,
                  "src": "3927:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 32804,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3927:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32807,
                  "mutability": "mutable",
                  "name": "collateralSeed",
                  "nameLocation": "3954:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32847,
                  "src": "3946:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3946:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3923:48:35"
            },
            "returnParameters": {
              "id": 32809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3979:0:35"
            },
            "scope": 32870,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32869,
            "nodeType": "FunctionDefinition",
            "src": "4279:178:35",
            "nodes": [],
            "body": {
              "id": 32868,
              "nodeType": "Block",
              "src": "4373:84:35",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 32860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 32858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32856,
                        "name": "collateralSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32850,
                        "src": "4381:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 32857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4398:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "4381:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 32859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4403:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4381:23:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 32866,
                    "nodeType": "Block",
                    "src": "4433:21:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 32864,
                          "name": "wbtc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32474,
                          "src": "4445:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        "functionReturnParameters": 32855,
                        "id": 32865,
                        "nodeType": "Return",
                        "src": "4438:11:35"
                      }
                    ]
                  },
                  "id": 32867,
                  "nodeType": "IfStatement",
                  "src": "4377:77:35",
                  "trueBody": {
                    "id": 32863,
                    "nodeType": "Block",
                    "src": "4406:21:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 32861,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32471,
                          "src": "4418:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        "functionReturnParameters": 32855,
                        "id": 32862,
                        "nodeType": "Return",
                        "src": "4411:11:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 32848,
              "nodeType": "StructuredDocumentation",
              "src": "4257:20:35",
              "text": "Helper Functions"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getCollateralFromSeed",
            "nameLocation": "4288:22:35",
            "parameters": {
              "id": 32851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32850,
                  "mutability": "mutable",
                  "name": "collateralSeed",
                  "nameLocation": "4322:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 32869,
                  "src": "4314:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4314:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4310:29:35"
            },
            "returnParameters": {
              "id": 32855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32854,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32869,
                  "src": "4362:9:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                    "typeString": "contract ERC20Mock"
                  },
                  "typeName": {
                    "id": 32853,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32852,
                      "name": "ERC20Mock",
                      "nameLocations": [
                        "4362:9:35"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29610,
                      "src": "4362:9:35"
                    },
                    "referencedDeclaration": 29610,
                    "src": "4362:9:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mock_$29610",
                      "typeString": "contract ERC20Mock"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4361:11:35"
            },
            "scope": 32870,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32451,
              "name": "Test",
              "nameLocations": [
                "648:4:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11554,
              "src": "648:4:35"
            },
            "id": 32452,
            "nodeType": "InheritanceSpecifier",
            "src": "648:4:35"
          }
        ],
        "canonicalName": "StopOnRevertHandler",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32870,
          11554,
          2403,
          2400,
          11505,
          7263,
          6973,
          6294,
          4561,
          3867,
          2337
        ],
        "name": "StopOnRevertHandler",
        "nameLocation": "625:19:35",
        "scope": 32871,
        "usedErrors": [],
        "usedEvents": [
          51,
          55,
          59,
          63,
          67,
          71,
          75,
          79,
          85,
          91,
          99,
          107,
          113,
          119,
          125,
          131,
          2462,
          2467,
          2472,
          2479,
          2486,
          2493
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 35
}